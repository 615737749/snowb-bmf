{"version":3,"sources":["store/ui.ts","workers/RectanglePacker.worker.ts","utils/is.ts","utils/getTextBaselines.ts","utils/use.ts","store/base/ui.ts","utils/fontStyleStringify.ts","utils/updateFontFace.ts","store/base/gradient.ts","store/base/font.ts","store/base/patternTexture.ts","store/base/fill.ts","utils/base64ToArrayBuffer.ts","utils/getTextSize.ts","store/base/stroke.ts","store/base/shadow.ts","store/base/style.ts","store/base/layout.ts","store/base/metric.ts","utils/trimImageData.ts","utils/getPointOnCircle.ts","utils/getCanvasStyle.ts","utils/getGlyphInfo.ts","store/base/glyphBase.ts","store/base/glyphFont.ts","store/base/glyphImage.ts","utils/getTrimImageInfo.ts","store/project.ts","store/workspace.ts","store/index.ts","app/theme/props.ts","app/theme/overrides.ts","app/theme/index.ts","store/hooks.ts","utils/readFile.ts","app/layout/LeftBar/modules/Font/FontFamily.tsx","app/components/GridInput/GridInput.tsx","app/layout/LeftBar/modules/Font/FontSize.tsx","app/layout/LeftBar/modules/Font/LineHeight.tsx","app/layout/LeftBar/modules/Font/Font.tsx","app/layout/LeftBar/modules/Glyphs/Glyphs.tsx","app/layout/LeftBar/modules/PackConfig/Padding.tsx","app/layout/LeftBar/modules/PackConfig/Spacing.tsx","app/layout/LeftBar/modules/PackConfig/AutoPack.tsx","app/layout/LeftBar/modules/PackConfig/FixedSize.tsx","app/layout/LeftBar/modules/PackConfig/PackWidth.tsx","app/layout/LeftBar/modules/PackConfig/PackHeight.tsx","app/layout/LeftBar/modules/PackConfig/PackConfig.tsx","app/layout/common/FormAdjustMetric/FormAdjustMetric.tsx","app/layout/LeftBar/modules/GlobalMetric/GlobalMetric.tsx","app/layout/LeftBar/LeftBar.tsx","utils/formatStr.ts","file/getXmlString.ts","file/getLuaString.ts","file/getTextString.ts","file/toOutputInfo.ts","proto/project.js","file/prefix.ts","utils/getVersionNumber.ts","file/updateOldProject.ts","file/decodeProject.ts","app/layout/TitleBar/ExportButton.tsx","app/layout/TitleBar/TitleBar.tsx","file/saveProject.ts","file/outputFile.ts","app/components/WrappedSketchPicker/WrappedSketchPicker.tsx","app/components/ColorInput/ColorInput.tsx","app/layout/common/FormColor/FormColor.tsx","app/components/GradientPicker/ColorStop.tsx","app/components/GradientPicker/ColorStopsHolder.tsx","app/components/Palette/Palette.tsx","app/components/GradientPicker/GradientBuilder.tsx","app/components/AnglePicker/AnglePicker.tsx","app/layout/common/FormAngle/FormAngle.tsx","app/layout/common/FormGradient/FormGradient.tsx","app/layout/common/FormImage/FileSelector.tsx","app/layout/common/FormImage/FormImage.tsx","app/layout/common/FormFill/FormFill.tsx","app/layout/RightBar/modules/Fill/Fill.tsx","app/layout/RightBar/modules/Stroke/Stroke.tsx","app/layout/RightBar/modules/Shadow/Shadow.tsx","app/layout/RightBar/modules/BackgroundColor/BackgroundColor.tsx","app/layout/RightBar/RightBar.tsx","app/hooks/useWheel.ts","app/hooks/useSpaceDrag.ts","app/layout/WorkSpace/modules/PackView/PackCanvas.tsx","app/layout/WorkSpace/modules/PackView/PackSizeBar.tsx","app/layout/WorkSpace/modules/PackView/PackView.tsx","app/layout/WorkSpace/modules/Preview/LetterList.tsx","app/layout/WorkSpace/modules/Preview/PreviewCanvas.tsx","app/layout/WorkSpace/modules/Preview/getPreviewCanvas.ts","app/layout/WorkSpace/modules/Preview/PreviewText.tsx","app/layout/WorkSpace/modules/Preview/PreviewMertic.tsx","app/layout/WorkSpace/modules/Preview/PreviewKerning.tsx","app/layout/WorkSpace/modules/Preview/Preview.tsx","app/layout/WorkSpace/modules/MainView/MainView.tsx","app/layout/WorkSpace/modules/ProjectTabs/ProjectTab.tsx","app/layout/WorkSpace/modules/ProjectTabs/ProjectTabs.tsx","app/layout/WorkSpace/modules/ControlerBar/ControlerBar.tsx","app/layout/WorkSpace/modules/ImageGlyphList/ImageGlyph.tsx","app/layout/WorkSpace/modules/ImageGlyphList/ImageGlyphList.tsx","app/layout/WorkSpace/modules/ImageGlyphList/LayerBox.tsx","app/layout/WorkSpace/WorkSpace.tsx","app/layout/Wrap/UpdateToast.tsx","app/layout/Wrap/Wrap.tsx","app/App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["Ui","action","bound","num","this","globalLoader","observable","Worker_fn","Worker","canvas","is","n","Number","isNaN","use","a","b","ui","previewText","offsetX","Math","min","max","width","offsetY","height","scale","trans","reOffset","text","showPreview","previewScale","previewOffsetX","previewOffsetY","letter","next","selectLetter","selectNextLetter","packFailed","defaultConfig","fontSize","fontFamily","fontStyleStringify","fontStyleConfig","config","arr","fontStyle","push","fontVariant","fontWeight","lineHeight","join","fontTargeCache","loadDiv","GradientType","Font","ref","font","size","byteLength","setFont","updateBaseines","middle","hanging","top","alphabetic","ideographic","bottom","bls","styleConig","document","createElement","ctx","getContext","Error","textBaseline","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","getTextBaselines","family","buffer","opentype","parse","lowMemory","e","Promise","resolve","names","fontName","postScriptName","Object","keys","url","URL","createObjectURL","Blob","name","cssNode","createTextNode","appendChild","textNode","head","style","position","left","opacity","pointerEvents","body","setTimeout","updateFontFace","then","runInAction","computed","Gradient","shallow","gradient","type","angle","palette","forEach","item","id","nextId","addColor","offset","color","map","ids","length","FillType","PatternTexture","pt","repetition","setImage","src","img","Image","onload","image","base64","binaryString","atob","len","bytes","Uint8Array","i","charCodeAt","base64ToArrayBuffer","Fill","fill","patternTexture","Stroke","stroke","lineCap","lineJoin","Shadow","shadow","blur","Style","useShadow","useStroke","bgColor","Layout","layout","padding","spacing","power","auto","fixedSize","Metric","metric","xAdvance","xOffset","yOffset","trimImageData","imageData","threshold","data","topTrim","bottomTrim","leftTrim","rightTrim","topStatus","bottomStatus","leftStatus","rightStatus","h","ceil","w","j","trimOffsetLeft","trimOffsetTop","getPointOnCircle","x","y","r","cos","PI","sin","getCanvasStyle","cx","cy","startPoint","endPoint","createLinearGradient","createRadialGradient","addColorStop","createPattern","naturalWidth","naturalHeight","textureCtx","drawImage","getGlyphInfo","trimInfo","textAlign","testA","actualBoundingBoxLeft","parseInt","fontWidth","fontHeight","trimOffsetRight","trimOffsetBottom","testB","actualBoundingBoxRight","getTextSize","lineWidth","addX","addY","styleX","styleY","abs","strokeStyle","strokeText","fillStyle","fillText","cvs","newCtx","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","imgData","getImageData","styleTrimInfo","putImageData","GlyphBase","glyph","adjustMetric","kerning","set","Map","GlyphFont","galyphFont","textStyle","setGlyphInfo","glyphInfo","source","GlyphImage","glyphImage","fileName","fileType","initImage","getTrimImageInfo","isSelect","selected","Project","project","worker","packStart","packTimer","idleId","Date","now","globalAdjustMetric","glyphs","value","key","glyphImages","has","addGlyphs","addAutoRun","pack","terminate","isPacking","RectanglePacker","packList","rectangleList","sort","packer","GuillotineBinPack","list","filter","InsertSizes","setPack","usedRectangles","addEventListener","messageEvent","postMessage","failedList","imgList","maxWidth","maxHeight","rectangle","find","gi","get","setPackFailed","setSize","cancel","tasks","runTasks","request","deadline","tr","timeRemaining","start","shift","window","clearTimeout","isName","obj","deepObserve","throttlePack","change","packStyle","str","oldText","replace","currentList","Array","from","Set","split","oldList","diffList","concat","t","includes","delete","all","idx","indexOf","splice","packCanvas","glyphList","isUnEmpty","Workspace","activeId","projectList","namedList","p","named","match","setName","configure","enforceActions","computedRequiresReaction","props","MuiButton","MuiButtonBase","disableRipple","MuiFilledInput","margin","MuiFormControl","MuiFormHelperText","MuiIconButton","MuiInputBase","MuiInputLabel","MuiListItem","dense","MuiOutlinedInput","MuiFab","MuiTable","MuiTextField","MuiToolbar","variant","overrides","MuiCssBaseline","html","marginLeft","background","input","theme","createMuiTheme","primary","main","secondary","paper","default","activityBar","titleBar","sidebar","common","black","white","hover","bgPixel","backgroundColor","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","typography","transitions","create","shape","borderRadius","responsiveFontSizes","useStores","useContext","MobXProviderContext","useWorkspace","workspace","useLayout","currentProject","useProject","useStyle","useFont","useProjectUi","readFile","file","arrayBuffer","reader","FileReader","readAsArrayBuffer","target","result","observer","useState","loading","setLoading","Button","component","fullWidth","startIcon","CircularProgress","disabled","hidden","onChange","event","files","arrBuf","ArrayBuffer","catch","alert","message","accept","GridInput","before","children","after","childrenWidth","Grid","container","wrap","justify","alignItems","xs","Typography","noWrap","align","Input","inputProps","setLineHeight","step","Box","paddingX","marginY","setText","isIME","setIsIME","inputText","setInputText","TextField","multiline","rows","spellCheck","onCompositionStart","onCompositionEnd","setPadding","setSpacing","setAuto","Checkbox","checked","setFixedSize","setWidth","setHeight","PackConfig","FormAdjustMetric","setXAdvance","setXOffset","setYOffset","getHandle","handleSet","useStyles","makeStyles","createStyles","root","overflow","LeftBar","classes","bgcolor","display","flexDirection","className","boxShadow","flex","Divider","formatStr","matchs","returns","storeToXml","bmfont","info","pages","chars","kernings","parser","DOMParser","xmlDOM","implementation","createDocument","infoDoc","parseFromString","documentElement","childNodes","commonDoc","pagesDoc","charsDoc","char","charDoc","count","kerningsDoc","kerningDoc","XMLSerializer","serializeToString","getLuaString","charset","charsCount","kerningsCounts","getTextString","toOutputInfo","fontScale","unitsPerEm","face","bold","italic","unicode","stretchH","smooth","aa","base","scaleW","scaleH","packed","xoffset","yoffset","xadvance","page","chnl","amount","round","getKerningValue","charToGlyphIndex","first","second","$Reader","$protobuf","$Writer","$util","$root","prefix","properties","prototype","encode","writer","hasOwnProperty","call","uint32","sint32","encodeDelimited","ldelim","decode","end","undefined","pos","tag","skipType","decodeDelimited","verify","isInteger","fromObject","object","toObject","options","defaults","toJSON","constructor","toJSONOptions","GradientColor","int32","string","isString","String","emptyArray","float","fork","isArray","error","TypeError","arrays","json","isFinite","newBuffer","double","slice","emptyObject","end2","tag2","isObject","keys2","objects","bool","Boolean","Long","fromBits","int64","low","high","fromValue","unsigned","LongBits","toNumber","long","longs","toString","s","getVersionNumber","version","reverse","reduce","previousValue","currentValue","currentIndex","pow","10000","verions","verion","updateOldProject","v","toOriginBuffer","protoProject","imgKerning","k","gl","glyphKerning","ExportButton","onSave","open","setOpen","val","setVal","ext","handleClickOpen","handleClose","useEffect","hotkeys","unbind","title","onClick","Dialog","onClose","DialogTitle","DialogContent","dividers","Select","displayEmpty","MenuItem","toUpperCase","DialogActions","autoFocus","zIndex","appBar","appName","marginRight","appNameSup","btn","textTransform","toast","setToast","worckSpace","labelRef","useRef","addProject","handleNewProject","useCallback","preventDefault","handleSaveProject","proto","projectBuffer","finish","perfixBuffer","saveAs","saveProject","toJS","handleSaveBitmapFont","zip","JSZip","getXmlString","toBlob","blob","generateAsync","content","outputFile","handleOpenProject","current","click","perfixName","latestVersionBuffer","u8","filePrefix","versionBuffer","isSbf","currentVersion","fileVersion","decodeProject","err","IconButton","href","Snackbar","anchorOrigin","vertical","horizontal","picker","borderColor","divider","border","WrappedSketchPicker","anchorEl","placement","pickerStyle","useTheme","shadows","alpha","usePickerStyle","Popper","styles","rgb","g","swatch","cursor","ColorInput","ClickAwayListener","mouseEvent","onClickAway","aria-hidden","FormColor","borderWidth","isActive","borderStyle","dark","activeColor","grey","ColorStop","divProps","clsx","ColorStopsHolder","onAdd","onUpdate","onSelect","setStartPoint","isDragging","setIsDragging","rootRef","clientWidth","handleMouseMove","buttons","findIndex","paletteItem","newPalette","clientY","clientX","handleMouseUp","stopPropagation","removeEventListener","onMouseDown","getBoundingClientRect","handleMouseDown","svg","verticalAlign","Palette","random","substr","sortedPalette","x1","y1","x2","y2","stopColor","GradientBuilder","rootEl","oldPalette","setOldPalette","setActiveId","setActiveColor","isAdd","setIsAdd","newIds","oldIds","diff","handleUpdate","isDelete","updateItem","right","offsetSpace","leftColor","Color","rightColor","red","green","blue","React","cloneElement","point","marginTop","transformOrigin","transform","AnglePicker","bounds","radians","atan2","FormAngle","updatePalette","setAngle","setType","RadioGroup","row","flexWrap","FormControlLabel","LINEAR","control","Radio","label","RADIAL","justifyContent","FileSelector","multiple","alt","FormImage","setRepetition","setScale","setColor","SOLID","GRADIENT","IMAGE","setUseStroke","setLineJoin","setLineCap","Switch","ButtonGroup","setUseShadow","setOffsetX","setOffsetY","setBlur","setBgColor","RightBar","useWheel","onWheel","deps","callback","handleWheel","ctrlKey","altKey","deltaX","deltaY","d","deltaScale","dom","passive","useSpaceDrag","onMove","ks","ms","moveState","setMoveState","dragStatus","useMemo","moveCallback","handleKeyEvent","state","keyCode","handleMove","handleEnd","dragState","imageRendering","packWidth","packHeight","setCanvas","canvasRef","domRef","offsetInfo","ix","iy","os","ox","oy","setTransform","fillRect","animationDuration","PackView","outline","select","setSelectLetter","handleSelect","setData","minBaseLine","maxBaseLine","setPreviewTransform","lh","index","baseLine","basey","beginPath","moveTo","lineTo","setLineDash","lines","kerningMap","charMap","minX","minY","maxX","maxY","lk","kering","getPreviewCanvas","setPreviewText","setOffset","setGlyph","setKerning","disposer","steKerning","Preview","PreviewText","PreviewMertic","PreviewKerning","to","animationName","icon","minHeight","minWidth","borderRight","whiteSpace","editor","appearance","ProjectTab","useRemove","onRemove","onRename","setEditor","sname","setSName","editorRef","handleRemove","focus","onDoubleClick","onKeyDown","onBlur","workSpace","selectProject","removeProject","setProjectName","Tabs","indicatorColor","textColor","scrollButtons","selectionFollowsFocus","TabIndicatorProps","slider","setShowPreview","anchorRef","handleChange","Slider","prevOpen","Paper","contains","MenuList","actions","inputLabel","removeImage","inputValue","setInputValue","changeSelect","direction","InputBase","onFocus","onInput","iv","fixed","panel","continer","overflowY","listWrap","addImages","isFullscreen","setFullscreen","handleLoadFile","test","matched","fileList","f","handleKeyDown","tagName","onDragEnter","onDragOver","onDrop","dataTransfer","Accordion","expanded","o","TransitionProps","AccordionSummary","expandIcon","AccordionDetails","tabsRoot","tabRoot","tabSelected","tabWrapper","WorkSpace","close","ConsecutiveSnackbars","reason","updateVersion","detail","Fragment","location","reload","aria-label","loadingBackdrop","drawer","Backdrop","App","ThemeProvider","CssBaseline","isLocalhost","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onSuccess","ReactDOM","render","getElementById","process","origin","fetch","headers","response","contentType","status","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration","waiting","channel","MessageChannel","port1","onmessage","dispatchEvent","CustomEvent","port2"],"mappings":"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","file":"static/js/main.08b1831c.chunk.js","sourcesContent":["import { action, observable } from 'mobx'\n\nclass Ui {\n  @observable globalLoader = 0\n\n  @action.bound showGlobalLoader(num = 1): void {\n    this.globalLoader += num\n  }\n\n  @action.bound hideGlobalLoader(num = -1): void {\n    this.globalLoader += num\n  }\n}\n\nexport default Ui\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/RectanglePacker.89b15b65e604634cf633.worker.js\");\n}\n","type UseType<T, U> = T extends U ? true : false\n\ntype IsNumber<T> = UseType<T, number>\n\nconst num = <T>(n: T): IsNumber<T> => {\n  return (typeof n === 'number' && !Number.isNaN(n)) as IsNumber<T>\n}\n\nconst is = {\n  num,\n}\n\nexport default is\n","import fontStyleStringify from './fontStyleStringify'\n\ninterface StyleConig {\n  fontFamily: string\n  fontSize: number\n}\ninterface Baselines {\n  middle: number\n  hanging: number\n  top: number\n  alphabetic: number\n  ideographic: number\n  bottom: number\n}\n\nlet canvas: HTMLCanvasElement\n\nexport default function getTextBaselines(\n  text: string,\n  styleConig: StyleConig,\n): Baselines {\n  if (!canvas) canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n  if (!ctx) throw new Error('Get context 2d failed.')\n  const font = fontStyleStringify(styleConig)\n\n  // clear before settings\n  canvas.width = 1\n  canvas.height = 1\n\n  ctx.font = font\n\n  ctx.textBaseline = 'middle'\n  const middle = ctx.measureText(text)\n  ctx.textBaseline = 'hanging'\n  const hanging = ctx.measureText(text)\n  ctx.textBaseline = 'top'\n  const top = ctx.measureText(text)\n  ctx.textBaseline = 'alphabetic'\n  const alphabetic = ctx.measureText(text)\n  ctx.textBaseline = 'ideographic'\n  const ideographic = ctx.measureText(text)\n  ctx.textBaseline = 'bottom'\n  const bottom = ctx.measureText(text)\n\n  return {\n    middle: 0,\n    hanging: hanging.actualBoundingBoxAscent - middle.actualBoundingBoxAscent,\n    top: top.actualBoundingBoxAscent - middle.actualBoundingBoxAscent,\n    alphabetic:\n      middle.actualBoundingBoxDescent - alphabetic.actualBoundingBoxDescent,\n    ideographic:\n      middle.actualBoundingBoxDescent - ideographic.actualBoundingBoxDescent,\n    bottom: middle.actualBoundingBoxDescent - bottom.actualBoundingBoxDescent,\n  }\n}\n","import is from './is'\n\nconst num = <T extends unknown>(a: T, b: number): number => {\n  if (is.num(a)) return a as number\n  return b\n}\n\nconst use = {\n  num,\n}\n\nexport default use\n","import { action, observable } from 'mobx'\nimport use from 'src/utils/use'\n\nclass Ui {\n  @observable scale = 1\n\n  @observable offsetX = 0\n\n  @observable offsetY = 0\n\n  @observable width = 0\n\n  @observable height = 0\n\n  @observable previewText = 'Hello World!\\nHello Snow Bamboo!' // /\\r\\n|\\r|\\n/\n\n  @observable selectLetter = ''\n\n  @observable selectNextLetter = ''\n\n  @observable showPreview = false\n\n  @observable previewScale = 1\n\n  @observable previewOffsetX = 0\n\n  @observable previewOffsetY = 0\n\n  @observable packFailed = false\n\n  constructor(ui: Partial<Ui> = {}) {\n    if (ui.previewText) {\n      this.previewText = ui.previewText\n    }\n  }\n\n  reOffset() {\n    this.offsetX = Math.min(\n      Math.max(this.width / -2, this.offsetX),\n      this.width / 2,\n    )\n    this.offsetY = Math.min(\n      Math.max(this.height / -2, this.offsetY),\n      this.height / 2,\n    )\n    this.scale = Math.max(this.scale, 0.01)\n  }\n\n  @action.bound setTransform(trans: Partial<Ui>): void {\n    this.scale = use.num(trans.scale, this.scale)\n    this.offsetX = use.num(trans.offsetX, this.offsetX)\n    this.offsetY = use.num(trans.offsetY, this.offsetY)\n    this.reOffset()\n  }\n\n  @action.bound setSize(width: number, height: number): void {\n    this.width = width\n    this.height = height\n    this.reOffset()\n  }\n\n  @action.bound setPreviewText(text: string): void {\n    this.previewText = text\n  }\n\n  @action.bound setShowPreview(showPreview: boolean): void {\n    this.showPreview = showPreview\n  }\n\n  @action.bound setPreviewTransform(trans: Partial<Ui>): void {\n    this.previewScale = Math.max(\n      use.num(trans.previewScale, this.previewScale),\n      0.01,\n    )\n    this.previewOffsetX = use.num(trans.previewOffsetX, this.previewOffsetX)\n    this.previewOffsetY = use.num(trans.previewOffsetY, this.previewOffsetY)\n  }\n\n  @action.bound setSelectLetter(letter: string = '', next: string = ''): void {\n    this.selectLetter = letter\n    this.selectNextLetter = next\n  }\n\n  @action.bound setPackFailed(packFailed: boolean): void {\n    this.packFailed = packFailed\n  }\n}\n\nexport default Ui\n","import is from './is'\n\nexport interface FontStyleConfig {\n  fontStyle?: 'normal' | 'italic' | 'oblique' | string\n  fontVariant?: 'normal' | 'none' | 'small-caps' | string\n  fontWeight?:\n    | 'normal'\n    | 'bold'\n    | 'lighter'\n    | 'bolder'\n    | '100'\n    | '200'\n    | '300'\n    | '400'\n    | '500'\n    | '600'\n    | '700'\n    | '800'\n    | '900'\n    | 100\n    | 200\n    | 300\n    | 400\n    | 500\n    | 600\n    | 700\n    | 800\n    | 900\n    | 'inherit'\n    | 'initial'\n    | 'unset'\n  fontSize?: string | number\n  lineHeight?: string | number\n  fontFamily?: string\n}\n\nconst defaultConfig: FontStyleConfig = {\n  fontSize: '14px',\n  fontFamily: 'sans-serif',\n}\n\n// https://developer.mozilla.org/zh-CN/docs/Web/CSS/font\nexport default function fontStyleStringify(\n  fontStyleConfig: FontStyleConfig,\n): string {\n  const config = { ...defaultConfig, ...fontStyleConfig }\n  const arr = []\n\n  if (config.fontStyle) arr.push(config.fontStyle)\n\n  if (config.fontVariant) arr.push(config.fontVariant)\n\n  if (config.fontWeight) arr.push(config.fontWeight)\n\n  if (is.num(config.fontSize)) {\n    config.fontSize = `${config.fontSize}px`\n  } else {\n    config.fontSize = defaultConfig.fontSize\n  }\n\n  if (config.lineHeight) {\n    arr.push(`${config.fontSize}/${config.lineHeight}`)\n  } else {\n    arr.push(config.fontSize)\n  }\n\n  arr.push(config.fontFamily)\n\n  return arr.join(' ')\n}\n","let fontTargeCache: HTMLStyleElement\nlet loadDiv: HTMLDivElement\n\nexport default function updateFontFace(\n  name: string,\n  url: string,\n): Promise<void> {\n  const cssNode = document.createTextNode(`\n    @font-face {\n        font-family: \"${name}\";\n        src: url(\"${url}\") format('truetype');\n    }`)\n\n  if (!fontTargeCache) {\n    const textNode = document.createTextNode(`A`)\n    fontTargeCache = document.createElement('style')\n    loadDiv = document.createElement('div')\n    document.head.appendChild(fontTargeCache)\n    fontTargeCache.appendChild(cssNode)\n    loadDiv.appendChild(textNode)\n    loadDiv.style.position = 'absolute'\n    loadDiv.style.left = '-1000px'\n    loadDiv.style.top = '-1000px'\n    loadDiv.style.opacity = '0'\n    loadDiv.style.fontSize = '12px'\n    loadDiv.style.pointerEvents = 'none'\n    document.body.appendChild(loadDiv)\n  } else {\n    fontTargeCache.appendChild(cssNode)\n  }\n  loadDiv.style.fontFamily = name\n  return new Promise((resolve) => setTimeout(resolve, 200))\n}\n","import { action, computed, observable } from 'mobx'\n\n// import GradientPaletteItem from './gradientPaletteItem'\n\nexport enum GradientType {\n  LINEAR,\n  RADIAL,\n}\n\nexport interface GradientColor {\n  offset: number\n  color: string\n}\n\nexport interface GradientPaletteItem extends GradientColor {\n  id: number\n}\n\nexport interface GradientColorOption extends GradientColor {\n  id?: number\n}\n\nclass Gradient {\n  @observable type: GradientType = 0\n\n  @observable angle: number\n\n  @observable.shallow palette: GradientPaletteItem[] = []\n\n  constructor(gradient: Partial<Gradient> = {}) {\n    this.type = gradient.type && GradientType[gradient.type] ? gradient.type : 0\n    this.angle = gradient.angle || 0\n    if (gradient.palette) {\n      gradient.palette.forEach((item) => {\n        this.palette.push({\n          ...item,\n          id: item.id || this.nextId,\n        })\n      })\n    } else {\n      this.addColor(0, '#FFF')\n      this.addColor(1)\n    }\n  }\n\n  @computed get ids(): number[] {\n    return this.palette.map((color) => color.id)\n  }\n\n  @computed get nextId(): number {\n    if (this.ids.length === 0) return 1\n    return Math.max(...this.ids) + 1\n  }\n\n  @action.bound setType(type: GradientType): void {\n    this.type = type\n  }\n\n  @action.bound setAngle(angle: number): void {\n    this.angle = angle\n  }\n\n  @action.bound addColor(offset = 0, color = '#000000'): void {\n    this.palette.push({ offset, color, id: this.nextId })\n  }\n\n  @action.bound updatePalette(palette: GradientPaletteItem[]): void {\n    this.palette = palette\n  }\n}\n\nexport default Gradient\n","import { action, observable, computed, runInAction } from 'mobx'\nimport getTextBaselines from 'src/utils/getTextBaselines'\nimport { parse, Font as OpenType } from 'opentype.js'\nimport updateFontFace from 'src/utils/updateFontFace'\n\nclass Font {\n  @observable.ref font: ArrayBuffer | null = null\n\n  @observable family: string = 'sans-serif'\n\n  @observable size: number\n\n  @observable lineHeight = 1.25\n\n  @observable middle = 0\n\n  @observable hanging = 0\n\n  @observable top = 0\n\n  @observable alphabetic = 0\n\n  @observable ideographic = 0\n\n  @observable bottom = 0\n\n  @observable.ref opentype: OpenType | null = null\n\n  @computed get minBaseLine() {\n    const min = Math.min(\n      this.middle,\n      this.hanging,\n      this.top,\n      this.alphabetic,\n      this.ideographic,\n      this.bottom,\n    )\n    if (Number.isNaN(Number(min))) return 0\n    return min\n  }\n\n  @computed get maxBaseLine() {\n    const max = Math.max(\n      this.middle,\n      this.hanging,\n      this.top,\n      this.alphabetic,\n      this.ideographic,\n      this.bottom,\n    )\n    if (Number.isNaN(Number(max))) return this.size\n    return max\n  }\n\n  constructor(font: Partial<Font> = {}) {\n    this.size = font.size || 72\n    this.lineHeight = font.lineHeight || 1.25\n\n    if (font.font && font.font.byteLength) {\n      this.setFont(font.font)\n    } else {\n      this.updateBaseines()\n    }\n  }\n\n  updateBaseines(): void {\n    const bls = getTextBaselines('a', {\n      fontFamily: this.family,\n      fontSize: this.size,\n    })\n\n    this.middle = bls.middle\n    this.hanging = bls.hanging\n    this.top = bls.top\n    this.alphabetic = bls.alphabetic\n    this.ideographic = bls.ideographic\n    this.bottom = bls.bottom\n  }\n\n  @action.bound setFont(buffer: ArrayBuffer): Promise<void> {\n    try {\n      this.opentype = parse(buffer, { lowMemory: true })\n    } catch (e) {\n      return Promise.resolve()\n    }\n    const { names } = this.opentype\n    const fontName = names.postScriptName[Object.keys(names.postScriptName)[0]]\n    const url = URL.createObjectURL(new Blob([buffer]))\n    return updateFontFace(fontName, url).then(() => {\n      runInAction(() => {\n        this.family = fontName\n        this.font = buffer\n        this.updateBaseines()\n      })\n    })\n  }\n\n  @action.bound setSize(size: number): void {\n    this.size = size\n    this.updateBaseines()\n  }\n\n  @action.bound setLineHeight(lineHeight: number): void {\n    this.lineHeight = lineHeight\n  }\n}\n\nexport default Font\n","import { action, observable, runInAction } from 'mobx'\nimport use from 'src/utils/use'\nimport base64ToArrayBuffer from 'src/utils/base64ToArrayBuffer'\n\nexport type Repetition = 'repeat' | 'repeat-x' | 'repeat-y' | 'no-repeat'\n\nconst DEFAULT_IMAGE =\n  'iVBORw0KGgoAAAANSUhEUgAAAAgAAAAIAQMAAAD+wSzIAAAABlBMVEX////MzMw46qqDAAAADklEQVQI12Pgh8IPEAgAEeAD/Xk4HBcAAAAASUVORK5CYII='\n\nclass PatternTexture {\n  @observable.ref buffer: ArrayBuffer = base64ToArrayBuffer(DEFAULT_IMAGE)\n\n  @observable.ref image: HTMLImageElement | null = null\n\n  @observable src = ''\n\n  @observable repetition: Repetition = 'repeat'\n\n  @observable scale: number\n\n  constructor(pt: Partial<PatternTexture> = {}) {\n    this.scale = use.num(pt.scale, 1)\n    this.repetition = pt.repetition || 'repeat'\n    this.setImage(pt.buffer || this.buffer)\n  }\n\n  @action.bound setImage(buffer: ArrayBuffer): void {\n    const src = URL.createObjectURL(new Blob([buffer]))\n    const img = new Image()\n    img.onload = () => {\n      runInAction('setPatternTextureImage', () => {\n        this.buffer = buffer\n        this.image = img\n        this.src = src\n        img.onload = null\n      })\n    }\n    img.src = src\n  }\n\n  @action.bound setRepetition(repetition: Repetition): void {\n    this.repetition = repetition\n  }\n\n  @action.bound setScale(scale: number): void {\n    this.scale = scale\n  }\n}\n\nexport default PatternTexture\n","import { action, observable } from 'mobx'\n\nimport Gradient from './gradient'\nimport PatternTexture from './patternTexture'\n\nexport enum FillType {\n  SOLID,\n  GRADIENT,\n  IMAGE,\n}\n\nclass Fill {\n  @observable type: FillType\n\n  @observable color: string\n\n  @observable.shallow gradient: Gradient\n\n  @observable.shallow patternTexture: PatternTexture\n\n  constructor(fill: Partial<Fill> = {}) {\n    this.color = fill.color || '#000000'\n    this.type = fill.type && FillType[fill.type] ? fill.type : 0\n    this.gradient = new Gradient(fill.gradient)\n    this.patternTexture = new PatternTexture(fill.patternTexture)\n  }\n\n  @action.bound setType(type: FillType = 0): void {\n    this.type = type\n  }\n\n  @action.bound setColor(color = '#000000'): void {\n    this.color = color\n  }\n}\n\nexport default Fill\n","export default function base64ToArrayBuffer(base64: string): ArrayBuffer {\n  const binaryString = atob(base64)\n  const len = binaryString.length\n  const bytes = new Uint8Array(len)\n  for (let i = 0; i < len; i += 1) {\n    bytes[i] = binaryString.charCodeAt(i)\n  }\n  return bytes.buffer\n}\n","import fontStyleStringify, { FontStyleConfig } from './fontStyleStringify'\n\nexport interface TextSize {\n  text: string\n  font: string\n  width: number\n  height: number\n  fontWidth: number\n  fontHeight: number\n  trimOffsetTop: number\n  trimOffsetLeft: number\n  trimOffsetRight: number\n  trimOffsetBottom: number\n}\n\nlet canvas: HTMLCanvasElement\n\nexport default function getTextSize(\n  text: string,\n  config: FontStyleConfig,\n): TextSize {\n  if (!canvas) canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n  if (!ctx) throw new Error('Get context 2d failed.')\n\n  // clear before settings\n  canvas.width = 1\n  canvas.height = 1\n\n  const font = fontStyleStringify(config)\n\n  ctx.font = font\n\n  ctx.textAlign = 'left'\n  ctx.textBaseline = 'bottom'\n\n  const testA = ctx.measureText(text)\n\n  if (typeof testA.actualBoundingBoxLeft === 'undefined') {\n    return {\n      text,\n      font,\n      width: testA.width,\n      height: parseInt(`${config.fontSize ?? '14'}`, 10),\n      fontWidth: testA.width,\n      fontHeight: parseInt(`${config.fontSize ?? '14'}`, 10),\n      trimOffsetTop: 0,\n      trimOffsetLeft: 0,\n      trimOffsetRight: 0,\n      trimOffsetBottom: 0,\n    }\n  }\n\n  ctx.textAlign = 'right'\n  ctx.textBaseline = 'top'\n\n  const testB = ctx.measureText(text)\n\n  const trimOffsetLeft = Math.ceil(testA.actualBoundingBoxLeft)\n  const trimOffsetRight = Math.ceil(testB.actualBoundingBoxRight)\n  const trimOffsetTop = Math.ceil(testB.actualBoundingBoxAscent)\n  const trimOffsetBottom = Math.ceil(testA.actualBoundingBoxDescent)\n  const width = trimOffsetLeft + Math.ceil(testA.actualBoundingBoxRight)\n  const height = trimOffsetBottom + Math.ceil(testA.actualBoundingBoxAscent)\n  const fontWidth = Math.ceil(testA.width)\n  const fontHeight =\n    testA.actualBoundingBoxAscent - testB.actualBoundingBoxAscent\n\n  return {\n    text,\n    font,\n    width,\n    height,\n    fontWidth,\n    fontHeight,\n    trimOffsetTop,\n    trimOffsetLeft,\n    trimOffsetRight,\n    trimOffsetBottom,\n  }\n}\n","import { action, observable } from 'mobx'\nimport use from 'src/utils/use'\n\nimport Fill from './fill'\n\nclass Stroke extends Fill {\n  @observable width = 1\n\n  /**\n   * butt   默认。向线条的每个末端添加平直的边缘。\n   * round  向线条的每个末端添加圆形线帽。\n   * square 向线条的每个末端添加正方形线帽。\n   */\n  @observable lineCap: CanvasLineCap\n\n  /**\n   * bevel 创建斜角。\n   * round 创建圆角。\n   * miter 默认。创建尖角。\n   */\n  @observable lineJoin: CanvasLineJoin\n\n  constructor(stroke: Partial<Stroke> = {}) {\n    super(stroke)\n    this.width = use.num(stroke.width, 1)\n    this.lineCap = stroke.lineCap || 'round'\n    this.lineJoin = stroke.lineJoin || 'round'\n  }\n\n  @action.bound setWidth(width: number): void {\n    this.width = width\n  }\n\n  @action.bound setLineCap(lineCap: CanvasLineCap): void {\n    this.lineCap = lineCap\n  }\n\n  @action.bound setLineJoin(lineJoin: CanvasLineJoin): void {\n    this.lineJoin = lineJoin\n  }\n}\n\nexport default Stroke\n","import { action, observable } from 'mobx'\nimport use from 'src/utils/use'\n\nclass Shadow {\n  @observable color: string\n\n  @observable blur = 1\n\n  @observable offsetX = 1\n\n  @observable offsetY = 1\n\n  constructor(shadow: Partial<Shadow> = {}) {\n    this.color = shadow.color || '#000000'\n    this.blur = use.num(shadow.blur, 1)\n    this.offsetX = use.num(shadow.offsetX, 1)\n    this.offsetY = use.num(shadow.offsetY, 1)\n  }\n\n  @action.bound setColor(color: string): void {\n    this.color = color\n  }\n\n  @action.bound setBlur(blur: number): void {\n    this.blur = blur\n  }\n\n  @action.bound setOffsetX(offsetX: number): void {\n    this.offsetX = offsetX\n  }\n\n  @action.bound setOffsetY(offsetY: number): void {\n    this.offsetY = offsetY\n  }\n\n  @action.bound setOffset(offsetX: number, offsetY: number): void {\n    this.offsetX = offsetX\n    this.offsetY = offsetY\n  }\n}\n\nexport default Shadow\n","import { action, observable } from 'mobx'\n\nimport Font from './font'\nimport Fill from './fill'\nimport Stroke from './stroke'\nimport Shadow from './shadow'\n\nclass Style {\n  @observable readonly font: Font\n\n  @observable readonly fill: Fill\n\n  @observable useStroke: boolean\n\n  @observable readonly stroke: Stroke\n\n  @observable useShadow: boolean\n\n  @observable readonly shadow: Shadow\n\n  @observable bgColor = 'rgba(0,0,0,0)'\n\n  constructor(style: Partial<Style> = {}) {\n    this.font = new Font(style.font)\n    this.fill = new Fill(style.fill)\n    this.stroke = new Stroke(style.stroke)\n    this.shadow = new Shadow(style.shadow)\n    this.useShadow = !!style.useShadow\n    this.useStroke = !!style.useStroke\n  }\n\n  @action.bound setUseStroke(useStroke: boolean): void {\n    this.useStroke = useStroke\n  }\n\n  @action.bound setUseShadow(useShadow: boolean): void {\n    this.useShadow = useShadow\n  }\n\n  @action.bound setBgColor(bgColor: string): void {\n    this.bgColor = bgColor\n  }\n}\n\nexport default Style\n","import { action, observable } from 'mobx'\nimport use from 'src/utils/use'\n\nclass Layout {\n  @observable padding = 1\n\n  @observable spacing = 1\n\n  @observable power = false\n\n  @observable width = 1024\n\n  @observable height = 1024\n\n  @observable auto = true\n\n  @observable fixedSize = false\n\n  constructor(layout: Partial<Layout> = {}) {\n    this.padding = use.num(layout.padding, 1)\n\n    this.spacing = use.num(layout.spacing, 1)\n\n    this.power = !!layout.power\n\n    this.width = use.num(layout.width, 1024)\n\n    this.height = use.num(layout.height, 1024)\n\n    // Compatible with old files, default true.\n    this.auto = layout.auto === false ? false : true\n\n    this.fixedSize = !!layout.fixedSize\n  }\n\n  @action.bound setPadding(padding: number): void {\n    this.padding = padding\n  }\n\n  @action.bound setSpacing(spacing: number): void {\n    this.spacing = spacing\n  }\n\n  @action.bound setPower(power: boolean): void {\n    this.power = power\n  }\n\n  @action.bound setWidth(width: number): void {\n    this.width = width\n  }\n\n  @action.bound setHeight(height: number): void {\n    this.height = height\n  }\n\n  @action.bound setAuto(auto: boolean): void {\n    this.auto = auto\n  }\n\n  @action.bound setFixedSize(fixedSize: boolean): void {\n    this.fixedSize = fixedSize\n  }\n}\n\nexport default Layout\n","import { action, observable } from 'mobx'\n\nclass Metric {\n  @observable xAdvance = 0\n\n  @observable xOffset = 0\n\n  @observable yOffset = 0\n\n  constructor(metric: Partial<Metric> = {}) {\n    this.xAdvance = metric.xAdvance || 0\n    this.xOffset = metric.xOffset || 0\n    this.yOffset = metric.yOffset || 0\n  }\n\n  @action.bound setXAdvance(xAdvance: number): void {\n    this.xAdvance = xAdvance\n  }\n\n  @action.bound setXOffset(xOffset: number): void {\n    this.xOffset = xOffset\n  }\n\n  @action.bound setYOffset(yOffset: number): void {\n    this.yOffset = yOffset\n  }\n}\n\nexport default Metric\n","export interface TrimImageInfo {\n  width: number\n  height: number\n  trimOffsetTop: number\n  trimOffsetLeft: number\n}\n\nexport default function trimImageData(\n  imageData: ImageData,\n  threshold = 0,\n): TrimImageInfo {\n  const { data, width, height } = imageData\n  let topTrim = 0\n  let bottomTrim = 0\n  let leftTrim = 0\n  let rightTrim = 0\n  let topStatus = true\n  let bottomStatus = true\n  let leftStatus = true\n  let rightStatus = true\n\n  let h: number = Math.ceil(height / 2)\n  const w: number = Math.ceil(width / 2)\n\n  for (let i = 0; i < h; i += 1) {\n    for (let j = 0; j < width; j += 1) {\n      if (topStatus && data[(i * width + j) * 4 + 3] > threshold) {\n        topStatus = false\n      }\n      if (\n        bottomStatus &&\n        data[((height - i - 1) * width + j) * 4 + 3] > threshold\n      ) {\n        bottomStatus = false\n      }\n      if (!topStatus && !bottomStatus) {\n        break\n      }\n    }\n    if (!topStatus && !bottomStatus) {\n      break\n    }\n    if (topStatus) topTrim += 1\n    if (bottomStatus) bottomTrim += 1\n  }\n\n  if (topTrim + bottomTrim >= height) {\n    // Is empty image.\n    return {\n      trimOffsetLeft: width * -1,\n      trimOffsetTop: height * -1,\n      width: 0,\n      height: 0,\n    }\n  }\n\n  h = height - bottomTrim\n\n  for (let i = 0; i < w; i += 1) {\n    for (let j = topTrim; j < h; j += 1) {\n      if (leftStatus && data[(width * j + i) * 4 + 3] > threshold) {\n        leftStatus = false\n      }\n      if (\n        rightStatus &&\n        data[(width * j + width - i - 1) * 4 + 3] > threshold\n      ) {\n        rightStatus = false\n      }\n      if (!leftStatus && !rightStatus) {\n        break\n      }\n    }\n    if (!leftStatus && !rightStatus) {\n      break\n    }\n    if (leftStatus) leftTrim += 1\n    if (rightStatus) rightTrim += 1\n  }\n\n  return {\n    trimOffsetLeft: leftTrim * -1,\n    trimOffsetTop: topTrim * -1,\n    width: width - leftTrim - rightTrim,\n    height: height - topTrim - bottomTrim,\n  }\n}\n","export interface Point {\n  x: number\n  y: number\n}\n\nexport default function getPointOnCircle(\n  x: number,\n  y: number,\n  r: number,\n  angle: number,\n): Point {\n  return {\n    x: x + r * Math.cos((Math.PI / 180) * angle),\n    y: y + r * Math.sin((Math.PI / 180) * angle),\n  }\n}\n","import getPointOnCircle from './getPointOnCircle'\n\ninterface GarentColor {\n  offset: number\n  color: string\n}\n\ninterface Pradient {\n  type: 0 | 1\n  palette: GarentColor[]\n  angle: number\n}\n\ninterface PatternTexture {\n  image: HTMLImageElement | null\n  repetition: string\n  scale: number\n}\n\ninterface Config {\n  type: number\n  color: string\n  gradient: Pradient\n  patternTexture: PatternTexture\n}\n\nexport default function getCanvasStyle(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  config: Config,\n): string | CanvasGradient | CanvasPattern {\n  // 纯色\n  if (config.type === 0) {\n    return config.color\n  }\n\n  // 渐变\n  if (config.type === 1) {\n    const { type, palette, angle } = config.gradient\n    let gradient: CanvasGradient\n    const cx = x + width / 2\n    const cy = y + height / 2\n    const r = Math.max(width, height) / 2\n    if (type === 0) {\n      const startPoint = getPointOnCircle(cx, cy, r, angle + 180)\n      const endPoint = getPointOnCircle(cx, cy, r, angle)\n      gradient = ctx.createLinearGradient(\n        startPoint.x,\n        startPoint.y,\n        endPoint.x,\n        endPoint.y,\n      )\n    } else {\n      gradient = ctx.createRadialGradient(cx, cy, 0, cx, cy, r)\n    }\n\n    palette.forEach((color) => {\n      gradient.addColorStop(color.offset, color.color)\n    })\n\n    return gradient\n  }\n\n  const { image, repetition, scale } = config.patternTexture\n  if (!image) return 'rgba(0,0,0,0)'\n\n  if (scale === 1)\n    return ctx.createPattern(image, repetition) || 'rgba(0,0,0,0)'\n\n  const { naturalWidth, naturalHeight } = image\n  const canvas: HTMLCanvasElement = document.createElement('canvas')\n  canvas.width = Math.ceil(naturalWidth * scale)\n  canvas.height = Math.ceil(naturalHeight * scale)\n  const textureCtx = canvas.getContext('2d')\n\n  if (!textureCtx) return 'rgba(0,0,0,0)'\n\n  textureCtx.drawImage(image, 0, 0, canvas.width, canvas.height)\n  return ctx.createPattern(canvas, repetition) || 'rgba(0,0,0,0)'\n}\n","import trimImageData from './trimImageData'\nimport getTextSize, { TextSize } from './getTextSize'\nimport fontStyleStringify from './fontStyleStringify'\nimport getCanvasStyle from './getCanvasStyle'\n\nexport interface GlyphInfo extends TextSize {\n  canvas: HTMLCanvasElement | null\n}\n\ninterface ParentColor {\n  offset: number\n  color: string\n}\n\ninterface Gradient {\n  type: 0 | 1\n  palette: ParentColor[]\n  angle: number\n}\n\ninterface PatternTexture {\n  image: HTMLImageElement | null\n  repetition: string\n  scale: number\n}\n\ninterface Fill {\n  type: number\n  color: string\n  gradient: Gradient\n  patternTexture: PatternTexture\n}\n\ninterface Stroke extends Fill {\n  width: number\n  lineJoin: CanvasLineJoin\n  lineCap: CanvasLineCap\n}\n\ninterface Font {\n  family: string\n  size: number\n}\n\ninterface Shadow {\n  color: string\n  blur: number\n  offsetX: number\n  offsetY: number\n}\n\nexport interface Config {\n  font: Font\n  fill: Fill\n  stroke?: Stroke\n  shadow?: Shadow\n}\n\nexport default function getGlyphInfo(text: string, config: Config): GlyphInfo {\n  const { font, stroke, shadow, fill } = config\n\n  const styleConig = {\n    fontSize: font.size,\n    fontFamily: font.family,\n  }\n\n  const trimInfo = getTextSize(text, styleConig)\n  const { width, height, trimOffsetLeft, trimOffsetTop } = trimInfo\n  if (width === 0 || height === 0) return { canvas: null, ...trimInfo }\n\n  const lineWidth = stroke ? stroke.width * 2 : 0 // canvas is center stroke\n  let addX = lineWidth\n  let addY = lineWidth\n  let styleX = (width - font.size) / 2\n  let styleY = (height - font.size) / 2\n\n  if (shadow) {\n    const blur = Math.ceil(shadow.blur * 1.5)\n    addX = Math.abs(shadow.offsetX) + blur\n    addY = Math.abs(shadow.offsetY) + blur\n  }\n\n  styleX += addX\n  styleY += addY\n\n  let canvas = document.createElement('canvas')\n  let ctx = canvas.getContext('2d') as CanvasRenderingContext2D\n  canvas.width = width + addX * 2\n  canvas.height = height + addY * 2\n\n  ctx.textAlign = 'left'\n  ctx.textBaseline = 'top'\n\n  ctx.font = fontStyleStringify({\n    fontSize: font.size,\n    fontFamily: font.family,\n  })\n\n  if (stroke && lineWidth) {\n    ctx.lineWidth = lineWidth\n    ctx.lineCap = stroke.lineCap\n    ctx.lineJoin = stroke.lineJoin\n    ctx.strokeStyle = getCanvasStyle(\n      ctx,\n      styleX,\n      styleY,\n      font.size,\n      font.size,\n      stroke,\n    )\n    ctx.strokeText(text, addX + trimOffsetLeft, addY + trimOffsetTop)\n  }\n\n  ctx.fillStyle = getCanvasStyle(\n    ctx,\n    styleX,\n    styleY,\n    font.size,\n    font.size,\n    fill,\n  )\n  ctx.fillText(text, addX + trimOffsetLeft, addY + trimOffsetTop)\n\n  if (shadow) {\n    const cvs = document.createElement('canvas')\n    cvs.width = width + addX * 2\n    cvs.height = height + addY * 2\n    const newCtx = cvs.getContext('2d') as CanvasRenderingContext2D\n\n    newCtx.shadowColor = shadow.color\n    newCtx.shadowBlur = shadow.blur\n    newCtx.shadowOffsetX = shadow.offsetX\n    newCtx.shadowOffsetY = shadow.offsetY\n\n    newCtx.drawImage(canvas, 0, 0)\n\n    canvas = cvs\n    ctx = newCtx\n  }\n\n  if (canvas.width === 0 || canvas.height === 0) {\n    return {\n      canvas,\n      ...trimInfo,\n    }\n  }\n\n  const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height)\n  const styleTrimInfo = trimImageData(imgData)\n  canvas.width = styleTrimInfo.width\n  canvas.height = styleTrimInfo.height\n  trimInfo.width = styleTrimInfo.width\n  trimInfo.height = styleTrimInfo.height\n  ctx.putImageData(\n    imgData,\n    styleTrimInfo.trimOffsetLeft,\n    styleTrimInfo.trimOffsetTop,\n  )\n  trimInfo.trimOffsetLeft += addX + styleTrimInfo.trimOffsetLeft\n  trimInfo.trimOffsetTop += addY + styleTrimInfo.trimOffsetTop\n  trimInfo.trimOffsetBottom +=\n    addY +\n    (height + addY * 2 + styleTrimInfo.trimOffsetTop - styleTrimInfo.height)\n\n  return {\n    canvas,\n    ...trimInfo,\n  }\n}\n","import { observable, action } from 'mobx'\n\nimport Metric from './metric'\n\nexport type GlyphType = 'text' | 'image'\n\nclass GlyphBase {\n  readonly type: GlyphType = 'text'\n\n  @observable letter = ''\n\n  @observable.ref source: HTMLImageElement | HTMLCanvasElement | null = null\n\n  @observable width = 0\n\n  @observable height = 0\n\n  @observable x = 0\n\n  @observable y = 0\n\n  @observable fontWidth = 0\n\n  @observable fontHeight = 0\n\n  @observable trimOffsetTop = 0\n\n  @observable trimOffsetLeft = 0\n\n  @observable trimOffsetRight = 0\n\n  @observable trimOffsetBottom = 0\n\n  @observable.ref adjustMetric: Metric\n\n  @observable kerning: Map<string, number> = new Map()\n\n  constructor(glyph: Partial<GlyphBase> = {}) {\n    this.letter = glyph.letter || ''\n    this.adjustMetric = new Metric(glyph.adjustMetric)\n\n    if (glyph.kerning) {\n      this.kerning = glyph.kerning\n    }\n  }\n\n  @action.bound steKerning(text: string, kerning: number) {\n    this.kerning.set(text, kerning)\n  }\n}\n\nexport default GlyphBase\n","import { action } from 'mobx'\nimport getGlyphInfo, { Config } from 'src/utils/getGlyphInfo'\nimport GlyphBase from './glyphBase'\n\nimport Style from './style'\n\nclass GlyphFont extends GlyphBase {\n  constructor(galyphFont: Partial<GlyphFont> = {}, textStyle: Style) {\n    super(galyphFont)\n    this.setGlyphInfo(textStyle)\n  }\n\n  @action setGlyphInfo(textStyle: Style): void {\n    const { font, fill, useStroke, stroke, useShadow, shadow } = textStyle\n    const config: Config = { font, fill }\n    if (useStroke) config.stroke = stroke\n    if (useShadow) config.shadow = shadow\n\n    const glyphInfo = getGlyphInfo(this.letter, config)\n    this.source = glyphInfo.canvas\n    this.width = glyphInfo.width\n    this.height = glyphInfo.height\n    this.fontWidth = glyphInfo.fontWidth\n    this.fontHeight = glyphInfo.fontHeight\n    this.trimOffsetTop = glyphInfo.trimOffsetTop\n    this.trimOffsetLeft = glyphInfo.trimOffsetLeft\n    this.trimOffsetRight = glyphInfo.trimOffsetRight\n    this.trimOffsetBottom = glyphInfo.trimOffsetBottom\n  }\n}\n\nexport default GlyphFont\n","import { action, observable, runInAction } from 'mobx'\nimport getTrimImageInfo from 'src/utils/getTrimImageInfo'\n\nimport GlyphBase, { GlyphType } from './glyphBase'\n\nexport interface FileInfo {\n  letter?: string\n  fileName: string\n  fileType: string\n  buffer: ArrayBuffer\n}\n\nclass GlyphImage extends GlyphBase {\n  readonly type: GlyphType = 'image'\n\n  @observable src = '' // 仅显示列表中\n\n  @observable.ref buffer: ArrayBuffer | null = null\n\n  @observable fileName = ''\n\n  @observable fileType = ''\n\n  @observable selected = true\n\n  constructor(glyphImage: Partial<GlyphImage>) {\n    super(glyphImage)\n    this.letter = glyphImage.letter || ''\n    this.fileName = glyphImage.fileName || ''\n    this.fileType = glyphImage.fileType || ''\n    this.buffer = glyphImage.buffer || null\n    if (glyphImage.buffer) {\n      this.src = URL.createObjectURL(new Blob([glyphImage.buffer]))\n      this.initImage()\n    }\n  }\n\n  @action.bound initImage(): Promise<void> {\n    return new Promise((resolve) => {\n      const image = new Image()\n      image.onload = () => {\n        runInAction('trimImage', () => {\n          const { naturalWidth, naturalHeight } = image\n          this.fontWidth = naturalWidth\n          this.fontHeight = naturalHeight\n\n          const trimInfo = getTrimImageInfo(image)\n          this.width = trimInfo.width\n          this.height = trimInfo.height\n          this.trimOffsetLeft = trimInfo.trimOffsetLeft\n          this.trimOffsetTop = trimInfo.trimOffsetTop\n          this.trimOffsetRight =\n            trimInfo.width - trimInfo.trimOffsetLeft - naturalWidth\n          this.trimOffsetBottom =\n            trimInfo.height - trimInfo.trimOffsetTop - naturalHeight\n\n          this.source = trimInfo.canvas\n          resolve()\n        })\n      }\n      image.src = this.src\n    })\n  }\n\n  @action.bound setGlyph(text: string): void {\n    this.letter = text[0] || ''\n  }\n\n  @action.bound changeSelect(isSelect: boolean): void {\n    this.selected = isSelect\n  }\n}\n\nexport default GlyphImage\n","import trimImageData, { TrimImageInfo } from './trimImageData'\n\ninterface TrimInfo extends TrimImageInfo {\n  canvas: HTMLCanvasElement\n}\n\nexport default function getTrimImageInfo(\n  image: HTMLImageElement,\n  threshold = 10,\n): TrimInfo {\n  const width = image.naturalWidth\n  const height = image.naturalHeight\n\n  const canvas = document.createElement('canvas')\n  canvas.width = width\n  canvas.height = height\n  const ctx = canvas.getContext('2d') as CanvasRenderingContext2D\n  ctx.drawImage(image, 0, 0)\n  const imageData = ctx.getImageData(0, 0, width, height)\n  const trimInfo = trimImageData(imageData, threshold)\n  canvas.width = trimInfo.width\n  canvas.height = trimInfo.height\n  ctx.drawImage(image, trimInfo.trimOffsetLeft, trimInfo.trimOffsetTop)\n\n  return {\n    canvas,\n    ...trimInfo,\n  }\n}\n","import { observable, action, computed } from 'mobx'\nimport { deepObserve } from 'mobx-utils'\nimport { cancel, request } from 'requestidlecallback'\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport RectanglePacker from 'worker-loader?filename=static/js/RectanglePacker.[hash].worker.js!src/workers/RectanglePacker.worker'\n\nimport Ui from './base/ui'\nimport Style from './base/style'\nimport Layout from './base/layout'\nimport Metric from './base/metric'\nimport GlyphFont from './base/glyphFont'\nimport GlyphImage, { FileInfo } from './base/glyphImage'\nimport { GlyphType } from './base/glyphBase'\nimport { GuillotineBinPack } from 'rectangle-packer'\ninterface TextRectangle {\n  width: number\n  height: number\n  x: number\n  y: number\n  letter: string\n  type: GlyphType\n}\n\nclass Project {\n  @observable name = 'Unnamed'\n\n  id: number\n\n  worker: RectanglePacker | null = null\n\n  packStart = 0\n\n  packTimer = 0\n\n  idleId = 0\n\n  @observable isPacking = false\n\n  @observable text =\n    '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!№;%:?*()_+-=.,/|\"\\'@#$^&{}[]'\n\n  @observable.shallow glyphs: Map<string, GlyphFont> = new Map()\n\n  @observable.shallow glyphImages: GlyphImage[] = []\n\n  @observable.ref style: Style\n\n  @observable.ref layout: Layout\n\n  @observable.ref globalAdjustMetric: Metric\n\n  @observable.ref packCanvas: HTMLCanvasElement | null = null\n\n  @observable.ref ui: Ui = new Ui()\n\n  constructor(project: Partial<Project> = {}) {\n    this.id = project.id || Date.now()\n    this.name = project.name || 'Unnamed'\n    this.text = project.text || this.text\n    this.ui = new Ui(project.ui)\n    this.style = new Style(project.style)\n    this.layout = new Layout(project.layout)\n    this.globalAdjustMetric = new Metric(project.globalAdjustMetric)\n\n    if (project.glyphs) {\n      project.glyphs.forEach((value, key) => {\n        this.glyphs.set(key, new GlyphFont(value, this.style))\n      })\n    }\n\n    project.glyphImages?.forEach((img) => {\n      this.glyphImages.push(new GlyphImage(img))\n    })\n\n    if (!this.glyphs.has(' '))\n      this.glyphs.set(' ', new GlyphFont({ letter: ' ' }, this.style))\n\n    this.addGlyphs(project.text || '')\n    this.addAutoRun()\n    this.pack()\n  }\n\n  @computed get glyphList(): (GlyphFont | GlyphImage)[] {\n    const obj: { [key: string]: GlyphImage } = {}\n\n    this.glyphImages.forEach((glyph) => {\n      if (glyph.letter && glyph.selected) {\n        obj[glyph.letter] = glyph\n      }\n    })\n\n    return ` ${this.text}`.split('').map((letter) => {\n      if (obj[letter]) return obj[letter]\n      return this.glyphs.get(letter) as GlyphFont\n    })\n  }\n\n  @computed get rectangleList(): TextRectangle[] {\n    const { padding, spacing } = this.layout\n    return this.glyphList.map((glyph) => {\n      const isUnEmpty = !!(glyph.width && glyph.height)\n      return {\n        letter: glyph.letter,\n        type: glyph.type,\n        width: isUnEmpty ? glyph.width + padding * 2 + spacing : 0,\n        height: isUnEmpty ? glyph.height + padding * 2 + spacing : 0,\n        x: 0,\n        y: 0,\n      }\n    })\n  }\n\n  @action.bound pack(): void {\n    if (this.idleId) return\n    if (this.worker) this.worker.terminate()\n    this.isPacking = true\n    this.worker = new RectanglePacker()\n    const packList = this.rectangleList.sort((a, b) => b.height - a.height)\n\n    if (!this.layout.auto) {\n      const packer = new GuillotineBinPack<TextRectangle>(\n        this.layout.width + this.layout.spacing,\n        this.layout.height + this.layout.spacing,\n      )\n\n      const list = packList.filter(({ width, height }) => !!(width && height))\n\n      packer.InsertSizes(list, true, 1, 1)\n\n      this.setPack(packer.usedRectangles, list)\n\n      this.isPacking = false\n      return\n    }\n    this.worker.addEventListener(\n      'message',\n      action('PackerWorkerCallback', (messageEvent) => {\n        const { data } = messageEvent\n        this.setPack(data)\n\n        this.isPacking = false\n        this.worker?.terminate()\n        this.worker = null\n      }),\n      false,\n    )\n\n    this.worker.postMessage(\n      packList.filter(({ width, height }) => !!(width && height)),\n    )\n  }\n\n  @action.bound setPack(\n    list: TextRectangle[],\n    failedList?: TextRectangle[],\n  ): void {\n    const imgList = this.glyphImages\n    let maxWidth = 0\n    let maxHeight = 0\n    const { auto, fixedSize, width, height, spacing } = this.layout\n\n    list.forEach((rectangle) => {\n      const { letter, x, y, type, width, height } = rectangle\n      let glyph: GlyphFont | GlyphImage | undefined\n\n      if (type === 'image') {\n        glyph = imgList.find((gi) => {\n          if (gi && gi.letter === letter) return true\n          return false\n        })\n      }\n\n      if (!glyph) {\n        glyph = this.glyphs.get(letter)\n      }\n\n      if (glyph) {\n        glyph.x = x || 0\n        glyph.y = y || 0\n      }\n\n      maxWidth = Math.max(maxWidth, x + width)\n      maxHeight = Math.max(maxHeight, y + height)\n    })\n\n    if (failedList?.length) {\n      failedList.forEach((rectangle) => {\n        const { letter, type } = rectangle\n        let glyph: GlyphFont | GlyphImage | undefined\n\n        if (type === 'image') {\n          glyph = imgList.find((gi) => {\n            if (gi && gi.letter === letter) return true\n            return false\n          })\n        }\n\n        if (!glyph) {\n          glyph = this.glyphs.get(letter)\n        }\n\n        if (glyph) {\n          glyph.x = 0\n          glyph.y = 0\n        }\n      })\n      this.ui.setPackFailed(true)\n    } else {\n      this.ui.setPackFailed(false)\n    }\n\n    if (!auto && fixedSize) {\n      this.ui.setSize(width, height)\n      return\n    }\n\n    this.ui.setSize(maxWidth - spacing, maxHeight - spacing)\n  }\n\n  @action.bound packStyle(): void {\n    this.isPacking = true\n    if (this.worker) {\n      this.worker.terminate()\n      this.worker = null\n    }\n    cancel(this.idleId)\n\n    const tasks: GlyphFont[] = []\n\n    this.glyphs.forEach((glyph) => {\n      tasks.push(glyph)\n    })\n\n    const runTasks = () => {\n      this.idleId = request((deadline) => {\n        const tr = deadline.timeRemaining()\n        const start = Date.now()\n        while (tasks.length && tr - (Date.now() - start) > -100) {\n          // while (tasks.length) {\n          const glyph = tasks.shift()\n          if (glyph) glyph.setGlyphInfo(this.style)\n        }\n\n        if (tasks.length) {\n          runTasks()\n        } else {\n          this.idleId = 0\n          this.pack()\n        }\n      })\n    }\n\n    runTasks()\n  }\n\n  @action.bound throttlePack(): void {\n    if (this.idleId) return\n    window.clearTimeout(this.packTimer)\n    if (Date.now() - this.packStart > 500) {\n      Promise.resolve().then(this.pack)\n    } else {\n      this.packTimer = window.setTimeout(() => {\n        this.pack()\n      }, 500)\n    }\n    this.packStart = Date.now()\n  }\n\n  addAutoRun(): void {\n    const isName = (obj: { name?: unknown }, name: string): boolean =>\n      !!(obj.name && obj.name === name)\n\n    deepObserve(this.glyphs, () => {\n      this.throttlePack()\n    })\n\n    deepObserve(this.glyphImages, () => {\n      this.throttlePack()\n    })\n\n    deepObserve(this.layout, () => {\n      this.throttlePack()\n    })\n\n    deepObserve(this.style, (change) => {\n      if (isName(change, 'bgColor') || isName(change, 'lineHeight')) return\n      this.packStyle()\n    })\n  }\n\n  @action.bound setText(str: string): void {\n    const oldText = this.text\n    this.text = str.replace(/\\s/gm, '')\n    this.addGlyphs(oldText)\n  }\n\n  @action.bound addGlyphs(oldText = ''): void {\n    const currentList = Array.from(new Set(this.text.split('')))\n    const oldList = Array.from(new Set(oldText.split('')))\n    this.text = currentList.join('')\n    const diffList = oldText\n      ? Array.from(new Set(currentList.concat(oldList))).filter(\n          (t) => !(currentList.includes(t) && oldList.includes(t)),\n        )\n      : currentList\n\n    if (!diffList.length) return\n\n    diffList.forEach((letter) => {\n      if (currentList.includes(letter)) {\n        this.glyphs.set(letter, new GlyphFont({ letter }, this.style))\n      } else {\n        // in diff\n        this.glyphs.delete(letter)\n      }\n    })\n  }\n\n  @action.bound addImages<T extends FileInfo>(list: T[]): void {\n    Promise.all(\n      list.map((img) => {\n        const glyphImage = new GlyphImage(img)\n        this.glyphImages.push(glyphImage)\n        return glyphImage.initImage()\n      }),\n    ).then(this.pack)\n  }\n\n  @action.bound removeImage(image: GlyphImage): void {\n    const idx = this.glyphImages.indexOf(image)\n    if (idx > -1) this.glyphImages.splice(idx, 1)\n  }\n\n  @action.bound setCanvas(canvas: HTMLCanvasElement): void {\n    this.packCanvas = canvas\n  }\n\n  @action.bound setName(name: string): void {\n    this.name = name || this.name\n  }\n}\n\nexport default Project\n","import { action, observable, runInAction, computed } from 'mobx'\n\nimport Project from './project'\n\nclass Workspace {\n  @observable activeId = 0\n\n  @observable.shallow projectList: Map<number, Project> = new Map()\n\n  constructor() {\n    runInAction(() => {\n      this.activeId = Date.now()\n      const project = new Project({ id: this.activeId })\n      this.projectList.set(project.id, project)\n    })\n  }\n\n  @computed get currentProject(): Project {\n    return this.projectList.get(this.activeId) as Project\n  }\n\n  @computed get namedList(): { id: number; name: string }[] {\n    const list: { id: number; name: string }[] = []\n    this.projectList.forEach((value) => {\n      list.push({\n        id: value.id,\n        name: value.name,\n      })\n    })\n    return list\n  }\n\n  @action.bound selectProject(id: number): void {\n    if (this.projectList.has(id)) this.activeId = id\n  }\n\n  @action.bound removeProject(id: number): void {\n    const list = this.namedList.filter((item) => item.id !== id)\n    if (list.length === 0) return\n    this.activeId = list[0].id\n    this.projectList.delete(id)\n  }\n\n  @action.bound addProject(p: Partial<Project> = {}): void {\n    if (p.id && this.projectList.has(p.id)) {\n      this.activeId = p.id\n      return\n    }\n    if (!p.name) {\n      p.name = 'Unnamed'\n      const namedList: number[] = []\n      this.projectList.forEach((item) => {\n        const named = item.name.match(/^Unnamed-?(\\d+)?$/)\n        if (named) {\n          namedList.push(Number(named[1]) || 0)\n        }\n      })\n      if (namedList.length > 0) {\n        p.name += `-${Math.max(...namedList) + 1}`\n      }\n    }\n\n    const project = new Project(p)\n    this.projectList.set(project.id, project)\n    this.activeId = project.id\n  }\n\n  @action.bound setProjectName(name: string, value: number): void {\n    const project = this.projectList.get(value)\n    if (project) {\n      project.setName(name)\n    }\n  }\n}\n\nexport default Workspace\n","import { configure } from 'mobx'\n\nimport Ui from './ui'\nimport Workspace from './workspace'\n\nconfigure({\n  enforceActions: 'always',\n  computedRequiresReaction: true,\n})\n\nexport interface Store {\n  ui: Ui\n  workspace: Workspace\n}\n\nexport default function createStore(): Store {\n  return { ui: new Ui(), workspace: new Workspace() }\n}\n\nexport type TStore = ReturnType<typeof createStore>\n\nexport { default as Ui } from './ui'\nexport { default as Project } from './project'\nexport { default as Workspace } from './workspace'\n\nexport * from './base'\n","import { ComponentsProps } from '@material-ui/core/styles/props'\n\nconst props: ComponentsProps = {\n  MuiButton: {\n    size: 'small',\n  },\n  MuiButtonBase: {\n    disableRipple: true,\n  },\n  MuiFilledInput: {\n    margin: 'dense',\n  },\n  MuiFormControl: {\n    margin: 'dense',\n  },\n  MuiFormHelperText: {\n    margin: 'dense',\n  },\n  MuiIconButton: {\n    size: 'small',\n  },\n  MuiInputBase: {\n    margin: 'dense',\n  },\n  MuiInputLabel: {\n    margin: 'dense',\n  },\n  MuiListItem: {\n    dense: true,\n  },\n  MuiOutlinedInput: {\n    margin: 'dense',\n  },\n  MuiFab: {\n    size: 'small',\n  },\n  MuiTable: {\n    size: 'small',\n  },\n  MuiTextField: {\n    margin: 'dense',\n  },\n  MuiToolbar: {\n    variant: 'dense',\n  },\n}\n\nexport default props\n","import { Overrides } from '@material-ui/core/styles/overrides'\n\nconst overrides: Overrides = {\n  MuiCssBaseline: {\n    '@global': {\n      html: {\n        fontSize: '14px',\n      },\n      'input::-webkit-inner-spin-button': {\n        marginLeft: '10px',\n      },\n      'input:enabled:read-write:-webkit-any(:focus,:hover)::-webkit-inner-spin-button': {\n        opacity: 0.3,\n      },\n      '::-webkit-scrollbar': {\n        width: '4px',\n        height: '4px',\n      },\n      '::-webkit-scrollbar-thumb': {\n        background: 'rgba(255, 255, 255, 0.2)',\n      },\n      '::-webkit-scrollbar-track': {\n        background: 'rgba(0, 0, 0, 0.1)',\n      },\n    },\n  },\n  MuiInputBase: {\n    input: {\n      '&[type=number]': {\n        textAlign: 'right',\n      },\n    },\n  },\n}\n\nexport default overrides\n","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles'\n\nimport props from './props'\nimport overrides from './overrides'\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: { main: '#444' },\n    secondary: { main: '#424242' },\n    background: {\n      paper: 'rgb(37, 37, 37)',\n      default: 'rgb(30, 30, 30)',\n      activityBar: 'rgb(51, 51, 51)',\n      titleBar: 'rgb(50, 50, 50)',\n      sidebar: 'rgb(37, 37, 37)',\n    },\n    common: {\n      black: 'rgb(30,30,30)',\n      white: 'rgb(204,204,204)',\n    },\n    action: {\n      hover: 'rgba(255, 255, 255, 0.1)',\n    },\n  },\n  bgPixel: {\n    backgroundColor: '#fff',\n    backgroundImage: `\n    linear-gradient(45deg, #ccc 25%, transparent 0, transparent 75%, #ccc 0),\n    linear-gradient(45deg, #ccc 25%, transparent 0, transparent 75%, #ccc 0)`,\n    backgroundSize: '8px 8px',\n    backgroundPosition: '0 0, 4px 4px',\n    backgroundRepeat: 'repeat',\n  },\n  spacing: 4,\n  typography: { fontSize: 13 },\n  transitions: {\n    create: () => 'none',\n  },\n  shape: { borderRadius: 0 },\n  props,\n  overrides,\n})\n\nexport default responsiveFontSizes(theme)\n","import { useContext } from 'react'\nimport { MobXProviderContext } from 'mobx-react'\nimport {\n  TStore,\n  Workspace,\n  Layout,\n  Project,\n  Style,\n  Font,\n  ProjectUi,\n  FontStyleConfig,\n} from '.'\n\nexport default function useStores(): TStore {\n  return useContext(MobXProviderContext) as TStore\n}\n\nexport function useWorkspace(): Workspace {\n  const store = useStores()\n  return store.workspace\n}\n\nexport function useLayout(): Layout {\n  const store = useStores()\n  return store.workspace.currentProject.layout\n}\n\nexport function useProject(): Project {\n  const store = useStores()\n  return store.workspace.currentProject\n}\n\nexport function useStyle(): Style {\n  const { style } = useProject()\n  return style\n}\n\nexport function useFont(): Font {\n  const { font } = useStyle()\n  return font\n}\n\nexport function useFill(): FontStyleConfig {\n  const { fill } = useStyle()\n  return fill\n}\n\nexport function useProjectUi(): ProjectUi {\n  const { ui } = useProject()\n  return ui\n}\n","export default function readFile(\n  file: File,\n): Promise<string | ArrayBuffer | null> {\n  if (file.arrayBuffer) return file.arrayBuffer()\n\n  return new Promise((resolve) => {\n    const reader = new FileReader()\n    reader.readAsArrayBuffer(file)\n    reader.onload = (e) => {\n      resolve(e?.target?.result || null)\n    }\n  })\n}\n","import React, { useState, FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\n\nimport Button from '@material-ui/core/Button'\nimport FontDownload from '@material-ui/icons/FontDownload'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport { useFont } from 'src/store/hooks'\nimport readFile from 'src/utils/readFile'\n\nconst FontFamily: FunctionComponent<unknown> = () => {\n  const [loading, setLoading] = useState(false)\n  const { setFont } = useFont()\n\n  const hanleUploadFile = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ): void => {\n    if (\n      !event ||\n      !event.target ||\n      !event.target.files ||\n      !event.target.files[0]\n    )\n      return\n\n    const file = event.target.files[0]\n    const ext = file.name.match(/\\.([A-Z0-9]+)$/i)\n    if (!ext) return\n\n    setLoading(true)\n\n    readFile(file).then((arrBuf) => {\n      if (!(arrBuf instanceof ArrayBuffer)) {\n        setLoading(false)\n        return\n      }\n\n      setFont(arrBuf)\n        .then(() => setLoading(false))\n        .catch((e) => {\n          setLoading(false)\n          window.alert(e.message)\n        })\n    })\n  }\n\n  return (\n    <Button\n      component='label'\n      variant='contained'\n      color='primary'\n      fullWidth\n      size='large'\n      startIcon={\n        loading ? (\n          <CircularProgress size={22} color='inherit' />\n        ) : (\n          <FontDownload />\n        )\n      }\n      disabled={loading}\n    >\n      Select Font File\n      <input\n        hidden\n        type='file'\n        onChange={hanleUploadFile}\n        accept='.ttf,.otf,.woff'\n      />\n    </Button>\n  )\n}\n\nexport default observer(FontFamily)\n","import React, {\n  ReactNode,\n  FunctionComponent,\n  PropsWithChildren,\n  ElementType,\n} from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\n\ninterface GridInputProps {\n  before?: ReactNode\n  after?: ReactNode\n  component?: ElementType\n  childrenWidth?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8\n}\n\nconst GridInput: FunctionComponent<GridInputProps> = (\n  props: PropsWithChildren<GridInputProps>,\n): JSX.Element => {\n  const { before, children, component, after, childrenWidth } = props\n  return (\n    <Grid\n      component={component || 'label'}\n      container\n      spacing={2}\n      wrap='nowrap'\n      justify='center'\n      alignItems='center'\n    >\n      <Grid item xs={4}>\n        {typeof before === 'object' ? (\n          before\n        ) : (\n          <Typography noWrap align='right'>\n            {before}\n          </Typography>\n        )}\n      </Grid>\n      <Grid item xs={childrenWidth || 5}>\n        {children}\n      </Grid>\n      <Grid item xs>\n        {typeof after === 'object' ? (\n          after\n        ) : (\n          <Typography noWrap variant='caption'>\n            {after}\n          </Typography>\n        )}\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default GridInput\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Input from '@material-ui/core/Input'\n\nimport GridInput from 'src/app/components/GridInput/GridInput'\n\nimport { useFont } from 'src/store/hooks'\n\nconst FontSize: FunctionComponent<unknown> = () => {\n  const { size, setSize } = useFont()\n\n  const handleInput = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ): void => {\n    setSize(Number(event.target.value))\n  }\n\n  return (\n    <GridInput before='Font Size:' after='px'>\n      <Input\n        value={size}\n        fullWidth\n        type='number'\n        inputProps={{ min: 1 }}\n        onChange={handleInput}\n      />\n    </GridInput>\n  )\n}\n\nexport default observer(FontSize)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Input from '@material-ui/core/Input'\n\nimport GridInput from 'src/app/components/GridInput/GridInput'\n\nimport { useFont } from 'src/store/hooks'\n\nconst LineHeight: FunctionComponent<unknown> = () => {\n  const { lineHeight, setLineHeight } = useFont()\n\n  const handleInput = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ): void => {\n    setLineHeight(Number(event.target.value))\n  }\n\n  return (\n    <GridInput before='Line Height:' after='multiple'>\n      <Input\n        value={lineHeight}\n        fullWidth\n        type='number'\n        inputProps={{ min: 0.5, step: 0.1 }}\n        onChange={handleInput}\n      />\n    </GridInput>\n  )\n}\n\nexport default observer(LineHeight)\n","import React, { FunctionComponent } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\n\nimport FontFamily from './FontFamily'\nimport FontSize from './FontSize'\nimport LineHeight from './LineHeight'\n\nconst Font: FunctionComponent<unknown> = () => {\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <Typography>Font</Typography>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <FontFamily />\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <FontSize />\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <LineHeight />\n      </Box>\n    </>\n  )\n}\n\nexport default Font\n","import React, { useState, FunctionComponent } from 'react'\n\nimport Box from '@material-ui/core/Box'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\n\nimport { observer } from 'mobx-react'\n\nimport { useProject } from 'src/store/hooks'\n\nconst Glyphs: FunctionComponent<unknown> = () => {\n  const { text, setText } = useProject()\n  const [isIME, setIsIME] = useState(false)\n  const [inputText, setInputText] = useState(text)\n\n  const handleInput = (event: React.ChangeEvent<HTMLTextAreaElement>): void => {\n    const { value } = event.target\n    const str = Array.from(new Set(value.split(''))).join('')\n    if (isIME) {\n      setInputText(value)\n    } else {\n      setInputText(str)\n      if (str !== text) setText(str)\n    }\n  }\n\n  const handleCompositionEnd = (): void => {\n    setIsIME(false)\n    const str = Array.from(new Set(inputText.split(''))).join('')\n    setInputText(str)\n    if (str !== text) setText(str)\n  }\n\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <Typography>Glyphs</Typography>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <TextField\n          margin='none'\n          value={isIME ? inputText : text}\n          fullWidth\n          multiline\n          rows={4}\n          variant='outlined'\n          inputProps={{ spellCheck: false }}\n          onChange={handleInput}\n          onCompositionStart={() => setIsIME(true)}\n          onCompositionEnd={handleCompositionEnd}\n        />\n      </Box>\n    </>\n  )\n}\n\nexport default observer(Glyphs)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Input from '@material-ui/core/Input'\n\nimport GridInput from 'src/app/components/GridInput'\n\nimport { useLayout } from 'src/store/hooks'\n\nconst Padding: FunctionComponent<unknown> = () => {\n  const { padding, setPadding } = useLayout()\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setPadding(Number(event.target.value))\n  }\n\n  return (\n    <GridInput before='Padding:' after='px'>\n      <Input\n        value={padding}\n        fullWidth\n        type='number'\n        inputProps={{ min: 0 }}\n        onChange={handleInput}\n      />\n    </GridInput>\n  )\n}\n\nexport default observer(Padding)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Input from '@material-ui/core/Input'\n\nimport { useLayout } from 'src/store/hooks'\n\nimport GridInput from 'src/app/components/GridInput'\n\nconst Spacing: FunctionComponent<unknown> = () => {\n  const { spacing, setSpacing } = useLayout()\n\n  return (\n    <GridInput before='Spacing:' after='px'>\n      <Input\n        value={spacing}\n        fullWidth\n        type='number'\n        inputProps={{ min: 0 }}\n        onChange={(e) => setSpacing(Number(e.target.value))}\n      />\n    </GridInput>\n  )\n}\n\nexport default observer(Spacing)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Checkbox from '@material-ui/core/Checkbox'\n\nimport { useLayout } from 'src/store/hooks'\n\nimport GridInput from 'src/app/components/GridInput'\n\nconst AutoPack: FunctionComponent<unknown> = () => {\n  const { auto, setAuto } = useLayout()\n\n  return (\n    <GridInput before='Auto Pack:'>\n      <Checkbox\n        checked={auto}\n        size='small'\n        color='default'\n        onChange={(e) => setAuto(e.target.checked)}\n      />\n    </GridInput>\n  )\n}\n\nexport default observer(AutoPack)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Checkbox from '@material-ui/core/Checkbox'\n\nimport { useLayout } from 'src/store/hooks'\n\nimport GridInput from 'src/app/components/GridInput'\n\nconst FixedSize: FunctionComponent<unknown> = () => {\n  const { auto, fixedSize, setFixedSize } = useLayout()\n\n  return (\n    <GridInput before='Fixed Size:'>\n      <Checkbox\n        checked={fixedSize}\n        size='small'\n        color='default'\n        onChange={(e) => setFixedSize(e.target.checked)}\n        disabled={auto}\n      />\n    </GridInput>\n  )\n}\n\nexport default observer(FixedSize)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Input from '@material-ui/core/Input'\n\nimport GridInput from 'src/app/components/GridInput'\n\nimport { useLayout } from 'src/store/hooks'\n\nconst PackWidth: FunctionComponent<unknown> = () => {\n  const { width, auto, fixedSize, setWidth } = useLayout()\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setWidth(Number(event.target.value))\n  }\n\n  return (\n    <GridInput before={fixedSize ? 'Width:' : 'Max Width:'} after='px'>\n      <Input\n        value={width}\n        fullWidth\n        type='number'\n        inputProps={{ min: 0 }}\n        onChange={handleInput}\n        disabled={auto}\n      />\n    </GridInput>\n  )\n}\n\nexport default observer(PackWidth)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Input from '@material-ui/core/Input'\n\nimport GridInput from 'src/app/components/GridInput'\n\nimport { useLayout } from 'src/store/hooks'\n\nconst PackHeight: FunctionComponent<unknown> = () => {\n  const { height, auto, fixedSize, setHeight } = useLayout()\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setHeight(Number(event.target.value))\n  }\n\n  return (\n    <GridInput before={fixedSize ? 'Height:' : 'Max Height:'} after='px'>\n      <Input\n        value={height}\n        fullWidth\n        type='number'\n        inputProps={{ min: 0 }}\n        onChange={handleInput}\n        disabled={auto}\n      />\n    </GridInput>\n  )\n}\n\nexport default observer(PackHeight)\n","import React, { FunctionComponent } from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\n\nimport Padding from './Padding'\nimport Spacing from './Spacing'\n// import Power from './Power'\nimport AutoPack from './AutoPack'\nimport FixedSize from './FixedSize'\nimport PackWidth from './PackWidth'\nimport PackHeight from './PackHeight'\n\nconst PackConfig: FunctionComponent<unknown> = () => {\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <Typography>Layout</Typography>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <Padding />\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <Spacing />\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <AutoPack />\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <FixedSize />\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <PackWidth />\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <PackHeight />\n      </Box>\n      {/* <Box paddingX={2} marginY={4}>\n        <Power />\n      </Box> */}\n    </>\n  )\n}\n\nexport default PackConfig\n","import React, { FunctionComponent } from 'react'\nimport Box from '@material-ui/core/Box'\nimport Input from '@material-ui/core/Input'\nimport GridInput from 'src/app/components/GridInput'\n\ninterface SetHandle {\n  (value: number): void\n}\n\ninterface FormAdjustMetricProps {\n  xAdvance: number\n  xOffset: number\n  yOffset: number\n  setXAdvance: SetHandle\n  setXOffset: SetHandle\n  setYOffset: SetHandle\n}\n\nconst FormAdjustMetric: FunctionComponent<FormAdjustMetricProps> = (\n  props: FormAdjustMetricProps,\n) => {\n  const {\n    xAdvance,\n    xOffset,\n    yOffset,\n    setXAdvance,\n    setXOffset,\n    setYOffset,\n  } = props\n\n  const getHandle = (handleSet: SetHandle) => (\n    e: React.ChangeEvent<HTMLInputElement>,\n  ) => handleSet(Number(e.target.value))\n\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <GridInput before='xAdvance:' after='px'>\n          <Input\n            value={xAdvance}\n            fullWidth\n            type='number'\n            onChange={getHandle(setXAdvance)}\n          />\n        </GridInput>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <GridInput before='xOffset:' after='px'>\n          <Input\n            value={xOffset}\n            fullWidth\n            type='number'\n            onChange={getHandle(setXOffset)}\n          />\n        </GridInput>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <GridInput before='yOffset:' after='px'>\n          <Input\n            value={yOffset}\n            fullWidth\n            type='number'\n            onChange={getHandle(setYOffset)}\n          />\n        </GridInput>\n      </Box>\n    </>\n  )\n}\n\nexport default FormAdjustMetric\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\n\nimport { useProject } from 'src/store/hooks'\n\nimport FormAdjustMetric from 'src/app/layout/common/FormAdjustMetric'\n\nconst GlobalMetric: FunctionComponent<unknown> = () => {\n  const { globalAdjustMetric } = useProject()\n  const {\n    xAdvance,\n    xOffset,\n    yOffset,\n    setXAdvance,\n    setXOffset,\n    setYOffset,\n  } = globalAdjustMetric\n\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <Typography>Global Metric Adjustment</Typography>\n      </Box>\n      <FormAdjustMetric\n        xAdvance={xAdvance}\n        xOffset={xOffset}\n        yOffset={yOffset}\n        setXAdvance={setXAdvance}\n        setXOffset={setXOffset}\n        setYOffset={setYOffset}\n      />\n    </>\n  )\n}\n\nexport default observer(GlobalMetric)\n","import React, { FunctionComponent } from 'react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Divider from '@material-ui/core/Divider'\nimport Typography from '@material-ui/core/Typography'\n\nimport Font from './modules/Font'\nimport Glyphs from './modules/Glyphs'\nimport PackConfig from './modules/PackConfig'\nimport GlobalMetric from './modules/GlobalMetric'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      overflow: 'hidden',\n      width: '256px',\n    },\n  }),\n)\n\nconst LeftBar: FunctionComponent<unknown> = () => {\n  const classes = useStyles()\n  return (\n    <Box\n      bgcolor='background.sidebar'\n      display='flex'\n      flexDirection='column'\n      overflow='hidden'\n      className={classes.root}\n    >\n      <Box bgcolor='background.sidebar' boxShadow={2} padding={2}>\n        <Typography variant='subtitle2'>Font Config</Typography>\n      </Box>\n      <Box flex={1} height={0} overflow='hidden auto'>\n        <Glyphs />\n        <Divider />\n        <Font />\n        <Divider />\n        <PackConfig />\n        <Divider />\n        <GlobalMetric />\n      </Box>\n    </Box>\n  )\n}\n\nexport default LeftBar\n","export default function formatStr(\n  str: string,\n  obj: Record<string, unknown>,\n): string {\n  return str.replace(/\\$\\w+\\$/gi, (matchs: string): string => {\n    const returns = obj[matchs.replace(/\\$/g, '')]\n    return `${returns}` === 'undefined' ? '' : `${returns}`\n  })\n}\n","import formatStr from 'src/utils/formatStr'\n\nimport { BMFont } from './toOutputInfo'\n\nconst TEMP_INFO = `<info face=\"$face$\" size=\"$size$\" bold=\"$bold$\" italic=\"$italic$\" charset=\"$charset$\" unicode=\"$unicode$\" stretchH=\"$stretchH$\" smooth=\"$smooth$\" aa=\"$aa$\" padding=\"$padding$\" spacing=\"$spacing$\" />`\nconst TEMP_COMMON = `<common lineHeight=\"$lineHeight$\" base=\"$base$\" scaleW=\"$scaleW$\" scaleH=\"$scaleH$\" pages=\"$pages$\" packed=\"$packed$\" />`\nconst TEMP_PAGE = `<page id=\"$id$\" file=\"$file$\" />`\nconst TEMP_CHARS = `<chars count=\"$count$\" />`\nconst TEMP_CHAR = `<char id=\"$id$\" x=\"$x$\" y=\"$y$\" width=\"$width$\" height=\"$height$\" xoffset=\"$xoffset$\" yoffset=\"$yoffset$\" xadvance=\"$xadvance$\" page=\"$page$\" chnl=\"$chnl$\" />`\nconst TEMP_KERNINGS = `<kernings count=\"$count$\" />`\nconst TEMP_KERNING = `<kerning first=\"$first$\" second=\"$second$\" amount=\"$amount$\" />`\n// http://www.angelcode.com/products/bmfont/doc/file_format.html\nexport default function storeToXml(bmfont: BMFont): string {\n  const { info, common, pages, chars, kernings } = bmfont\n\n  const parser = new DOMParser()\n  const xmlDOM = document.implementation.createDocument('', 'font', null)\n\n  const infoDoc = parser.parseFromString(formatStr(TEMP_INFO, info), 'text/xml')\n  xmlDOM.documentElement.appendChild(infoDoc.childNodes[0])\n\n  const commonDoc = parser.parseFromString(\n    formatStr(TEMP_COMMON, common),\n    'text/xml',\n  )\n  xmlDOM.documentElement.appendChild(commonDoc.childNodes[0])\n\n  const pagesDoc = parser.parseFromString(\n    `<pages>${pages.map((p) => formatStr(TEMP_PAGE, p))}</pages>`,\n    'text/xml',\n  )\n  xmlDOM.documentElement.appendChild(pagesDoc.childNodes[0])\n\n  const charsDoc = parser.parseFromString(\n    formatStr(TEMP_CHARS, chars),\n    'text/xml',\n  )\n\n  chars.list.forEach((char) => {\n    const charDoc = parser.parseFromString(\n      formatStr(TEMP_CHAR, char),\n      'text/xml',\n    )\n    charsDoc.childNodes[0].appendChild(charDoc.childNodes[0])\n  })\n\n  xmlDOM.documentElement.appendChild(charsDoc.childNodes[0])\n\n  if (kernings.count) {\n    const kerningsDoc = parser.parseFromString(\n      formatStr(TEMP_KERNINGS, kernings),\n      'text/xml',\n    )\n\n    kernings.list.forEach((kerning) => {\n      const kerningDoc = parser.parseFromString(\n        formatStr(TEMP_KERNING, kerning),\n        'text/xml',\n      )\n      kerningsDoc.childNodes[0].appendChild(kerningDoc.childNodes[0])\n    })\n\n    xmlDOM.documentElement.appendChild(kerningsDoc.childNodes[0])\n  }\n\n  return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>${new XMLSerializer().serializeToString(\n    xmlDOM,\n  )}`\n}\n","import formatStr from 'src/utils/formatStr'\n\nimport { BMFont } from './toOutputInfo'\n\nconst TEMP_INFO = `Font.info = {\\n\\tface = \"$face$\",\\n\\tfile = \"$file$\",\\n\\tsize = $size$,\\n\\tbold = $bold$,\\n\\titalic = $italic$,\\n\\tcharset = $charset$\\n\\tunicode = $unicode$,\\n\\tstretchH = $stretchH$,\\n\\tsmooth = $smooth$,\\n\\taa = $aa$,\\n\\tpadding = {$padding$},\\n\\tspacing = $spacing$,\\n\\tcharsCount = $charsCount$,\\n\\tkerningsCounts = $kerningsCounts$\\n}\\n\\n`\nconst TEMP_COMMON = `Font.common = {\\n\\tlineHeight = $lineHeight$,\\n\\tbase = $base$,\\n\\tscaleW = $scaleW$,\\n\\tscaleH = $scaleH$,\\n\\tpages = $pages$,\\n\\tpacked = $packed$\\n}\\n\\n`\nconst TEMP_PAGE = `\\t{ id=$id$, file=\"$file$\" }`\nconst TEMP_CHARS = `Font.chars = {\\n`\nconst TEMP_CHAR = `\\t{\\n\\t\\tid = $id$,\\n\\t\\tx = $x$,\\n\\t\\ty = $y$,\\n\\t\\twidth = $width$,\\n\\t\\theight = $height$,\\n\\t\\txoffset = $xoffset$,\\n\\t\\tyoffset = $yoffset$,\\n\\t\\txadvance = $xadvance$,\\n\\t\\tpage = 0,\\n\\t\\tchnl = 15\\n\\t}`\nconst TEMP_KERNINGS = `Font.kerning = {\\n`\nconst TEMP_KERNING = `\\t{first = $first$, second = $second$, amount = $amount$}`\n\nexport default function getLuaString(bmfont: BMFont): string {\n  const { info, common, pages, chars, kernings } = bmfont\n\n  let str = ''\n\n  str += formatStr(TEMP_INFO, {\n    ...info,\n    charset: info.charset || '\"\"',\n    charsCount: chars.count,\n    kerningsCounts: kernings.count,\n    file: pages[0].file,\n  })\n  str += formatStr(TEMP_COMMON, common)\n\n  str += `Font.pages = {\\n`\n  str += pages.map((p) => formatStr(TEMP_PAGE, p)).join(',\\n')\n  str += '\\n}\\n\\n'\n\n  str += TEMP_CHARS\n  str += chars.list.map((char) => formatStr(TEMP_CHAR, char)).join(',\\n')\n  str += '\\n}\\n\\n'\n\n  str += TEMP_KERNINGS\n  str += kernings.list\n    .map((kerning) => formatStr(TEMP_KERNING, kerning))\n    .join(',\\n')\n  str += '\\n}'\n\n  return `local Font = {}\n\n${str.replace(/\\t/g, '    ')}\n\nreturn Font\n`\n}\n","import formatStr from 'src/utils/formatStr'\n\nimport { BMFont } from './toOutputInfo'\n\nconst TEMP_INFO = `info face=\"$face$\" size=$size$ bold=$bold$ italic=$italic$ charset=$charset$ unicode=$unicode$ stretchH=$stretchH$ smooth=$smooth$ aa=$aa$ padding=$padding$ spacing=$spacing$\\n`\nconst TEMP_COMMON = `common lineHeight=$lineHeight$ base=$base$ scaleW=$scaleW$ scaleH=$scaleH$ pages=$pages$ packed=$packed$\\n`\nconst TEMP_PAGE = `page id=$id$ file=\"$file$\"\\n`\nconst TEMP_CHARS = `chars count=$count$\\n`\nconst TEMP_CHAR = `char id=$id$ x=$x$ y=$y$ width=$width$ height=$height$ xoffset=$xoffset$ yoffset=$yoffset$ xadvance=$xadvance$ page=$page$ chnl=$chnl$\\n`\nconst TEMP_KERNINGS = `kernings count=$count$\\n`\nconst TEMP_KERNING = `kerning first=$first$ second=$second$ amount=$amount$\\n`\n\nexport default function getTextString(bmfont: BMFont): string {\n  const { info, common, pages, chars, kernings } = bmfont\n\n  let str = ''\n\n  str += formatStr(TEMP_INFO, { ...info, charset: info.charset || '\"\"' })\n\n  str += formatStr(TEMP_COMMON, common)\n\n  pages.forEach((p) => {\n    str += formatStr(TEMP_PAGE, p)\n  })\n\n  str += formatStr(TEMP_CHARS, chars)\n\n  chars.list.forEach((char) => {\n    str += formatStr(TEMP_CHAR, char)\n  })\n\n  if (kernings.count) {\n    str += formatStr(TEMP_KERNINGS, kernings)\n\n    kernings.list.forEach((kerning) => {\n      str += formatStr(TEMP_KERNING, kerning)\n    })\n  }\n\n  return str\n}\n","import { Project } from 'src/store'\n\ninterface BMFontInfo extends Record<string, unknown> {\n  face: string\n  size: number\n  bold: number\n  italic: number\n  charset: string\n  unicode: number\n  stretchH: number\n  smooth: number\n  aa: number\n  padding: number[]\n  spacing: number[]\n}\n\ninterface BMFontCommon extends Record<string, unknown> {\n  lineHeight: number\n  base: number\n  scaleW: number\n  scaleH: number\n  pages: number\n  packed: number\n}\n\ninterface BMFontPage extends Record<string, unknown> {\n  id: number\n  file: string\n}\n\nexport interface BMFontChar extends Record<string, unknown> {\n  letter: string\n  id: number\n  source: HTMLImageElement | HTMLCanvasElement | null\n  x: number\n  y: number\n  width: number\n  height: number\n  xoffset: number\n  yoffset: number\n  xadvance: number\n  page: number\n  chnl: number\n}\n\ninterface BMFontChars extends Record<string, unknown> {\n  count: number\n  list: BMFontChar[]\n}\n\nexport interface BMFontKerning extends Record<string, unknown> {\n  first: number\n  second: number\n  amount: number\n}\n\ninterface BMFontKernings extends Record<string, unknown> {\n  count: number\n  list: BMFontKerning[]\n}\n\nexport interface BMFont {\n  info: BMFontInfo\n  common: BMFontCommon\n  pages: BMFontPage[]\n  chars: BMFontChars\n  kernings: BMFontKernings\n}\n\n// http://www.angelcode.com/products/bmfont/doc/file_format.html\nexport default function toOutputInfo(project: Project): BMFont {\n  const {\n    name,\n    style,\n    layout,\n    globalAdjustMetric,\n    glyphList,\n    ui: { width, height },\n  } = project\n  const { opentype, size } = style.font\n  let fontScale = 1\n  if (opentype) {\n    fontScale = (1 / opentype.unitsPerEm) * size\n  }\n  const info: BMFontInfo = {\n    face: style.font.family,\n    size: style.font.size,\n    bold: 0,\n    italic: 0,\n    charset: '',\n    unicode: 1,\n    stretchH: 100,\n    smooth: 1,\n    aa: 1,\n    padding: new Array(4).fill(layout.padding),\n    spacing: new Array(2).fill(layout.spacing),\n  }\n\n  const common: BMFontCommon = {\n    lineHeight: style.font.size,\n    base: style.font.size,\n    scaleW: width,\n    scaleH: height,\n    pages: 1,\n    packed: 0,\n  }\n\n  const pages: BMFontPage[] = [\n    {\n      id: 0,\n      file: `${name}.png`,\n    },\n  ]\n\n  const chars: BMFontChars = {\n    count: glyphList.length,\n    list: [],\n  }\n\n  const kernings: BMFontKernings = {\n    count: 0,\n    list: [],\n  }\n\n  glyphList.forEach((glyph) => {\n    const isUnEmpty = !!(glyph.width && glyph.height)\n    chars.list.push({\n      letter: glyph.letter,\n      id: glyph.letter.charCodeAt(0),\n      source: glyph.source,\n      x: glyph.x,\n      y: glyph.y,\n      width: isUnEmpty ? glyph.width + layout.padding * 2 : 0,\n      height: isUnEmpty ? glyph.height + layout.padding * 2 : 0,\n      xoffset:\n        globalAdjustMetric.xOffset +\n        glyph.adjustMetric.xOffset -\n        (isUnEmpty ? glyph.trimOffsetLeft : 0),\n      yoffset:\n        globalAdjustMetric.yOffset +\n        glyph.adjustMetric.yOffset -\n        (isUnEmpty ? glyph.trimOffsetTop : 0),\n      xadvance:\n        Math.ceil(glyph.fontWidth) +\n        globalAdjustMetric.xAdvance +\n        glyph.adjustMetric.xAdvance,\n      page: 0,\n      chnl: 15,\n    })\n    if (opentype) {\n      glyphList.forEach(({ letter }) => {\n        const amount = Math.round(\n          opentype.getKerningValue(\n            opentype.charToGlyphIndex(glyph.letter),\n            opentype.charToGlyphIndex(letter),\n          ) *\n            fontScale +\n            (glyph.kerning.get(letter) || 0),\n        )\n        if (amount) {\n          kernings.list.push({\n            first: glyph.letter.charCodeAt(0),\n            second: letter.charCodeAt(0),\n            amount,\n          })\n        }\n      })\n    } else {\n      glyph.kerning.forEach((amount, letter) => {\n        if (amount)\n          kernings.list.push({\n            first: glyph.letter.charCodeAt(0),\n            second: letter.charCodeAt(0),\n            amount,\n          })\n      })\n    }\n  })\n  kernings.count = kernings.list.length\n\n  chars.list.sort((a, b) => a.id - b.id)\n\n  return {\n    info,\n    common,\n    pages,\n    chars,\n    kernings,\n  }\n}\n","/* eslint-disable */\nimport * as $protobuf from 'protobufjs/minimal'\n\n// Common aliases\nconst $Reader = $protobuf.Reader,\n  $Writer = $protobuf.Writer,\n  $util = $protobuf.util\n\n// Exported root namespace\nconst $root = $protobuf.roots['default'] || ($protobuf.roots['default'] = {})\n\nexport const Metric = ($root.Metric = (() => {\n  /**\n   * Properties of a Metric.\n   * @exports IMetric\n   * @interface IMetric\n   * @property {number|null} [xAdvance] Metric xAdvance\n   * @property {number|null} [xOffset] Metric xOffset\n   * @property {number|null} [yOffset] Metric yOffset\n   */\n\n  /**\n   * Constructs a new Metric.\n   * @exports Metric\n   * @classdesc Represents a Metric.\n   * @implements IMetric\n   * @constructor\n   * @param {IMetric=} [properties] Properties to set\n   */\n  function Metric(properties) {\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * Metric xAdvance.\n   * @member {number} xAdvance\n   * @memberof Metric\n   * @instance\n   */\n  Metric.prototype.xAdvance = 0\n\n  /**\n   * Metric xOffset.\n   * @member {number} xOffset\n   * @memberof Metric\n   * @instance\n   */\n  Metric.prototype.xOffset = 0\n\n  /**\n   * Metric yOffset.\n   * @member {number} yOffset\n   * @memberof Metric\n   * @instance\n   */\n  Metric.prototype.yOffset = 0\n\n  /**\n   * Creates a new Metric instance using the specified properties.\n   * @function create\n   * @memberof Metric\n   * @static\n   * @param {IMetric=} [properties] Properties to set\n   * @returns {Metric} Metric instance\n   */\n  Metric.create = function create(properties) {\n    return new Metric(properties)\n  }\n\n  /**\n   * Encodes the specified Metric message. Does not implicitly {@link Metric.verify|verify} messages.\n   * @function encode\n   * @memberof Metric\n   * @static\n   * @param {IMetric} message Metric message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Metric.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (\n      message.xAdvance != null &&\n      Object.hasOwnProperty.call(message, 'xAdvance')\n    )\n      writer.uint32(/* id 1, wireType 0 =*/ 8).sint32(message.xAdvance)\n    if (\n      message.xOffset != null &&\n      Object.hasOwnProperty.call(message, 'xOffset')\n    )\n      writer.uint32(/* id 2, wireType 0 =*/ 16).sint32(message.xOffset)\n    if (\n      message.yOffset != null &&\n      Object.hasOwnProperty.call(message, 'yOffset')\n    )\n      writer.uint32(/* id 3, wireType 0 =*/ 24).sint32(message.yOffset)\n    return writer\n  }\n\n  /**\n   * Encodes the specified Metric message, length delimited. Does not implicitly {@link Metric.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof Metric\n   * @static\n   * @param {IMetric} message Metric message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Metric.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a Metric message from the specified reader or buffer.\n   * @function decode\n   * @memberof Metric\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {Metric} Metric\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Metric.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.Metric()\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.xAdvance = reader.sint32()\n          break\n        case 2:\n          message.xOffset = reader.sint32()\n          break\n        case 3:\n          message.yOffset = reader.sint32()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a Metric message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof Metric\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {Metric} Metric\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Metric.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a Metric message.\n   * @function verify\n   * @memberof Metric\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  Metric.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.xAdvance != null && message.hasOwnProperty('xAdvance'))\n      if (!$util.isInteger(message.xAdvance))\n        return 'xAdvance: integer expected'\n    if (message.xOffset != null && message.hasOwnProperty('xOffset'))\n      if (!$util.isInteger(message.xOffset)) return 'xOffset: integer expected'\n    if (message.yOffset != null && message.hasOwnProperty('yOffset'))\n      if (!$util.isInteger(message.yOffset)) return 'yOffset: integer expected'\n    return null\n  }\n\n  /**\n   * Creates a Metric message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof Metric\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {Metric} Metric\n   */\n  Metric.fromObject = function fromObject(object) {\n    if (object instanceof $root.Metric) return object\n    let message = new $root.Metric()\n    if (object.xAdvance != null) message.xAdvance = object.xAdvance | 0\n    if (object.xOffset != null) message.xOffset = object.xOffset | 0\n    if (object.yOffset != null) message.yOffset = object.yOffset | 0\n    return message\n  }\n\n  /**\n   * Creates a plain object from a Metric message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof Metric\n   * @static\n   * @param {Metric} message Metric\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  Metric.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.defaults) {\n      object.xAdvance = 0\n      object.xOffset = 0\n      object.yOffset = 0\n    }\n    if (message.xAdvance != null && message.hasOwnProperty('xAdvance'))\n      object.xAdvance = message.xAdvance\n    if (message.xOffset != null && message.hasOwnProperty('xOffset'))\n      object.xOffset = message.xOffset\n    if (message.yOffset != null && message.hasOwnProperty('yOffset'))\n      object.yOffset = message.yOffset\n    return object\n  }\n\n  /**\n   * Converts this Metric to JSON.\n   * @function toJSON\n   * @memberof Metric\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  Metric.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return Metric\n})())\n\nexport const GradientColor = ($root.GradientColor = (() => {\n  /**\n   * Properties of a GradientColor.\n   * @exports IGradientColor\n   * @interface IGradientColor\n   * @property {number|null} [id] GradientColor id\n   * @property {number|null} [offset] GradientColor offset\n   * @property {string|null} [color] GradientColor color\n   */\n\n  /**\n   * Constructs a new GradientColor.\n   * @exports GradientColor\n   * @classdesc Represents a GradientColor.\n   * @implements IGradientColor\n   * @constructor\n   * @param {IGradientColor=} [properties] Properties to set\n   */\n  function GradientColor(properties) {\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * GradientColor id.\n   * @member {number} id\n   * @memberof GradientColor\n   * @instance\n   */\n  GradientColor.prototype.id = 0\n\n  /**\n   * GradientColor offset.\n   * @member {number} offset\n   * @memberof GradientColor\n   * @instance\n   */\n  GradientColor.prototype.offset = 0\n\n  /**\n   * GradientColor color.\n   * @member {string} color\n   * @memberof GradientColor\n   * @instance\n   */\n  GradientColor.prototype.color = ''\n\n  /**\n   * Creates a new GradientColor instance using the specified properties.\n   * @function create\n   * @memberof GradientColor\n   * @static\n   * @param {IGradientColor=} [properties] Properties to set\n   * @returns {GradientColor} GradientColor instance\n   */\n  GradientColor.create = function create(properties) {\n    return new GradientColor(properties)\n  }\n\n  /**\n   * Encodes the specified GradientColor message. Does not implicitly {@link GradientColor.verify|verify} messages.\n   * @function encode\n   * @memberof GradientColor\n   * @static\n   * @param {IGradientColor} message GradientColor message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  GradientColor.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (message.id != null && Object.hasOwnProperty.call(message, 'id'))\n      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.id)\n    if (message.offset != null && Object.hasOwnProperty.call(message, 'offset'))\n      writer.uint32(/* id 2, wireType 0 =*/ 16).sint32(message.offset)\n    if (message.color != null && Object.hasOwnProperty.call(message, 'color'))\n      writer.uint32(/* id 3, wireType 2 =*/ 26).string(message.color)\n    return writer\n  }\n\n  /**\n   * Encodes the specified GradientColor message, length delimited. Does not implicitly {@link GradientColor.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof GradientColor\n   * @static\n   * @param {IGradientColor} message GradientColor message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  GradientColor.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a GradientColor message from the specified reader or buffer.\n   * @function decode\n   * @memberof GradientColor\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {GradientColor} GradientColor\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  GradientColor.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.GradientColor()\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.id = reader.int32()\n          break\n        case 2:\n          message.offset = reader.sint32()\n          break\n        case 3:\n          message.color = reader.string()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a GradientColor message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof GradientColor\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {GradientColor} GradientColor\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  GradientColor.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a GradientColor message.\n   * @function verify\n   * @memberof GradientColor\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  GradientColor.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.id != null && message.hasOwnProperty('id'))\n      if (!$util.isInteger(message.id)) return 'id: integer expected'\n    if (message.offset != null && message.hasOwnProperty('offset'))\n      if (!$util.isInteger(message.offset)) return 'offset: integer expected'\n    if (message.color != null && message.hasOwnProperty('color'))\n      if (!$util.isString(message.color)) return 'color: string expected'\n    return null\n  }\n\n  /**\n   * Creates a GradientColor message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof GradientColor\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {GradientColor} GradientColor\n   */\n  GradientColor.fromObject = function fromObject(object) {\n    if (object instanceof $root.GradientColor) return object\n    let message = new $root.GradientColor()\n    if (object.id != null) message.id = object.id | 0\n    if (object.offset != null) message.offset = object.offset | 0\n    if (object.color != null) message.color = String(object.color)\n    return message\n  }\n\n  /**\n   * Creates a plain object from a GradientColor message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof GradientColor\n   * @static\n   * @param {GradientColor} message GradientColor\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  GradientColor.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.defaults) {\n      object.id = 0\n      object.offset = 0\n      object.color = ''\n    }\n    if (message.id != null && message.hasOwnProperty('id'))\n      object.id = message.id\n    if (message.offset != null && message.hasOwnProperty('offset'))\n      object.offset = message.offset\n    if (message.color != null && message.hasOwnProperty('color'))\n      object.color = message.color\n    return object\n  }\n\n  /**\n   * Converts this GradientColor to JSON.\n   * @function toJSON\n   * @memberof GradientColor\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  GradientColor.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return GradientColor\n})())\n\nexport const Gradient = ($root.Gradient = (() => {\n  /**\n   * Properties of a Gradient.\n   * @exports IGradient\n   * @interface IGradient\n   * @property {number|null} [type] Gradient type\n   * @property {number|null} [angle] Gradient angle\n   * @property {Array.<IGradientColor>|null} [palette] Gradient palette\n   */\n\n  /**\n   * Constructs a new Gradient.\n   * @exports Gradient\n   * @classdesc Represents a Gradient.\n   * @implements IGradient\n   * @constructor\n   * @param {IGradient=} [properties] Properties to set\n   */\n  function Gradient(properties) {\n    this.palette = []\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * Gradient type.\n   * @member {number} type\n   * @memberof Gradient\n   * @instance\n   */\n  Gradient.prototype.type = 0\n\n  /**\n   * Gradient angle.\n   * @member {number} angle\n   * @memberof Gradient\n   * @instance\n   */\n  Gradient.prototype.angle = 0\n\n  /**\n   * Gradient palette.\n   * @member {Array.<IGradientColor>} palette\n   * @memberof Gradient\n   * @instance\n   */\n  Gradient.prototype.palette = $util.emptyArray\n\n  /**\n   * Creates a new Gradient instance using the specified properties.\n   * @function create\n   * @memberof Gradient\n   * @static\n   * @param {IGradient=} [properties] Properties to set\n   * @returns {Gradient} Gradient instance\n   */\n  Gradient.create = function create(properties) {\n    return new Gradient(properties)\n  }\n\n  /**\n   * Encodes the specified Gradient message. Does not implicitly {@link Gradient.verify|verify} messages.\n   * @function encode\n   * @memberof Gradient\n   * @static\n   * @param {IGradient} message Gradient message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Gradient.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (message.type != null && Object.hasOwnProperty.call(message, 'type'))\n      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.type)\n    if (message.angle != null && Object.hasOwnProperty.call(message, 'angle'))\n      writer.uint32(/* id 2, wireType 5 =*/ 21).float(message.angle)\n    if (message.palette != null && message.palette.length)\n      for (let i = 0; i < message.palette.length; ++i)\n        $root.GradientColor.encode(\n          message.palette[i],\n          writer.uint32(/* id 3, wireType 2 =*/ 26).fork(),\n        ).ldelim()\n    return writer\n  }\n\n  /**\n   * Encodes the specified Gradient message, length delimited. Does not implicitly {@link Gradient.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof Gradient\n   * @static\n   * @param {IGradient} message Gradient message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Gradient.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a Gradient message from the specified reader or buffer.\n   * @function decode\n   * @memberof Gradient\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {Gradient} Gradient\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Gradient.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.Gradient()\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.int32()\n          break\n        case 2:\n          message.angle = reader.float()\n          break\n        case 3:\n          if (!(message.palette && message.palette.length)) message.palette = []\n          message.palette.push(\n            $root.GradientColor.decode(reader, reader.uint32()),\n          )\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a Gradient message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof Gradient\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {Gradient} Gradient\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Gradient.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a Gradient message.\n   * @function verify\n   * @memberof Gradient\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  Gradient.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.type != null && message.hasOwnProperty('type'))\n      if (!$util.isInteger(message.type)) return 'type: integer expected'\n    if (message.angle != null && message.hasOwnProperty('angle'))\n      if (typeof message.angle !== 'number') return 'angle: number expected'\n    if (message.palette != null && message.hasOwnProperty('palette')) {\n      if (!Array.isArray(message.palette)) return 'palette: array expected'\n      for (let i = 0; i < message.palette.length; ++i) {\n        let error = $root.GradientColor.verify(message.palette[i])\n        if (error) return 'palette.' + error\n      }\n    }\n    return null\n  }\n\n  /**\n   * Creates a Gradient message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof Gradient\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {Gradient} Gradient\n   */\n  Gradient.fromObject = function fromObject(object) {\n    if (object instanceof $root.Gradient) return object\n    let message = new $root.Gradient()\n    if (object.type != null) message.type = object.type | 0\n    if (object.angle != null) message.angle = Number(object.angle)\n    if (object.palette) {\n      if (!Array.isArray(object.palette))\n        throw TypeError('.Gradient.palette: array expected')\n      message.palette = []\n      for (let i = 0; i < object.palette.length; ++i) {\n        if (typeof object.palette[i] !== 'object')\n          throw TypeError('.Gradient.palette: object expected')\n        message.palette[i] = $root.GradientColor.fromObject(object.palette[i])\n      }\n    }\n    return message\n  }\n\n  /**\n   * Creates a plain object from a Gradient message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof Gradient\n   * @static\n   * @param {Gradient} message Gradient\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  Gradient.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.arrays || options.defaults) object.palette = []\n    if (options.defaults) {\n      object.type = 0\n      object.angle = 0\n    }\n    if (message.type != null && message.hasOwnProperty('type'))\n      object.type = message.type\n    if (message.angle != null && message.hasOwnProperty('angle'))\n      object.angle =\n        options.json && !isFinite(message.angle)\n          ? String(message.angle)\n          : message.angle\n    if (message.palette && message.palette.length) {\n      object.palette = []\n      for (let j = 0; j < message.palette.length; ++j)\n        object.palette[j] = $root.GradientColor.toObject(\n          message.palette[j],\n          options,\n        )\n    }\n    return object\n  }\n\n  /**\n   * Converts this Gradient to JSON.\n   * @function toJSON\n   * @memberof Gradient\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  Gradient.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return Gradient\n})())\n\nexport const PatternTexture = ($root.PatternTexture = (() => {\n  /**\n   * Properties of a PatternTexture.\n   * @exports IPatternTexture\n   * @interface IPatternTexture\n   * @property {Uint8Array|null} [buffer] PatternTexture buffer\n   * @property {number|null} [scale] PatternTexture scale\n   * @property {string|null} [repetition] PatternTexture repetition\n   */\n\n  /**\n   * Constructs a new PatternTexture.\n   * @exports PatternTexture\n   * @classdesc Represents a PatternTexture.\n   * @implements IPatternTexture\n   * @constructor\n   * @param {IPatternTexture=} [properties] Properties to set\n   */\n  function PatternTexture(properties) {\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * PatternTexture buffer.\n   * @member {Uint8Array} buffer\n   * @memberof PatternTexture\n   * @instance\n   */\n  PatternTexture.prototype.buffer = $util.newBuffer([])\n\n  /**\n   * PatternTexture scale.\n   * @member {number} scale\n   * @memberof PatternTexture\n   * @instance\n   */\n  PatternTexture.prototype.scale = 0\n\n  /**\n   * PatternTexture repetition.\n   * @member {string} repetition\n   * @memberof PatternTexture\n   * @instance\n   */\n  PatternTexture.prototype.repetition = ''\n\n  /**\n   * Creates a new PatternTexture instance using the specified properties.\n   * @function create\n   * @memberof PatternTexture\n   * @static\n   * @param {IPatternTexture=} [properties] Properties to set\n   * @returns {PatternTexture} PatternTexture instance\n   */\n  PatternTexture.create = function create(properties) {\n    return new PatternTexture(properties)\n  }\n\n  /**\n   * Encodes the specified PatternTexture message. Does not implicitly {@link PatternTexture.verify|verify} messages.\n   * @function encode\n   * @memberof PatternTexture\n   * @static\n   * @param {IPatternTexture} message PatternTexture message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  PatternTexture.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (message.buffer != null && Object.hasOwnProperty.call(message, 'buffer'))\n      writer.uint32(/* id 1, wireType 2 =*/ 10).bytes(message.buffer)\n    if (message.scale != null && Object.hasOwnProperty.call(message, 'scale'))\n      writer.uint32(/* id 2, wireType 1 =*/ 17).double(message.scale)\n    if (\n      message.repetition != null &&\n      Object.hasOwnProperty.call(message, 'repetition')\n    )\n      writer.uint32(/* id 3, wireType 2 =*/ 26).string(message.repetition)\n    return writer\n  }\n\n  /**\n   * Encodes the specified PatternTexture message, length delimited. Does not implicitly {@link PatternTexture.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof PatternTexture\n   * @static\n   * @param {IPatternTexture} message PatternTexture message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  PatternTexture.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a PatternTexture message from the specified reader or buffer.\n   * @function decode\n   * @memberof PatternTexture\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {PatternTexture} PatternTexture\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  PatternTexture.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.PatternTexture()\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.buffer = reader.bytes()\n          break\n        case 2:\n          message.scale = reader.double()\n          break\n        case 3:\n          message.repetition = reader.string()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a PatternTexture message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof PatternTexture\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {PatternTexture} PatternTexture\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  PatternTexture.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a PatternTexture message.\n   * @function verify\n   * @memberof PatternTexture\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  PatternTexture.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.buffer != null && message.hasOwnProperty('buffer'))\n      if (\n        !(\n          (message.buffer && typeof message.buffer.length === 'number') ||\n          $util.isString(message.buffer)\n        )\n      )\n        return 'buffer: buffer expected'\n    if (message.scale != null && message.hasOwnProperty('scale'))\n      if (typeof message.scale !== 'number') return 'scale: number expected'\n    if (message.repetition != null && message.hasOwnProperty('repetition'))\n      if (!$util.isString(message.repetition))\n        return 'repetition: string expected'\n    return null\n  }\n\n  /**\n   * Creates a PatternTexture message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof PatternTexture\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {PatternTexture} PatternTexture\n   */\n  PatternTexture.fromObject = function fromObject(object) {\n    if (object instanceof $root.PatternTexture) return object\n    let message = new $root.PatternTexture()\n    if (object.buffer != null)\n      if (typeof object.buffer === 'string')\n        $util.base64.decode(\n          object.buffer,\n          (message.buffer = $util.newBuffer(\n            $util.base64.length(object.buffer),\n          )),\n          0,\n        )\n      else if (object.buffer.length) message.buffer = object.buffer\n    if (object.scale != null) message.scale = Number(object.scale)\n    if (object.repetition != null)\n      message.repetition = String(object.repetition)\n    return message\n  }\n\n  /**\n   * Creates a plain object from a PatternTexture message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof PatternTexture\n   * @static\n   * @param {PatternTexture} message PatternTexture\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  PatternTexture.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.defaults) {\n      if (options.bytes === String) object.buffer = ''\n      else {\n        object.buffer = []\n        if (options.bytes !== Array)\n          object.buffer = $util.newBuffer(object.buffer)\n      }\n      object.scale = 0\n      object.repetition = ''\n    }\n    if (message.buffer != null && message.hasOwnProperty('buffer'))\n      object.buffer =\n        options.bytes === String\n          ? $util.base64.encode(message.buffer, 0, message.buffer.length)\n          : options.bytes === Array\n          ? Array.prototype.slice.call(message.buffer)\n          : message.buffer\n    if (message.scale != null && message.hasOwnProperty('scale'))\n      object.scale =\n        options.json && !isFinite(message.scale)\n          ? String(message.scale)\n          : message.scale\n    if (message.repetition != null && message.hasOwnProperty('repetition'))\n      object.repetition = message.repetition\n    return object\n  }\n\n  /**\n   * Converts this PatternTexture to JSON.\n   * @function toJSON\n   * @memberof PatternTexture\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  PatternTexture.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return PatternTexture\n})())\n\nexport const Fill = ($root.Fill = (() => {\n  /**\n   * Properties of a Fill.\n   * @exports IFill\n   * @interface IFill\n   * @property {number|null} [type] Fill type\n   * @property {string|null} [color] Fill color\n   * @property {IGradient|null} [gradient] Fill gradient\n   * @property {IPatternTexture|null} [patternTexture] Fill patternTexture\n   * @property {number|null} [width] Fill width\n   * @property {string|null} [lineCap] Fill lineCap\n   * @property {string|null} [lineJoin] Fill lineJoin\n   */\n\n  /**\n   * Constructs a new Fill.\n   * @exports Fill\n   * @classdesc Represents a Fill.\n   * @implements IFill\n   * @constructor\n   * @param {IFill=} [properties] Properties to set\n   */\n  function Fill(properties) {\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * Fill type.\n   * @member {number} type\n   * @memberof Fill\n   * @instance\n   */\n  Fill.prototype.type = 0\n\n  /**\n   * Fill color.\n   * @member {string} color\n   * @memberof Fill\n   * @instance\n   */\n  Fill.prototype.color = ''\n\n  /**\n   * Fill gradient.\n   * @member {IGradient|null|undefined} gradient\n   * @memberof Fill\n   * @instance\n   */\n  Fill.prototype.gradient = null\n\n  /**\n   * Fill patternTexture.\n   * @member {IPatternTexture|null|undefined} patternTexture\n   * @memberof Fill\n   * @instance\n   */\n  Fill.prototype.patternTexture = null\n\n  /**\n   * Fill width.\n   * @member {number} width\n   * @memberof Fill\n   * @instance\n   */\n  Fill.prototype.width = 0\n\n  /**\n   * Fill lineCap.\n   * @member {string} lineCap\n   * @memberof Fill\n   * @instance\n   */\n  Fill.prototype.lineCap = ''\n\n  /**\n   * Fill lineJoin.\n   * @member {string} lineJoin\n   * @memberof Fill\n   * @instance\n   */\n  Fill.prototype.lineJoin = ''\n\n  /**\n   * Creates a new Fill instance using the specified properties.\n   * @function create\n   * @memberof Fill\n   * @static\n   * @param {IFill=} [properties] Properties to set\n   * @returns {Fill} Fill instance\n   */\n  Fill.create = function create(properties) {\n    return new Fill(properties)\n  }\n\n  /**\n   * Encodes the specified Fill message. Does not implicitly {@link Fill.verify|verify} messages.\n   * @function encode\n   * @memberof Fill\n   * @static\n   * @param {IFill} message Fill message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Fill.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (message.type != null && Object.hasOwnProperty.call(message, 'type'))\n      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.type)\n    if (message.color != null && Object.hasOwnProperty.call(message, 'color'))\n      writer.uint32(/* id 2, wireType 2 =*/ 18).string(message.color)\n    if (\n      message.gradient != null &&\n      Object.hasOwnProperty.call(message, 'gradient')\n    )\n      $root.Gradient.encode(\n        message.gradient,\n        writer.uint32(/* id 3, wireType 2 =*/ 26).fork(),\n      ).ldelim()\n    if (\n      message.patternTexture != null &&\n      Object.hasOwnProperty.call(message, 'patternTexture')\n    )\n      $root.PatternTexture.encode(\n        message.patternTexture,\n        writer.uint32(/* id 4, wireType 2 =*/ 34).fork(),\n      ).ldelim()\n    if (message.width != null && Object.hasOwnProperty.call(message, 'width'))\n      writer.uint32(/* id 5, wireType 0 =*/ 40).int32(message.width)\n    if (\n      message.lineCap != null &&\n      Object.hasOwnProperty.call(message, 'lineCap')\n    )\n      writer.uint32(/* id 6, wireType 2 =*/ 50).string(message.lineCap)\n    if (\n      message.lineJoin != null &&\n      Object.hasOwnProperty.call(message, 'lineJoin')\n    )\n      writer.uint32(/* id 7, wireType 2 =*/ 58).string(message.lineJoin)\n    return writer\n  }\n\n  /**\n   * Encodes the specified Fill message, length delimited. Does not implicitly {@link Fill.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof Fill\n   * @static\n   * @param {IFill} message Fill message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Fill.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a Fill message from the specified reader or buffer.\n   * @function decode\n   * @memberof Fill\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {Fill} Fill\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Fill.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.Fill()\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.int32()\n          break\n        case 2:\n          message.color = reader.string()\n          break\n        case 3:\n          message.gradient = $root.Gradient.decode(reader, reader.uint32())\n          break\n        case 4:\n          message.patternTexture = $root.PatternTexture.decode(\n            reader,\n            reader.uint32(),\n          )\n          break\n        case 5:\n          message.width = reader.int32()\n          break\n        case 6:\n          message.lineCap = reader.string()\n          break\n        case 7:\n          message.lineJoin = reader.string()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a Fill message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof Fill\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {Fill} Fill\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Fill.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a Fill message.\n   * @function verify\n   * @memberof Fill\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  Fill.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.type != null && message.hasOwnProperty('type'))\n      if (!$util.isInteger(message.type)) return 'type: integer expected'\n    if (message.color != null && message.hasOwnProperty('color'))\n      if (!$util.isString(message.color)) return 'color: string expected'\n    if (message.gradient != null && message.hasOwnProperty('gradient')) {\n      let error = $root.Gradient.verify(message.gradient)\n      if (error) return 'gradient.' + error\n    }\n    if (\n      message.patternTexture != null &&\n      message.hasOwnProperty('patternTexture')\n    ) {\n      let error = $root.PatternTexture.verify(message.patternTexture)\n      if (error) return 'patternTexture.' + error\n    }\n    if (message.width != null && message.hasOwnProperty('width'))\n      if (!$util.isInteger(message.width)) return 'width: integer expected'\n    if (message.lineCap != null && message.hasOwnProperty('lineCap'))\n      if (!$util.isString(message.lineCap)) return 'lineCap: string expected'\n    if (message.lineJoin != null && message.hasOwnProperty('lineJoin'))\n      if (!$util.isString(message.lineJoin)) return 'lineJoin: string expected'\n    return null\n  }\n\n  /**\n   * Creates a Fill message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof Fill\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {Fill} Fill\n   */\n  Fill.fromObject = function fromObject(object) {\n    if (object instanceof $root.Fill) return object\n    let message = new $root.Fill()\n    if (object.type != null) message.type = object.type | 0\n    if (object.color != null) message.color = String(object.color)\n    if (object.gradient != null) {\n      if (typeof object.gradient !== 'object')\n        throw TypeError('.Fill.gradient: object expected')\n      message.gradient = $root.Gradient.fromObject(object.gradient)\n    }\n    if (object.patternTexture != null) {\n      if (typeof object.patternTexture !== 'object')\n        throw TypeError('.Fill.patternTexture: object expected')\n      message.patternTexture = $root.PatternTexture.fromObject(\n        object.patternTexture,\n      )\n    }\n    if (object.width != null) message.width = object.width | 0\n    if (object.lineCap != null) message.lineCap = String(object.lineCap)\n    if (object.lineJoin != null) message.lineJoin = String(object.lineJoin)\n    return message\n  }\n\n  /**\n   * Creates a plain object from a Fill message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof Fill\n   * @static\n   * @param {Fill} message Fill\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  Fill.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.defaults) {\n      object.type = 0\n      object.color = ''\n      object.gradient = null\n      object.patternTexture = null\n      object.width = 0\n      object.lineCap = ''\n      object.lineJoin = ''\n    }\n    if (message.type != null && message.hasOwnProperty('type'))\n      object.type = message.type\n    if (message.color != null && message.hasOwnProperty('color'))\n      object.color = message.color\n    if (message.gradient != null && message.hasOwnProperty('gradient'))\n      object.gradient = $root.Gradient.toObject(message.gradient, options)\n    if (\n      message.patternTexture != null &&\n      message.hasOwnProperty('patternTexture')\n    )\n      object.patternTexture = $root.PatternTexture.toObject(\n        message.patternTexture,\n        options,\n      )\n    if (message.width != null && message.hasOwnProperty('width'))\n      object.width = message.width\n    if (message.lineCap != null && message.hasOwnProperty('lineCap'))\n      object.lineCap = message.lineCap\n    if (message.lineJoin != null && message.hasOwnProperty('lineJoin'))\n      object.lineJoin = message.lineJoin\n    return object\n  }\n\n  /**\n   * Converts this Fill to JSON.\n   * @function toJSON\n   * @memberof Fill\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  Fill.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return Fill\n})())\n\nexport const Font = ($root.Font = (() => {\n  /**\n   * Properties of a Font.\n   * @exports IFont\n   * @interface IFont\n   * @property {Uint8Array|null} [font] Font font\n   * @property {string|null} [family] Font family\n   * @property {number|null} [size] Font size\n   * @property {number|null} [lineHeight] Font lineHeight\n   */\n\n  /**\n   * Constructs a new Font.\n   * @exports Font\n   * @classdesc Represents a Font.\n   * @implements IFont\n   * @constructor\n   * @param {IFont=} [properties] Properties to set\n   */\n  function Font(properties) {\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * Font font.\n   * @member {Uint8Array} font\n   * @memberof Font\n   * @instance\n   */\n  Font.prototype.font = $util.newBuffer([])\n\n  /**\n   * Font family.\n   * @member {string} family\n   * @memberof Font\n   * @instance\n   */\n  Font.prototype.family = ''\n\n  /**\n   * Font size.\n   * @member {number} size\n   * @memberof Font\n   * @instance\n   */\n  Font.prototype.size = 0\n\n  /**\n   * Font lineHeight.\n   * @member {number} lineHeight\n   * @memberof Font\n   * @instance\n   */\n  Font.prototype.lineHeight = 0\n\n  /**\n   * Creates a new Font instance using the specified properties.\n   * @function create\n   * @memberof Font\n   * @static\n   * @param {IFont=} [properties] Properties to set\n   * @returns {Font} Font instance\n   */\n  Font.create = function create(properties) {\n    return new Font(properties)\n  }\n\n  /**\n   * Encodes the specified Font message. Does not implicitly {@link Font.verify|verify} messages.\n   * @function encode\n   * @memberof Font\n   * @static\n   * @param {IFont} message Font message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Font.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (message.font != null && Object.hasOwnProperty.call(message, 'font'))\n      writer.uint32(/* id 1, wireType 2 =*/ 10).bytes(message.font)\n    if (message.family != null && Object.hasOwnProperty.call(message, 'family'))\n      writer.uint32(/* id 2, wireType 2 =*/ 18).string(message.family)\n    if (message.size != null && Object.hasOwnProperty.call(message, 'size'))\n      writer.uint32(/* id 3, wireType 0 =*/ 24).int32(message.size)\n    if (\n      message.lineHeight != null &&\n      Object.hasOwnProperty.call(message, 'lineHeight')\n    )\n      writer.uint32(/* id 4, wireType 0 =*/ 32).int32(message.lineHeight)\n    return writer\n  }\n\n  /**\n   * Encodes the specified Font message, length delimited. Does not implicitly {@link Font.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof Font\n   * @static\n   * @param {IFont} message Font message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Font.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a Font message from the specified reader or buffer.\n   * @function decode\n   * @memberof Font\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {Font} Font\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Font.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.Font()\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.font = reader.bytes()\n          break\n        case 2:\n          message.family = reader.string()\n          break\n        case 3:\n          message.size = reader.int32()\n          break\n        case 4:\n          message.lineHeight = reader.int32()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a Font message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof Font\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {Font} Font\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Font.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a Font message.\n   * @function verify\n   * @memberof Font\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  Font.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.font != null && message.hasOwnProperty('font'))\n      if (\n        !(\n          (message.font && typeof message.font.length === 'number') ||\n          $util.isString(message.font)\n        )\n      )\n        return 'font: buffer expected'\n    if (message.family != null && message.hasOwnProperty('family'))\n      if (!$util.isString(message.family)) return 'family: string expected'\n    if (message.size != null && message.hasOwnProperty('size'))\n      if (!$util.isInteger(message.size)) return 'size: integer expected'\n    if (message.lineHeight != null && message.hasOwnProperty('lineHeight'))\n      if (!$util.isInteger(message.lineHeight))\n        return 'lineHeight: integer expected'\n    return null\n  }\n\n  /**\n   * Creates a Font message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof Font\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {Font} Font\n   */\n  Font.fromObject = function fromObject(object) {\n    if (object instanceof $root.Font) return object\n    let message = new $root.Font()\n    if (object.font != null)\n      if (typeof object.font === 'string')\n        $util.base64.decode(\n          object.font,\n          (message.font = $util.newBuffer($util.base64.length(object.font))),\n          0,\n        )\n      else if (object.font.length) message.font = object.font\n    if (object.family != null) message.family = String(object.family)\n    if (object.size != null) message.size = object.size | 0\n    if (object.lineHeight != null) message.lineHeight = object.lineHeight | 0\n    return message\n  }\n\n  /**\n   * Creates a plain object from a Font message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof Font\n   * @static\n   * @param {Font} message Font\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  Font.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.defaults) {\n      if (options.bytes === String) object.font = ''\n      else {\n        object.font = []\n        if (options.bytes !== Array) object.font = $util.newBuffer(object.font)\n      }\n      object.family = ''\n      object.size = 0\n      object.lineHeight = 0\n    }\n    if (message.font != null && message.hasOwnProperty('font'))\n      object.font =\n        options.bytes === String\n          ? $util.base64.encode(message.font, 0, message.font.length)\n          : options.bytes === Array\n          ? Array.prototype.slice.call(message.font)\n          : message.font\n    if (message.family != null && message.hasOwnProperty('family'))\n      object.family = message.family\n    if (message.size != null && message.hasOwnProperty('size'))\n      object.size = message.size\n    if (message.lineHeight != null && message.hasOwnProperty('lineHeight'))\n      object.lineHeight = message.lineHeight\n    return object\n  }\n\n  /**\n   * Converts this Font to JSON.\n   * @function toJSON\n   * @memberof Font\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  Font.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return Font\n})())\n\nexport const GlyphFont = ($root.GlyphFont = (() => {\n  /**\n   * Properties of a GlyphFont.\n   * @exports IGlyphFont\n   * @interface IGlyphFont\n   * @property {string|null} [letter] GlyphFont letter\n   * @property {IMetric|null} [adjustMetric] GlyphFont adjustMetric\n   * @property {Object.<string,number>|null} [kerning] GlyphFont kerning\n   */\n\n  /**\n   * Constructs a new GlyphFont.\n   * @exports GlyphFont\n   * @classdesc Represents a GlyphFont.\n   * @implements IGlyphFont\n   * @constructor\n   * @param {IGlyphFont=} [properties] Properties to set\n   */\n  function GlyphFont(properties) {\n    this.kerning = {}\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * GlyphFont letter.\n   * @member {string} letter\n   * @memberof GlyphFont\n   * @instance\n   */\n  GlyphFont.prototype.letter = ''\n\n  /**\n   * GlyphFont adjustMetric.\n   * @member {IMetric|null|undefined} adjustMetric\n   * @memberof GlyphFont\n   * @instance\n   */\n  GlyphFont.prototype.adjustMetric = null\n\n  /**\n   * GlyphFont kerning.\n   * @member {Object.<string,number>} kerning\n   * @memberof GlyphFont\n   * @instance\n   */\n  GlyphFont.prototype.kerning = $util.emptyObject\n\n  /**\n   * Creates a new GlyphFont instance using the specified properties.\n   * @function create\n   * @memberof GlyphFont\n   * @static\n   * @param {IGlyphFont=} [properties] Properties to set\n   * @returns {GlyphFont} GlyphFont instance\n   */\n  GlyphFont.create = function create(properties) {\n    return new GlyphFont(properties)\n  }\n\n  /**\n   * Encodes the specified GlyphFont message. Does not implicitly {@link GlyphFont.verify|verify} messages.\n   * @function encode\n   * @memberof GlyphFont\n   * @static\n   * @param {IGlyphFont} message GlyphFont message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  GlyphFont.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (message.letter != null && Object.hasOwnProperty.call(message, 'letter'))\n      writer.uint32(/* id 1, wireType 2 =*/ 10).string(message.letter)\n    if (\n      message.adjustMetric != null &&\n      Object.hasOwnProperty.call(message, 'adjustMetric')\n    )\n      $root.Metric.encode(\n        message.adjustMetric,\n        writer.uint32(/* id 2, wireType 2 =*/ 18).fork(),\n      ).ldelim()\n    if (\n      message.kerning != null &&\n      Object.hasOwnProperty.call(message, 'kerning')\n    )\n      for (let keys = Object.keys(message.kerning), i = 0; i < keys.length; ++i)\n        writer\n          .uint32(/* id 3, wireType 2 =*/ 26)\n          .fork()\n          .uint32(/* id 1, wireType 2 =*/ 10)\n          .string(keys[i])\n          .uint32(/* id 2, wireType 0 =*/ 16)\n          .int32(message.kerning[keys[i]])\n          .ldelim()\n    return writer\n  }\n\n  /**\n   * Encodes the specified GlyphFont message, length delimited. Does not implicitly {@link GlyphFont.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof GlyphFont\n   * @static\n   * @param {IGlyphFont} message GlyphFont message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  GlyphFont.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a GlyphFont message from the specified reader or buffer.\n   * @function decode\n   * @memberof GlyphFont\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {GlyphFont} GlyphFont\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  GlyphFont.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.GlyphFont(),\n      key,\n      value\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.letter = reader.string()\n          break\n        case 2:\n          message.adjustMetric = $root.Metric.decode(reader, reader.uint32())\n          break\n        case 3:\n          if (message.kerning === $util.emptyObject) message.kerning = {}\n          let end2 = reader.uint32() + reader.pos\n          key = ''\n          value = 0\n          while (reader.pos < end2) {\n            let tag2 = reader.uint32()\n            switch (tag2 >>> 3) {\n              case 1:\n                key = reader.string()\n                break\n              case 2:\n                value = reader.int32()\n                break\n              default:\n                reader.skipType(tag2 & 7)\n                break\n            }\n          }\n          message.kerning[key] = value\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a GlyphFont message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof GlyphFont\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {GlyphFont} GlyphFont\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  GlyphFont.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a GlyphFont message.\n   * @function verify\n   * @memberof GlyphFont\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  GlyphFont.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.letter != null && message.hasOwnProperty('letter'))\n      if (!$util.isString(message.letter)) return 'letter: string expected'\n    if (\n      message.adjustMetric != null &&\n      message.hasOwnProperty('adjustMetric')\n    ) {\n      let error = $root.Metric.verify(message.adjustMetric)\n      if (error) return 'adjustMetric.' + error\n    }\n    if (message.kerning != null && message.hasOwnProperty('kerning')) {\n      if (!$util.isObject(message.kerning)) return 'kerning: object expected'\n      let key = Object.keys(message.kerning)\n      for (let i = 0; i < key.length; ++i)\n        if (!$util.isInteger(message.kerning[key[i]]))\n          return 'kerning: integer{k:string} expected'\n    }\n    return null\n  }\n\n  /**\n   * Creates a GlyphFont message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof GlyphFont\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {GlyphFont} GlyphFont\n   */\n  GlyphFont.fromObject = function fromObject(object) {\n    if (object instanceof $root.GlyphFont) return object\n    let message = new $root.GlyphFont()\n    if (object.letter != null) message.letter = String(object.letter)\n    if (object.adjustMetric != null) {\n      if (typeof object.adjustMetric !== 'object')\n        throw TypeError('.GlyphFont.adjustMetric: object expected')\n      message.adjustMetric = $root.Metric.fromObject(object.adjustMetric)\n    }\n    if (object.kerning) {\n      if (typeof object.kerning !== 'object')\n        throw TypeError('.GlyphFont.kerning: object expected')\n      message.kerning = {}\n      for (let keys = Object.keys(object.kerning), i = 0; i < keys.length; ++i)\n        message.kerning[keys[i]] = object.kerning[keys[i]] | 0\n    }\n    return message\n  }\n\n  /**\n   * Creates a plain object from a GlyphFont message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof GlyphFont\n   * @static\n   * @param {GlyphFont} message GlyphFont\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  GlyphFont.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.objects || options.defaults) object.kerning = {}\n    if (options.defaults) {\n      object.letter = ''\n      object.adjustMetric = null\n    }\n    if (message.letter != null && message.hasOwnProperty('letter'))\n      object.letter = message.letter\n    if (message.adjustMetric != null && message.hasOwnProperty('adjustMetric'))\n      object.adjustMetric = $root.Metric.toObject(message.adjustMetric, options)\n    let keys2\n    if (message.kerning && (keys2 = Object.keys(message.kerning)).length) {\n      object.kerning = {}\n      for (let j = 0; j < keys2.length; ++j)\n        object.kerning[keys2[j]] = message.kerning[keys2[j]]\n    }\n    return object\n  }\n\n  /**\n   * Converts this GlyphFont to JSON.\n   * @function toJSON\n   * @memberof GlyphFont\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  GlyphFont.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return GlyphFont\n})())\n\nexport const GlyphImage = ($root.GlyphImage = (() => {\n  /**\n   * Properties of a GlyphImage.\n   * @exports IGlyphImage\n   * @interface IGlyphImage\n   * @property {string|null} [letter] GlyphImage letter\n   * @property {IMetric|null} [adjustMetric] GlyphImage adjustMetric\n   * @property {Uint8Array|null} [buffer] GlyphImage buffer\n   * @property {string|null} [fileName] GlyphImage fileName\n   * @property {string|null} [fileType] GlyphImage fileType\n   * @property {boolean|null} [selected] GlyphImage selected\n   * @property {Object.<string,number>|null} [kerning] GlyphImage kerning\n   */\n\n  /**\n   * Constructs a new GlyphImage.\n   * @exports GlyphImage\n   * @classdesc Represents a GlyphImage.\n   * @implements IGlyphImage\n   * @constructor\n   * @param {IGlyphImage=} [properties] Properties to set\n   */\n  function GlyphImage(properties) {\n    this.kerning = {}\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * GlyphImage letter.\n   * @member {string} letter\n   * @memberof GlyphImage\n   * @instance\n   */\n  GlyphImage.prototype.letter = ''\n\n  /**\n   * GlyphImage adjustMetric.\n   * @member {IMetric|null|undefined} adjustMetric\n   * @memberof GlyphImage\n   * @instance\n   */\n  GlyphImage.prototype.adjustMetric = null\n\n  /**\n   * GlyphImage buffer.\n   * @member {Uint8Array} buffer\n   * @memberof GlyphImage\n   * @instance\n   */\n  GlyphImage.prototype.buffer = $util.newBuffer([])\n\n  /**\n   * GlyphImage fileName.\n   * @member {string} fileName\n   * @memberof GlyphImage\n   * @instance\n   */\n  GlyphImage.prototype.fileName = ''\n\n  /**\n   * GlyphImage fileType.\n   * @member {string} fileType\n   * @memberof GlyphImage\n   * @instance\n   */\n  GlyphImage.prototype.fileType = ''\n\n  /**\n   * GlyphImage selected.\n   * @member {boolean} selected\n   * @memberof GlyphImage\n   * @instance\n   */\n  GlyphImage.prototype.selected = false\n\n  /**\n   * GlyphImage kerning.\n   * @member {Object.<string,number>} kerning\n   * @memberof GlyphImage\n   * @instance\n   */\n  GlyphImage.prototype.kerning = $util.emptyObject\n\n  /**\n   * Creates a new GlyphImage instance using the specified properties.\n   * @function create\n   * @memberof GlyphImage\n   * @static\n   * @param {IGlyphImage=} [properties] Properties to set\n   * @returns {GlyphImage} GlyphImage instance\n   */\n  GlyphImage.create = function create(properties) {\n    return new GlyphImage(properties)\n  }\n\n  /**\n   * Encodes the specified GlyphImage message. Does not implicitly {@link GlyphImage.verify|verify} messages.\n   * @function encode\n   * @memberof GlyphImage\n   * @static\n   * @param {IGlyphImage} message GlyphImage message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  GlyphImage.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (message.letter != null && Object.hasOwnProperty.call(message, 'letter'))\n      writer.uint32(/* id 1, wireType 2 =*/ 10).string(message.letter)\n    if (\n      message.adjustMetric != null &&\n      Object.hasOwnProperty.call(message, 'adjustMetric')\n    )\n      $root.Metric.encode(\n        message.adjustMetric,\n        writer.uint32(/* id 2, wireType 2 =*/ 18).fork(),\n      ).ldelim()\n    if (message.buffer != null && Object.hasOwnProperty.call(message, 'buffer'))\n      writer.uint32(/* id 3, wireType 2 =*/ 26).bytes(message.buffer)\n    if (\n      message.fileName != null &&\n      Object.hasOwnProperty.call(message, 'fileName')\n    )\n      writer.uint32(/* id 4, wireType 2 =*/ 34).string(message.fileName)\n    if (\n      message.fileType != null &&\n      Object.hasOwnProperty.call(message, 'fileType')\n    )\n      writer.uint32(/* id 5, wireType 2 =*/ 42).string(message.fileType)\n    if (\n      message.selected != null &&\n      Object.hasOwnProperty.call(message, 'selected')\n    )\n      writer.uint32(/* id 6, wireType 0 =*/ 48).bool(message.selected)\n    if (\n      message.kerning != null &&\n      Object.hasOwnProperty.call(message, 'kerning')\n    )\n      for (let keys = Object.keys(message.kerning), i = 0; i < keys.length; ++i)\n        writer\n          .uint32(/* id 7, wireType 2 =*/ 58)\n          .fork()\n          .uint32(/* id 1, wireType 2 =*/ 10)\n          .string(keys[i])\n          .uint32(/* id 2, wireType 0 =*/ 16)\n          .int32(message.kerning[keys[i]])\n          .ldelim()\n    return writer\n  }\n\n  /**\n   * Encodes the specified GlyphImage message, length delimited. Does not implicitly {@link GlyphImage.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof GlyphImage\n   * @static\n   * @param {IGlyphImage} message GlyphImage message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  GlyphImage.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a GlyphImage message from the specified reader or buffer.\n   * @function decode\n   * @memberof GlyphImage\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {GlyphImage} GlyphImage\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  GlyphImage.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.GlyphImage(),\n      key,\n      value\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.letter = reader.string()\n          break\n        case 2:\n          message.adjustMetric = $root.Metric.decode(reader, reader.uint32())\n          break\n        case 3:\n          message.buffer = reader.bytes()\n          break\n        case 4:\n          message.fileName = reader.string()\n          break\n        case 5:\n          message.fileType = reader.string()\n          break\n        case 6:\n          message.selected = reader.bool()\n          break\n        case 7:\n          if (message.kerning === $util.emptyObject) message.kerning = {}\n          let end2 = reader.uint32() + reader.pos\n          key = ''\n          value = 0\n          while (reader.pos < end2) {\n            let tag2 = reader.uint32()\n            switch (tag2 >>> 3) {\n              case 1:\n                key = reader.string()\n                break\n              case 2:\n                value = reader.int32()\n                break\n              default:\n                reader.skipType(tag2 & 7)\n                break\n            }\n          }\n          message.kerning[key] = value\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a GlyphImage message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof GlyphImage\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {GlyphImage} GlyphImage\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  GlyphImage.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a GlyphImage message.\n   * @function verify\n   * @memberof GlyphImage\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  GlyphImage.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.letter != null && message.hasOwnProperty('letter'))\n      if (!$util.isString(message.letter)) return 'letter: string expected'\n    if (\n      message.adjustMetric != null &&\n      message.hasOwnProperty('adjustMetric')\n    ) {\n      let error = $root.Metric.verify(message.adjustMetric)\n      if (error) return 'adjustMetric.' + error\n    }\n    if (message.buffer != null && message.hasOwnProperty('buffer'))\n      if (\n        !(\n          (message.buffer && typeof message.buffer.length === 'number') ||\n          $util.isString(message.buffer)\n        )\n      )\n        return 'buffer: buffer expected'\n    if (message.fileName != null && message.hasOwnProperty('fileName'))\n      if (!$util.isString(message.fileName)) return 'fileName: string expected'\n    if (message.fileType != null && message.hasOwnProperty('fileType'))\n      if (!$util.isString(message.fileType)) return 'fileType: string expected'\n    if (message.selected != null && message.hasOwnProperty('selected'))\n      if (typeof message.selected !== 'boolean')\n        return 'selected: boolean expected'\n    if (message.kerning != null && message.hasOwnProperty('kerning')) {\n      if (!$util.isObject(message.kerning)) return 'kerning: object expected'\n      let key = Object.keys(message.kerning)\n      for (let i = 0; i < key.length; ++i)\n        if (!$util.isInteger(message.kerning[key[i]]))\n          return 'kerning: integer{k:string} expected'\n    }\n    return null\n  }\n\n  /**\n   * Creates a GlyphImage message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof GlyphImage\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {GlyphImage} GlyphImage\n   */\n  GlyphImage.fromObject = function fromObject(object) {\n    if (object instanceof $root.GlyphImage) return object\n    let message = new $root.GlyphImage()\n    if (object.letter != null) message.letter = String(object.letter)\n    if (object.adjustMetric != null) {\n      if (typeof object.adjustMetric !== 'object')\n        throw TypeError('.GlyphImage.adjustMetric: object expected')\n      message.adjustMetric = $root.Metric.fromObject(object.adjustMetric)\n    }\n    if (object.buffer != null)\n      if (typeof object.buffer === 'string')\n        $util.base64.decode(\n          object.buffer,\n          (message.buffer = $util.newBuffer(\n            $util.base64.length(object.buffer),\n          )),\n          0,\n        )\n      else if (object.buffer.length) message.buffer = object.buffer\n    if (object.fileName != null) message.fileName = String(object.fileName)\n    if (object.fileType != null) message.fileType = String(object.fileType)\n    if (object.selected != null) message.selected = Boolean(object.selected)\n    if (object.kerning) {\n      if (typeof object.kerning !== 'object')\n        throw TypeError('.GlyphImage.kerning: object expected')\n      message.kerning = {}\n      for (let keys = Object.keys(object.kerning), i = 0; i < keys.length; ++i)\n        message.kerning[keys[i]] = object.kerning[keys[i]] | 0\n    }\n    return message\n  }\n\n  /**\n   * Creates a plain object from a GlyphImage message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof GlyphImage\n   * @static\n   * @param {GlyphImage} message GlyphImage\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  GlyphImage.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.objects || options.defaults) object.kerning = {}\n    if (options.defaults) {\n      object.letter = ''\n      object.adjustMetric = null\n      if (options.bytes === String) object.buffer = ''\n      else {\n        object.buffer = []\n        if (options.bytes !== Array)\n          object.buffer = $util.newBuffer(object.buffer)\n      }\n      object.fileName = ''\n      object.fileType = ''\n      object.selected = false\n    }\n    if (message.letter != null && message.hasOwnProperty('letter'))\n      object.letter = message.letter\n    if (message.adjustMetric != null && message.hasOwnProperty('adjustMetric'))\n      object.adjustMetric = $root.Metric.toObject(message.adjustMetric, options)\n    if (message.buffer != null && message.hasOwnProperty('buffer'))\n      object.buffer =\n        options.bytes === String\n          ? $util.base64.encode(message.buffer, 0, message.buffer.length)\n          : options.bytes === Array\n          ? Array.prototype.slice.call(message.buffer)\n          : message.buffer\n    if (message.fileName != null && message.hasOwnProperty('fileName'))\n      object.fileName = message.fileName\n    if (message.fileType != null && message.hasOwnProperty('fileType'))\n      object.fileType = message.fileType\n    if (message.selected != null && message.hasOwnProperty('selected'))\n      object.selected = message.selected\n    let keys2\n    if (message.kerning && (keys2 = Object.keys(message.kerning)).length) {\n      object.kerning = {}\n      for (let j = 0; j < keys2.length; ++j)\n        object.kerning[keys2[j]] = message.kerning[keys2[j]]\n    }\n    return object\n  }\n\n  /**\n   * Converts this GlyphImage to JSON.\n   * @function toJSON\n   * @memberof GlyphImage\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  GlyphImage.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return GlyphImage\n})())\n\nexport const Layout = ($root.Layout = (() => {\n  /**\n   * Properties of a Layout.\n   * @exports ILayout\n   * @interface ILayout\n   * @property {number|null} [padding] Layout padding\n   * @property {number|null} [spacing] Layout spacing\n   * @property {number|null} [width] Layout width\n   * @property {number|null} [height] Layout height\n   * @property {boolean|null} [auto] Layout auto\n   * @property {boolean|null} [fixedSize] Layout fixedSize\n   */\n\n  /**\n   * Constructs a new Layout.\n   * @exports Layout\n   * @classdesc Represents a Layout.\n   * @implements ILayout\n   * @constructor\n   * @param {ILayout=} [properties] Properties to set\n   */\n  function Layout(properties) {\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * Layout padding.\n   * @member {number} padding\n   * @memberof Layout\n   * @instance\n   */\n  Layout.prototype.padding = 0\n\n  /**\n   * Layout spacing.\n   * @member {number} spacing\n   * @memberof Layout\n   * @instance\n   */\n  Layout.prototype.spacing = 0\n\n  /**\n   * Layout width.\n   * @member {number} width\n   * @memberof Layout\n   * @instance\n   */\n  Layout.prototype.width = 0\n\n  /**\n   * Layout height.\n   * @member {number} height\n   * @memberof Layout\n   * @instance\n   */\n  Layout.prototype.height = 0\n\n  /**\n   * Layout auto.\n   * @member {boolean} auto\n   * @memberof Layout\n   * @instance\n   */\n  Layout.prototype.auto = false\n\n  /**\n   * Layout fixedSize.\n   * @member {boolean} fixedSize\n   * @memberof Layout\n   * @instance\n   */\n  Layout.prototype.fixedSize = false\n\n  /**\n   * Creates a new Layout instance using the specified properties.\n   * @function create\n   * @memberof Layout\n   * @static\n   * @param {ILayout=} [properties] Properties to set\n   * @returns {Layout} Layout instance\n   */\n  Layout.create = function create(properties) {\n    return new Layout(properties)\n  }\n\n  /**\n   * Encodes the specified Layout message. Does not implicitly {@link Layout.verify|verify} messages.\n   * @function encode\n   * @memberof Layout\n   * @static\n   * @param {ILayout} message Layout message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Layout.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (\n      message.padding != null &&\n      Object.hasOwnProperty.call(message, 'padding')\n    )\n      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.padding)\n    if (\n      message.spacing != null &&\n      Object.hasOwnProperty.call(message, 'spacing')\n    )\n      writer.uint32(/* id 2, wireType 0 =*/ 16).int32(message.spacing)\n    if (message.width != null && Object.hasOwnProperty.call(message, 'width'))\n      writer.uint32(/* id 3, wireType 0 =*/ 24).int32(message.width)\n    if (message.height != null && Object.hasOwnProperty.call(message, 'height'))\n      writer.uint32(/* id 4, wireType 0 =*/ 32).int32(message.height)\n    if (message.auto != null && Object.hasOwnProperty.call(message, 'auto'))\n      writer.uint32(/* id 5, wireType 0 =*/ 40).bool(message.auto)\n    if (\n      message.fixedSize != null &&\n      Object.hasOwnProperty.call(message, 'fixedSize')\n    )\n      writer.uint32(/* id 6, wireType 0 =*/ 48).bool(message.fixedSize)\n    return writer\n  }\n\n  /**\n   * Encodes the specified Layout message, length delimited. Does not implicitly {@link Layout.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof Layout\n   * @static\n   * @param {ILayout} message Layout message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Layout.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a Layout message from the specified reader or buffer.\n   * @function decode\n   * @memberof Layout\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {Layout} Layout\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Layout.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.Layout()\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.padding = reader.int32()\n          break\n        case 2:\n          message.spacing = reader.int32()\n          break\n        case 3:\n          message.width = reader.int32()\n          break\n        case 4:\n          message.height = reader.int32()\n          break\n        case 5:\n          message.auto = reader.bool()\n          break\n        case 6:\n          message.fixedSize = reader.bool()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a Layout message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof Layout\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {Layout} Layout\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Layout.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a Layout message.\n   * @function verify\n   * @memberof Layout\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  Layout.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.padding != null && message.hasOwnProperty('padding'))\n      if (!$util.isInteger(message.padding)) return 'padding: integer expected'\n    if (message.spacing != null && message.hasOwnProperty('spacing'))\n      if (!$util.isInteger(message.spacing)) return 'spacing: integer expected'\n    if (message.width != null && message.hasOwnProperty('width'))\n      if (!$util.isInteger(message.width)) return 'width: integer expected'\n    if (message.height != null && message.hasOwnProperty('height'))\n      if (!$util.isInteger(message.height)) return 'height: integer expected'\n    if (message.auto != null && message.hasOwnProperty('auto'))\n      if (typeof message.auto !== 'boolean') return 'auto: boolean expected'\n    if (message.fixedSize != null && message.hasOwnProperty('fixedSize'))\n      if (typeof message.fixedSize !== 'boolean')\n        return 'fixedSize: boolean expected'\n    return null\n  }\n\n  /**\n   * Creates a Layout message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof Layout\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {Layout} Layout\n   */\n  Layout.fromObject = function fromObject(object) {\n    if (object instanceof $root.Layout) return object\n    let message = new $root.Layout()\n    if (object.padding != null) message.padding = object.padding | 0\n    if (object.spacing != null) message.spacing = object.spacing | 0\n    if (object.width != null) message.width = object.width | 0\n    if (object.height != null) message.height = object.height | 0\n    if (object.auto != null) message.auto = Boolean(object.auto)\n    if (object.fixedSize != null) message.fixedSize = Boolean(object.fixedSize)\n    return message\n  }\n\n  /**\n   * Creates a plain object from a Layout message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof Layout\n   * @static\n   * @param {Layout} message Layout\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  Layout.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.defaults) {\n      object.padding = 0\n      object.spacing = 0\n      object.width = 0\n      object.height = 0\n      object.auto = false\n      object.fixedSize = false\n    }\n    if (message.padding != null && message.hasOwnProperty('padding'))\n      object.padding = message.padding\n    if (message.spacing != null && message.hasOwnProperty('spacing'))\n      object.spacing = message.spacing\n    if (message.width != null && message.hasOwnProperty('width'))\n      object.width = message.width\n    if (message.height != null && message.hasOwnProperty('height'))\n      object.height = message.height\n    if (message.auto != null && message.hasOwnProperty('auto'))\n      object.auto = message.auto\n    if (message.fixedSize != null && message.hasOwnProperty('fixedSize'))\n      object.fixedSize = message.fixedSize\n    return object\n  }\n\n  /**\n   * Converts this Layout to JSON.\n   * @function toJSON\n   * @memberof Layout\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  Layout.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return Layout\n})())\n\nexport const Shadow = ($root.Shadow = (() => {\n  /**\n   * Properties of a Shadow.\n   * @exports IShadow\n   * @interface IShadow\n   * @property {string|null} [color] Shadow color\n   * @property {number|null} [blur] Shadow blur\n   * @property {number|null} [offsetX] Shadow offsetX\n   * @property {number|null} [offsetY] Shadow offsetY\n   */\n\n  /**\n   * Constructs a new Shadow.\n   * @exports Shadow\n   * @classdesc Represents a Shadow.\n   * @implements IShadow\n   * @constructor\n   * @param {IShadow=} [properties] Properties to set\n   */\n  function Shadow(properties) {\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * Shadow color.\n   * @member {string} color\n   * @memberof Shadow\n   * @instance\n   */\n  Shadow.prototype.color = ''\n\n  /**\n   * Shadow blur.\n   * @member {number} blur\n   * @memberof Shadow\n   * @instance\n   */\n  Shadow.prototype.blur = 0\n\n  /**\n   * Shadow offsetX.\n   * @member {number} offsetX\n   * @memberof Shadow\n   * @instance\n   */\n  Shadow.prototype.offsetX = 0\n\n  /**\n   * Shadow offsetY.\n   * @member {number} offsetY\n   * @memberof Shadow\n   * @instance\n   */\n  Shadow.prototype.offsetY = 0\n\n  /**\n   * Creates a new Shadow instance using the specified properties.\n   * @function create\n   * @memberof Shadow\n   * @static\n   * @param {IShadow=} [properties] Properties to set\n   * @returns {Shadow} Shadow instance\n   */\n  Shadow.create = function create(properties) {\n    return new Shadow(properties)\n  }\n\n  /**\n   * Encodes the specified Shadow message. Does not implicitly {@link Shadow.verify|verify} messages.\n   * @function encode\n   * @memberof Shadow\n   * @static\n   * @param {IShadow} message Shadow message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Shadow.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (message.color != null && Object.hasOwnProperty.call(message, 'color'))\n      writer.uint32(/* id 1, wireType 2 =*/ 10).string(message.color)\n    if (message.blur != null && Object.hasOwnProperty.call(message, 'blur'))\n      writer.uint32(/* id 2, wireType 0 =*/ 16).int32(message.blur)\n    if (\n      message.offsetX != null &&\n      Object.hasOwnProperty.call(message, 'offsetX')\n    )\n      writer.uint32(/* id 3, wireType 0 =*/ 24).sint32(message.offsetX)\n    if (\n      message.offsetY != null &&\n      Object.hasOwnProperty.call(message, 'offsetY')\n    )\n      writer.uint32(/* id 4, wireType 0 =*/ 32).sint32(message.offsetY)\n    return writer\n  }\n\n  /**\n   * Encodes the specified Shadow message, length delimited. Does not implicitly {@link Shadow.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof Shadow\n   * @static\n   * @param {IShadow} message Shadow message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Shadow.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a Shadow message from the specified reader or buffer.\n   * @function decode\n   * @memberof Shadow\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {Shadow} Shadow\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Shadow.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.Shadow()\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.color = reader.string()\n          break\n        case 2:\n          message.blur = reader.int32()\n          break\n        case 3:\n          message.offsetX = reader.sint32()\n          break\n        case 4:\n          message.offsetY = reader.sint32()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a Shadow message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof Shadow\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {Shadow} Shadow\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Shadow.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a Shadow message.\n   * @function verify\n   * @memberof Shadow\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  Shadow.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.color != null && message.hasOwnProperty('color'))\n      if (!$util.isString(message.color)) return 'color: string expected'\n    if (message.blur != null && message.hasOwnProperty('blur'))\n      if (!$util.isInteger(message.blur)) return 'blur: integer expected'\n    if (message.offsetX != null && message.hasOwnProperty('offsetX'))\n      if (!$util.isInteger(message.offsetX)) return 'offsetX: integer expected'\n    if (message.offsetY != null && message.hasOwnProperty('offsetY'))\n      if (!$util.isInteger(message.offsetY)) return 'offsetY: integer expected'\n    return null\n  }\n\n  /**\n   * Creates a Shadow message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof Shadow\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {Shadow} Shadow\n   */\n  Shadow.fromObject = function fromObject(object) {\n    if (object instanceof $root.Shadow) return object\n    let message = new $root.Shadow()\n    if (object.color != null) message.color = String(object.color)\n    if (object.blur != null) message.blur = object.blur | 0\n    if (object.offsetX != null) message.offsetX = object.offsetX | 0\n    if (object.offsetY != null) message.offsetY = object.offsetY | 0\n    return message\n  }\n\n  /**\n   * Creates a plain object from a Shadow message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof Shadow\n   * @static\n   * @param {Shadow} message Shadow\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  Shadow.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.defaults) {\n      object.color = ''\n      object.blur = 0\n      object.offsetX = 0\n      object.offsetY = 0\n    }\n    if (message.color != null && message.hasOwnProperty('color'))\n      object.color = message.color\n    if (message.blur != null && message.hasOwnProperty('blur'))\n      object.blur = message.blur\n    if (message.offsetX != null && message.hasOwnProperty('offsetX'))\n      object.offsetX = message.offsetX\n    if (message.offsetY != null && message.hasOwnProperty('offsetY'))\n      object.offsetY = message.offsetY\n    return object\n  }\n\n  /**\n   * Converts this Shadow to JSON.\n   * @function toJSON\n   * @memberof Shadow\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  Shadow.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return Shadow\n})())\n\nexport const Style = ($root.Style = (() => {\n  /**\n   * Properties of a Style.\n   * @exports IStyle\n   * @interface IStyle\n   * @property {IFont|null} [font] Style font\n   * @property {IFill|null} [fill] Style fill\n   * @property {boolean|null} [useStroke] Style useStroke\n   * @property {IFill|null} [stroke] Style stroke\n   * @property {boolean|null} [useShadow] Style useShadow\n   * @property {IShadow|null} [shadow] Style shadow\n   * @property {string|null} [bgColor] Style bgColor\n   */\n\n  /**\n   * Constructs a new Style.\n   * @exports Style\n   * @classdesc Represents a Style.\n   * @implements IStyle\n   * @constructor\n   * @param {IStyle=} [properties] Properties to set\n   */\n  function Style(properties) {\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * Style font.\n   * @member {IFont|null|undefined} font\n   * @memberof Style\n   * @instance\n   */\n  Style.prototype.font = null\n\n  /**\n   * Style fill.\n   * @member {IFill|null|undefined} fill\n   * @memberof Style\n   * @instance\n   */\n  Style.prototype.fill = null\n\n  /**\n   * Style useStroke.\n   * @member {boolean} useStroke\n   * @memberof Style\n   * @instance\n   */\n  Style.prototype.useStroke = false\n\n  /**\n   * Style stroke.\n   * @member {IFill|null|undefined} stroke\n   * @memberof Style\n   * @instance\n   */\n  Style.prototype.stroke = null\n\n  /**\n   * Style useShadow.\n   * @member {boolean} useShadow\n   * @memberof Style\n   * @instance\n   */\n  Style.prototype.useShadow = false\n\n  /**\n   * Style shadow.\n   * @member {IShadow|null|undefined} shadow\n   * @memberof Style\n   * @instance\n   */\n  Style.prototype.shadow = null\n\n  /**\n   * Style bgColor.\n   * @member {string} bgColor\n   * @memberof Style\n   * @instance\n   */\n  Style.prototype.bgColor = ''\n\n  /**\n   * Creates a new Style instance using the specified properties.\n   * @function create\n   * @memberof Style\n   * @static\n   * @param {IStyle=} [properties] Properties to set\n   * @returns {Style} Style instance\n   */\n  Style.create = function create(properties) {\n    return new Style(properties)\n  }\n\n  /**\n   * Encodes the specified Style message. Does not implicitly {@link Style.verify|verify} messages.\n   * @function encode\n   * @memberof Style\n   * @static\n   * @param {IStyle} message Style message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Style.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (message.font != null && Object.hasOwnProperty.call(message, 'font'))\n      $root.Font.encode(\n        message.font,\n        writer.uint32(/* id 1, wireType 2 =*/ 10).fork(),\n      ).ldelim()\n    if (message.fill != null && Object.hasOwnProperty.call(message, 'fill'))\n      $root.Fill.encode(\n        message.fill,\n        writer.uint32(/* id 2, wireType 2 =*/ 18).fork(),\n      ).ldelim()\n    if (\n      message.useStroke != null &&\n      Object.hasOwnProperty.call(message, 'useStroke')\n    )\n      writer.uint32(/* id 3, wireType 0 =*/ 24).bool(message.useStroke)\n    if (message.stroke != null && Object.hasOwnProperty.call(message, 'stroke'))\n      $root.Fill.encode(\n        message.stroke,\n        writer.uint32(/* id 4, wireType 2 =*/ 34).fork(),\n      ).ldelim()\n    if (\n      message.useShadow != null &&\n      Object.hasOwnProperty.call(message, 'useShadow')\n    )\n      writer.uint32(/* id 5, wireType 0 =*/ 40).bool(message.useShadow)\n    if (message.shadow != null && Object.hasOwnProperty.call(message, 'shadow'))\n      $root.Shadow.encode(\n        message.shadow,\n        writer.uint32(/* id 6, wireType 2 =*/ 50).fork(),\n      ).ldelim()\n    if (\n      message.bgColor != null &&\n      Object.hasOwnProperty.call(message, 'bgColor')\n    )\n      writer.uint32(/* id 7, wireType 2 =*/ 58).string(message.bgColor)\n    return writer\n  }\n\n  /**\n   * Encodes the specified Style message, length delimited. Does not implicitly {@link Style.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof Style\n   * @static\n   * @param {IStyle} message Style message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Style.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a Style message from the specified reader or buffer.\n   * @function decode\n   * @memberof Style\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {Style} Style\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Style.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.Style()\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.font = $root.Font.decode(reader, reader.uint32())\n          break\n        case 2:\n          message.fill = $root.Fill.decode(reader, reader.uint32())\n          break\n        case 3:\n          message.useStroke = reader.bool()\n          break\n        case 4:\n          message.stroke = $root.Fill.decode(reader, reader.uint32())\n          break\n        case 5:\n          message.useShadow = reader.bool()\n          break\n        case 6:\n          message.shadow = $root.Shadow.decode(reader, reader.uint32())\n          break\n        case 7:\n          message.bgColor = reader.string()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a Style message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof Style\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {Style} Style\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Style.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a Style message.\n   * @function verify\n   * @memberof Style\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  Style.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.font != null && message.hasOwnProperty('font')) {\n      let error = $root.Font.verify(message.font)\n      if (error) return 'font.' + error\n    }\n    if (message.fill != null && message.hasOwnProperty('fill')) {\n      let error = $root.Fill.verify(message.fill)\n      if (error) return 'fill.' + error\n    }\n    if (message.useStroke != null && message.hasOwnProperty('useStroke'))\n      if (typeof message.useStroke !== 'boolean')\n        return 'useStroke: boolean expected'\n    if (message.stroke != null && message.hasOwnProperty('stroke')) {\n      let error = $root.Fill.verify(message.stroke)\n      if (error) return 'stroke.' + error\n    }\n    if (message.useShadow != null && message.hasOwnProperty('useShadow'))\n      if (typeof message.useShadow !== 'boolean')\n        return 'useShadow: boolean expected'\n    if (message.shadow != null && message.hasOwnProperty('shadow')) {\n      let error = $root.Shadow.verify(message.shadow)\n      if (error) return 'shadow.' + error\n    }\n    if (message.bgColor != null && message.hasOwnProperty('bgColor'))\n      if (!$util.isString(message.bgColor)) return 'bgColor: string expected'\n    return null\n  }\n\n  /**\n   * Creates a Style message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof Style\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {Style} Style\n   */\n  Style.fromObject = function fromObject(object) {\n    if (object instanceof $root.Style) return object\n    let message = new $root.Style()\n    if (object.font != null) {\n      if (typeof object.font !== 'object')\n        throw TypeError('.Style.font: object expected')\n      message.font = $root.Font.fromObject(object.font)\n    }\n    if (object.fill != null) {\n      if (typeof object.fill !== 'object')\n        throw TypeError('.Style.fill: object expected')\n      message.fill = $root.Fill.fromObject(object.fill)\n    }\n    if (object.useStroke != null) message.useStroke = Boolean(object.useStroke)\n    if (object.stroke != null) {\n      if (typeof object.stroke !== 'object')\n        throw TypeError('.Style.stroke: object expected')\n      message.stroke = $root.Fill.fromObject(object.stroke)\n    }\n    if (object.useShadow != null) message.useShadow = Boolean(object.useShadow)\n    if (object.shadow != null) {\n      if (typeof object.shadow !== 'object')\n        throw TypeError('.Style.shadow: object expected')\n      message.shadow = $root.Shadow.fromObject(object.shadow)\n    }\n    if (object.bgColor != null) message.bgColor = String(object.bgColor)\n    return message\n  }\n\n  /**\n   * Creates a plain object from a Style message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof Style\n   * @static\n   * @param {Style} message Style\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  Style.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.defaults) {\n      object.font = null\n      object.fill = null\n      object.useStroke = false\n      object.stroke = null\n      object.useShadow = false\n      object.shadow = null\n      object.bgColor = ''\n    }\n    if (message.font != null && message.hasOwnProperty('font'))\n      object.font = $root.Font.toObject(message.font, options)\n    if (message.fill != null && message.hasOwnProperty('fill'))\n      object.fill = $root.Fill.toObject(message.fill, options)\n    if (message.useStroke != null && message.hasOwnProperty('useStroke'))\n      object.useStroke = message.useStroke\n    if (message.stroke != null && message.hasOwnProperty('stroke'))\n      object.stroke = $root.Fill.toObject(message.stroke, options)\n    if (message.useShadow != null && message.hasOwnProperty('useShadow'))\n      object.useShadow = message.useShadow\n    if (message.shadow != null && message.hasOwnProperty('shadow'))\n      object.shadow = $root.Shadow.toObject(message.shadow, options)\n    if (message.bgColor != null && message.hasOwnProperty('bgColor'))\n      object.bgColor = message.bgColor\n    return object\n  }\n\n  /**\n   * Converts this Style to JSON.\n   * @function toJSON\n   * @memberof Style\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  Style.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return Style\n})())\n\nexport const Ui = ($root.Ui = (() => {\n  /**\n   * Properties of an Ui.\n   * @exports IUi\n   * @interface IUi\n   * @property {string|null} [previewText] Ui previewText\n   */\n\n  /**\n   * Constructs a new Ui.\n   * @exports Ui\n   * @classdesc Represents an Ui.\n   * @implements IUi\n   * @constructor\n   * @param {IUi=} [properties] Properties to set\n   */\n  function Ui(properties) {\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * Ui previewText.\n   * @member {string} previewText\n   * @memberof Ui\n   * @instance\n   */\n  Ui.prototype.previewText = ''\n\n  /**\n   * Creates a new Ui instance using the specified properties.\n   * @function create\n   * @memberof Ui\n   * @static\n   * @param {IUi=} [properties] Properties to set\n   * @returns {Ui} Ui instance\n   */\n  Ui.create = function create(properties) {\n    return new Ui(properties)\n  }\n\n  /**\n   * Encodes the specified Ui message. Does not implicitly {@link Ui.verify|verify} messages.\n   * @function encode\n   * @memberof Ui\n   * @static\n   * @param {IUi} message Ui message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Ui.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (\n      message.previewText != null &&\n      Object.hasOwnProperty.call(message, 'previewText')\n    )\n      writer.uint32(/* id 1, wireType 2 =*/ 10).string(message.previewText)\n    return writer\n  }\n\n  /**\n   * Encodes the specified Ui message, length delimited. Does not implicitly {@link Ui.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof Ui\n   * @static\n   * @param {IUi} message Ui message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Ui.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes an Ui message from the specified reader or buffer.\n   * @function decode\n   * @memberof Ui\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {Ui} Ui\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Ui.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.Ui()\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.previewText = reader.string()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes an Ui message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof Ui\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {Ui} Ui\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Ui.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies an Ui message.\n   * @function verify\n   * @memberof Ui\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  Ui.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.previewText != null && message.hasOwnProperty('previewText'))\n      if (!$util.isString(message.previewText))\n        return 'previewText: string expected'\n    return null\n  }\n\n  /**\n   * Creates an Ui message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof Ui\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {Ui} Ui\n   */\n  Ui.fromObject = function fromObject(object) {\n    if (object instanceof $root.Ui) return object\n    let message = new $root.Ui()\n    if (object.previewText != null)\n      message.previewText = String(object.previewText)\n    return message\n  }\n\n  /**\n   * Creates a plain object from an Ui message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof Ui\n   * @static\n   * @param {Ui} message Ui\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  Ui.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.defaults) object.previewText = ''\n    if (message.previewText != null && message.hasOwnProperty('previewText'))\n      object.previewText = message.previewText\n    return object\n  }\n\n  /**\n   * Converts this Ui to JSON.\n   * @function toJSON\n   * @memberof Ui\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  Ui.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return Ui\n})())\n\nexport const Project = ($root.Project = (() => {\n  /**\n   * Properties of a Project.\n   * @exports IProject\n   * @interface IProject\n   * @property {number|Long|null} [id] Project id\n   * @property {string|null} [name] Project name\n   * @property {string|null} [text] Project text\n   * @property {Object.<string,IGlyphFont>|null} [glyphs] Project glyphs\n   * @property {Array.<IGlyphImage>|null} [glyphImages] Project glyphImages\n   * @property {IStyle|null} [style] Project style\n   * @property {ILayout|null} [layout] Project layout\n   * @property {IMetric|null} [globalAdjustMetric] Project globalAdjustMetric\n   * @property {IUi|null} [ui] Project ui\n   */\n\n  /**\n   * Constructs a new Project.\n   * @exports Project\n   * @classdesc Represents a Project.\n   * @implements IProject\n   * @constructor\n   * @param {IProject=} [properties] Properties to set\n   */\n  function Project(properties) {\n    this.glyphs = {}\n    this.glyphImages = []\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * Project id.\n   * @member {number|Long} id\n   * @memberof Project\n   * @instance\n   */\n  Project.prototype.id = $util.Long ? $util.Long.fromBits(0, 0, false) : 0\n\n  /**\n   * Project name.\n   * @member {string} name\n   * @memberof Project\n   * @instance\n   */\n  Project.prototype.name = ''\n\n  /**\n   * Project text.\n   * @member {string} text\n   * @memberof Project\n   * @instance\n   */\n  Project.prototype.text = ''\n\n  /**\n   * Project glyphs.\n   * @member {Object.<string,IGlyphFont>} glyphs\n   * @memberof Project\n   * @instance\n   */\n  Project.prototype.glyphs = $util.emptyObject\n\n  /**\n   * Project glyphImages.\n   * @member {Array.<IGlyphImage>} glyphImages\n   * @memberof Project\n   * @instance\n   */\n  Project.prototype.glyphImages = $util.emptyArray\n\n  /**\n   * Project style.\n   * @member {IStyle|null|undefined} style\n   * @memberof Project\n   * @instance\n   */\n  Project.prototype.style = null\n\n  /**\n   * Project layout.\n   * @member {ILayout|null|undefined} layout\n   * @memberof Project\n   * @instance\n   */\n  Project.prototype.layout = null\n\n  /**\n   * Project globalAdjustMetric.\n   * @member {IMetric|null|undefined} globalAdjustMetric\n   * @memberof Project\n   * @instance\n   */\n  Project.prototype.globalAdjustMetric = null\n\n  /**\n   * Project ui.\n   * @member {IUi|null|undefined} ui\n   * @memberof Project\n   * @instance\n   */\n  Project.prototype.ui = null\n\n  /**\n   * Creates a new Project instance using the specified properties.\n   * @function create\n   * @memberof Project\n   * @static\n   * @param {IProject=} [properties] Properties to set\n   * @returns {Project} Project instance\n   */\n  Project.create = function create(properties) {\n    return new Project(properties)\n  }\n\n  /**\n   * Encodes the specified Project message. Does not implicitly {@link Project.verify|verify} messages.\n   * @function encode\n   * @memberof Project\n   * @static\n   * @param {IProject} message Project message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Project.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (message.id != null && Object.hasOwnProperty.call(message, 'id'))\n      writer.uint32(/* id 1, wireType 0 =*/ 8).int64(message.id)\n    if (message.name != null && Object.hasOwnProperty.call(message, 'name'))\n      writer.uint32(/* id 2, wireType 2 =*/ 18).string(message.name)\n    if (message.text != null && Object.hasOwnProperty.call(message, 'text'))\n      writer.uint32(/* id 3, wireType 2 =*/ 26).string(message.text)\n    if (message.glyphs != null && Object.hasOwnProperty.call(message, 'glyphs'))\n      for (\n        let keys = Object.keys(message.glyphs), i = 0;\n        i < keys.length;\n        ++i\n      ) {\n        writer\n          .uint32(/* id 4, wireType 2 =*/ 34)\n          .fork()\n          .uint32(/* id 1, wireType 2 =*/ 10)\n          .string(keys[i])\n        $root.GlyphFont.encode(\n          message.glyphs[keys[i]],\n          writer.uint32(/* id 2, wireType 2 =*/ 18).fork(),\n        )\n          .ldelim()\n          .ldelim()\n      }\n    if (message.glyphImages != null && message.glyphImages.length)\n      for (let i = 0; i < message.glyphImages.length; ++i)\n        $root.GlyphImage.encode(\n          message.glyphImages[i],\n          writer.uint32(/* id 5, wireType 2 =*/ 42).fork(),\n        ).ldelim()\n    if (message.style != null && Object.hasOwnProperty.call(message, 'style'))\n      $root.Style.encode(\n        message.style,\n        writer.uint32(/* id 6, wireType 2 =*/ 50).fork(),\n      ).ldelim()\n    if (message.layout != null && Object.hasOwnProperty.call(message, 'layout'))\n      $root.Layout.encode(\n        message.layout,\n        writer.uint32(/* id 7, wireType 2 =*/ 58).fork(),\n      ).ldelim()\n    if (\n      message.globalAdjustMetric != null &&\n      Object.hasOwnProperty.call(message, 'globalAdjustMetric')\n    )\n      $root.Metric.encode(\n        message.globalAdjustMetric,\n        writer.uint32(/* id 8, wireType 2 =*/ 66).fork(),\n      ).ldelim()\n    if (message.ui != null && Object.hasOwnProperty.call(message, 'ui'))\n      $root.Ui.encode(\n        message.ui,\n        writer.uint32(/* id 9, wireType 2 =*/ 74).fork(),\n      ).ldelim()\n    return writer\n  }\n\n  /**\n   * Encodes the specified Project message, length delimited. Does not implicitly {@link Project.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof Project\n   * @static\n   * @param {IProject} message Project message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Project.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a Project message from the specified reader or buffer.\n   * @function decode\n   * @memberof Project\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {Project} Project\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Project.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.Project(),\n      key,\n      value\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.id = reader.int64()\n          break\n        case 2:\n          message.name = reader.string()\n          break\n        case 3:\n          message.text = reader.string()\n          break\n        case 4:\n          if (message.glyphs === $util.emptyObject) message.glyphs = {}\n          let end2 = reader.uint32() + reader.pos\n          key = ''\n          value = null\n          while (reader.pos < end2) {\n            let tag2 = reader.uint32()\n            switch (tag2 >>> 3) {\n              case 1:\n                key = reader.string()\n                break\n              case 2:\n                value = $root.GlyphFont.decode(reader, reader.uint32())\n                break\n              default:\n                reader.skipType(tag2 & 7)\n                break\n            }\n          }\n          message.glyphs[key] = value\n          break\n        case 5:\n          if (!(message.glyphImages && message.glyphImages.length))\n            message.glyphImages = []\n          message.glyphImages.push(\n            $root.GlyphImage.decode(reader, reader.uint32()),\n          )\n          break\n        case 6:\n          message.style = $root.Style.decode(reader, reader.uint32())\n          break\n        case 7:\n          message.layout = $root.Layout.decode(reader, reader.uint32())\n          break\n        case 8:\n          message.globalAdjustMetric = $root.Metric.decode(\n            reader,\n            reader.uint32(),\n          )\n          break\n        case 9:\n          message.ui = $root.Ui.decode(reader, reader.uint32())\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a Project message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof Project\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {Project} Project\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Project.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a Project message.\n   * @function verify\n   * @memberof Project\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  Project.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.id != null && message.hasOwnProperty('id'))\n      if (\n        !$util.isInteger(message.id) &&\n        !(\n          message.id &&\n          $util.isInteger(message.id.low) &&\n          $util.isInteger(message.id.high)\n        )\n      )\n        return 'id: integer|Long expected'\n    if (message.name != null && message.hasOwnProperty('name'))\n      if (!$util.isString(message.name)) return 'name: string expected'\n    if (message.text != null && message.hasOwnProperty('text'))\n      if (!$util.isString(message.text)) return 'text: string expected'\n    if (message.glyphs != null && message.hasOwnProperty('glyphs')) {\n      if (!$util.isObject(message.glyphs)) return 'glyphs: object expected'\n      let key = Object.keys(message.glyphs)\n      for (let i = 0; i < key.length; ++i) {\n        let error = $root.GlyphFont.verify(message.glyphs[key[i]])\n        if (error) return 'glyphs.' + error\n      }\n    }\n    if (message.glyphImages != null && message.hasOwnProperty('glyphImages')) {\n      if (!Array.isArray(message.glyphImages))\n        return 'glyphImages: array expected'\n      for (let i = 0; i < message.glyphImages.length; ++i) {\n        let error = $root.GlyphImage.verify(message.glyphImages[i])\n        if (error) return 'glyphImages.' + error\n      }\n    }\n    if (message.style != null && message.hasOwnProperty('style')) {\n      let error = $root.Style.verify(message.style)\n      if (error) return 'style.' + error\n    }\n    if (message.layout != null && message.hasOwnProperty('layout')) {\n      let error = $root.Layout.verify(message.layout)\n      if (error) return 'layout.' + error\n    }\n    if (\n      message.globalAdjustMetric != null &&\n      message.hasOwnProperty('globalAdjustMetric')\n    ) {\n      let error = $root.Metric.verify(message.globalAdjustMetric)\n      if (error) return 'globalAdjustMetric.' + error\n    }\n    if (message.ui != null && message.hasOwnProperty('ui')) {\n      let error = $root.Ui.verify(message.ui)\n      if (error) return 'ui.' + error\n    }\n    return null\n  }\n\n  /**\n   * Creates a Project message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof Project\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {Project} Project\n   */\n  Project.fromObject = function fromObject(object) {\n    if (object instanceof $root.Project) return object\n    let message = new $root.Project()\n    if (object.id != null)\n      if ($util.Long)\n        (message.id = $util.Long.fromValue(object.id)).unsigned = false\n      else if (typeof object.id === 'string')\n        message.id = parseInt(object.id, 10)\n      else if (typeof object.id === 'number') message.id = object.id\n      else if (typeof object.id === 'object')\n        message.id = new $util.LongBits(\n          object.id.low >>> 0,\n          object.id.high >>> 0,\n        ).toNumber()\n    if (object.name != null) message.name = String(object.name)\n    if (object.text != null) message.text = String(object.text)\n    if (object.glyphs) {\n      if (typeof object.glyphs !== 'object')\n        throw TypeError('.Project.glyphs: object expected')\n      message.glyphs = {}\n      for (let keys = Object.keys(object.glyphs), i = 0; i < keys.length; ++i) {\n        if (typeof object.glyphs[keys[i]] !== 'object')\n          throw TypeError('.Project.glyphs: object expected')\n        message.glyphs[keys[i]] = $root.GlyphFont.fromObject(\n          object.glyphs[keys[i]],\n        )\n      }\n    }\n    if (object.glyphImages) {\n      if (!Array.isArray(object.glyphImages))\n        throw TypeError('.Project.glyphImages: array expected')\n      message.glyphImages = []\n      for (let i = 0; i < object.glyphImages.length; ++i) {\n        if (typeof object.glyphImages[i] !== 'object')\n          throw TypeError('.Project.glyphImages: object expected')\n        message.glyphImages[i] = $root.GlyphImage.fromObject(\n          object.glyphImages[i],\n        )\n      }\n    }\n    if (object.style != null) {\n      if (typeof object.style !== 'object')\n        throw TypeError('.Project.style: object expected')\n      message.style = $root.Style.fromObject(object.style)\n    }\n    if (object.layout != null) {\n      if (typeof object.layout !== 'object')\n        throw TypeError('.Project.layout: object expected')\n      message.layout = $root.Layout.fromObject(object.layout)\n    }\n    if (object.globalAdjustMetric != null) {\n      if (typeof object.globalAdjustMetric !== 'object')\n        throw TypeError('.Project.globalAdjustMetric: object expected')\n      message.globalAdjustMetric = $root.Metric.fromObject(\n        object.globalAdjustMetric,\n      )\n    }\n    if (object.ui != null) {\n      if (typeof object.ui !== 'object')\n        throw TypeError('.Project.ui: object expected')\n      message.ui = $root.Ui.fromObject(object.ui)\n    }\n    return message\n  }\n\n  /**\n   * Creates a plain object from a Project message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof Project\n   * @static\n   * @param {Project} message Project\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  Project.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.arrays || options.defaults) object.glyphImages = []\n    if (options.objects || options.defaults) object.glyphs = {}\n    if (options.defaults) {\n      if ($util.Long) {\n        let long = new $util.Long(0, 0, false)\n        object.id =\n          options.longs === String\n            ? long.toString()\n            : options.longs === Number\n            ? long.toNumber()\n            : long\n      } else object.id = options.longs === String ? '0' : 0\n      object.name = ''\n      object.text = ''\n      object.style = null\n      object.layout = null\n      object.globalAdjustMetric = null\n      object.ui = null\n    }\n    if (message.id != null && message.hasOwnProperty('id'))\n      if (typeof message.id === 'number')\n        object.id = options.longs === String ? String(message.id) : message.id\n      else\n        object.id =\n          options.longs === String\n            ? $util.Long.prototype.toString.call(message.id)\n            : options.longs === Number\n            ? new $util.LongBits(\n                message.id.low >>> 0,\n                message.id.high >>> 0,\n              ).toNumber()\n            : message.id\n    if (message.name != null && message.hasOwnProperty('name'))\n      object.name = message.name\n    if (message.text != null && message.hasOwnProperty('text'))\n      object.text = message.text\n    let keys2\n    if (message.glyphs && (keys2 = Object.keys(message.glyphs)).length) {\n      object.glyphs = {}\n      for (let j = 0; j < keys2.length; ++j)\n        object.glyphs[keys2[j]] = $root.GlyphFont.toObject(\n          message.glyphs[keys2[j]],\n          options,\n        )\n    }\n    if (message.glyphImages && message.glyphImages.length) {\n      object.glyphImages = []\n      for (let j = 0; j < message.glyphImages.length; ++j)\n        object.glyphImages[j] = $root.GlyphImage.toObject(\n          message.glyphImages[j],\n          options,\n        )\n    }\n    if (message.style != null && message.hasOwnProperty('style'))\n      object.style = $root.Style.toObject(message.style, options)\n    if (message.layout != null && message.hasOwnProperty('layout'))\n      object.layout = $root.Layout.toObject(message.layout, options)\n    if (\n      message.globalAdjustMetric != null &&\n      message.hasOwnProperty('globalAdjustMetric')\n    )\n      object.globalAdjustMetric = $root.Metric.toObject(\n        message.globalAdjustMetric,\n        options,\n      )\n    if (message.ui != null && message.hasOwnProperty('ui'))\n      object.ui = $root.Ui.toObject(message.ui, options)\n    return object\n  }\n\n  /**\n   * Converts this Project to JSON.\n   * @function toJSON\n   * @memberof Project\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  Project.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return Project\n})())\n\nexport { $root as default }\n","export const PREFIX_STR = 'SnowBambooBMF'\nconst prefix = (): Uint8Array =>\n  new Uint8Array([...PREFIX_STR.split('').map((s) => s.charCodeAt(0)), 1, 0, 1])\n\nexport default prefix\n","function getVersionNumber(version: string | string[] | number[]): number {\n  if (typeof version === 'string') {\n    version = version.split('.')\n  }\n\n  if (!Array.isArray(version)) return 0\n\n  version = [...version] as number[]\n\n  return version\n    .reverse()\n    .reduce<number>(\n      (previousValue: number, currentValue: number, currentIndex: number) => {\n        return (\n          previousValue + Number(currentValue) * Math.pow(1000, currentIndex)\n        )\n      },\n      0,\n    )\n}\n\nexport default getVersionNumber\n","import { IProject } from 'src/proto'\n\ntype TransProject = (project: IProject) => IProject\ninterface VersionMap {\n  [key: number]: TransProject\n}\n\nfunction f10000t10001(project: IProject) {\n  project.layout = { ...project.layout }\n  project.layout.width = 1024\n  project.layout.height = 1024\n  project.layout.auto = true\n  project.layout.fixedSize = false\n  return project\n}\n\nconst obj: VersionMap = {\n  10000: f10000t10001,\n}\n\nconst verions: (keyof VersionMap)[] = Object.keys(obj)\n  .map((verion) => Number(verion))\n  .sort()\n\nfunction updateOldProject(project: IProject, version: number): IProject {\n  verions.forEach((v) => {\n    if (version >= v && obj[v]) obj[v](project)\n  })\n  return project\n}\n\nexport default updateOldProject\n","import { Project, Font } from 'src/store'\nimport proto, { IProject } from 'src/proto'\nimport getVersionNumber from 'src/utils/getVersionNumber'\nimport updateOldProject from './updateOldProject'\nimport prefix from './prefix'\n\nfunction toOriginBuffer(protoProject: IProject): Project {\n  const project = { ...protoProject }\n  const map = new Map()\n\n  // font\n  if (project?.style?.font?.font) {\n    project.style.font = {\n      ...(project.style.font as Font),\n      font: project.style.font.font.slice().buffer as Uint8Array,\n    }\n  }\n\n  // images\n  if (project?.glyphImages) {\n    project.glyphImages.forEach((glyphImage) => {\n      if (glyphImage.buffer) {\n        glyphImage.buffer = glyphImage.buffer.slice().buffer as Uint8Array\n      }\n      if (glyphImage.kerning) {\n        const imgKerning = new Map()\n        Object.keys(glyphImage.kerning).forEach((key) => {\n          if (glyphImage && glyphImage.kerning && glyphImage.kerning[key])\n            imgKerning.set(key, glyphImage.kerning[key] || 0)\n        })\n      }\n    })\n\n    // project.glyphImages = new Set(project.glyphImages)\n  }\n\n  if (project?.glyphs) {\n    Object.keys(project.glyphs).forEach((k) => {\n      if (project && project.glyphs && project.glyphs[k]) {\n        const gl = project.glyphs[k]\n        const glyphKerning = new Map()\n        if (gl && gl.kerning) {\n          Object.keys(gl.kerning).forEach((key) => {\n            if (gl.kerning) glyphKerning.set(key, gl.kerning[key] || 0)\n          })\n        }\n        map.set(k, { ...gl, kerning: glyphKerning })\n      }\n    })\n  }\n\n  // fill\n  if (project?.style?.fill?.patternTexture?.buffer) {\n    project.style.fill.patternTexture.buffer = project.style.fill.patternTexture.buffer.slice()\n      .buffer as Uint8Array\n  }\n\n  // stroke\n  if (project?.style?.stroke?.patternTexture?.buffer) {\n    project.style.stroke.patternTexture.buffer = project.style.stroke.patternTexture.buffer.slice()\n      .buffer as Uint8Array\n  }\n\n  return ({\n    ...project,\n    glyphs: map,\n    glyphImages: project.glyphImages || [],\n  } as unknown) as Project\n}\n\nexport default function decodeProject(buffer: ArrayBuffer): Project {\n  if (buffer.byteLength < 17) throw new Error('error')\n  const perfixBuffer = prefix()\n  const perfixName = perfixBuffer.slice(0, perfixBuffer.byteLength - 3)\n  const latestVersionBuffer = perfixBuffer.slice(perfixBuffer.byteLength - 3)\n  const u8 = new Uint8Array(buffer)\n  const filePrefix = u8.slice(0, perfixBuffer.byteLength)\n  const versionBuffer = filePrefix.slice(filePrefix.byteLength - 3)\n  let isSbf = true\n  perfixName.forEach((e, i) => {\n    if (filePrefix[i] !== e) isSbf = false\n  })\n  if (!isSbf) throw new Error('unknow file')\n  const currentVersion = getVersionNumber(Array.from(latestVersionBuffer))\n  const fileVersion = getVersionNumber(Array.from(versionBuffer))\n\n  const project = proto.Project.decode(u8.slice(filePrefix.byteLength))\n\n  if (fileVersion < currentVersion)\n    return toOriginBuffer(updateOldProject(project, fileVersion))\n\n  return toOriginBuffer(project)\n}\n","import React, { useState, useEffect, FunctionComponent } from 'react'\nimport hotkeys from 'hotkeys-js'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport { useProject } from 'src/store/hooks'\nimport GridInput from 'src/app/components/GridInput/GridInput'\n\ninterface ExportButtonProps {\n  className?: string\n  onSave?: (config: { ext: string; type: string }) => void\n}\n\nconst ExportButton: FunctionComponent<ExportButtonProps> = (\n  props: ExportButtonProps,\n) => {\n  const { className, onSave } = props\n  const project = useProject()\n  const { name } = project\n  const [open, setOpen] = useState(false)\n  const [val, setVal] = useState(0)\n  const [list] = useState([\n    { id: 0, ext: 'fnt', type: 'xml' },\n    { id: 1, ext: 'xml', type: 'xml' },\n    { id: 2, ext: 'fnt', type: 'text' },\n    { id: 3, ext: 'text', type: 'text' },\n  ])\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>,\n  ) => {\n    setVal(e.target.value as number)\n  }\n  const handleSave = () => {\n    if (onSave)\n      onSave({\n        ext: list[val].ext,\n        type: list[val].type,\n      })\n    handleClose()\n  }\n\n  useEffect(() => {\n    hotkeys.unbind('ctrl+shift+s,command+shift+s')\n    hotkeys('ctrl+shift+s,command+shift+s', handleClickOpen)\n    return () => {\n      hotkeys.unbind('ctrl+shift+s,command+shift+s')\n    }\n  }, [])\n\n  return (\n    <>\n      <Button\n        className={className}\n        title='Export BitmapFont (⌘⇧ + S)'\n        onClick={handleClickOpen}\n      >\n        Export\n      </Button>\n      <Dialog onClose={handleClose} open={open} fullWidth maxWidth='xs'>\n        <DialogTitle>Export Config</DialogTitle>\n        <DialogContent dividers>\n          <GridInput before='Export Type:' childrenWidth={8}>\n            <Select displayEmpty value={val} onChange={handleChange}>\n              {list.map((item) => (\n                <MenuItem value={item.id} key={item.id}>\n                  {`${name}.${item.ext} (BMFont ${item.type.toUpperCase()})`}\n                </MenuItem>\n              ))}\n            </Select>\n          </GridInput>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleSave} color='default'>\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default ExportButton\n","import React, {\n  FunctionComponent,\n  useState,\n  useEffect,\n  useCallback,\n  useRef,\n} from 'react'\nimport { toJS } from 'mobx'\nimport hotkeys from 'hotkeys-js'\nimport { observer } from 'mobx-react'\nimport Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport Snackbar from '@material-ui/core/Snackbar'\n\nimport { useWorkspace } from 'src/store/hooks'\n\nimport readFile from 'src/utils/readFile'\n\nimport outputFile from 'src/file/outputFile'\nimport saveProject from 'src/file/saveProject'\nimport decodeProject from 'src/file/decodeProject'\n\nimport ExportButton from './ExportButton'\n\nconst useStyles = makeStyles(({ zIndex, spacing }) =>\n  createStyles({\n    root: {\n      position: 'relative',\n      zIndex: zIndex.appBar,\n    },\n    appName: {\n      fontSize: '1.25rem',\n      fontWeight: 'bolder',\n      marginRight: spacing(4),\n    },\n    appNameSup: {\n      fontWeight: 'lighter',\n      fontSize: '0.5em',\n      marginLeft: '0.5rem',\n    },\n    btn: {\n      textTransform: 'none',\n    },\n  }),\n)\n\nconst TitleBar: FunctionComponent<unknown> = () => {\n  const classes = useStyles()\n  const [toast, setToast] = useState<{\n    open: boolean\n    component: React.ReactNode | null\n  }>({ open: false, component: null })\n  const worckSpace = useWorkspace()\n  const labelRef = useRef<HTMLLabelElement>(null)\n  const { addProject } = worckSpace\n  const project = worckSpace.currentProject\n  const handleLoad = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    if (e.target?.files && e.target.files[0]) {\n      readFile(e.target.files[0]).then((buffer) => {\n        try {\n          if (buffer instanceof ArrayBuffer) addProject(decodeProject(buffer))\n        } catch (err) {\n          setToast({\n            open: true,\n            component: (\n              <Box display='flex' alignItems='center'>\n                <ErrorIcon />\n                {`${err.toString()}`}\n              </Box>\n            ),\n          })\n        }\n      })\n    }\n  }\n\n  const handleNewProject = useCallback(\n    (e: { preventDefault(): void }) => {\n      e.preventDefault()\n      addProject()\n      return false\n    },\n    [addProject],\n  )\n\n  const handleSaveProject = useCallback(\n    (e: { preventDefault(): void }) => {\n      e.preventDefault()\n      saveProject(toJS(project))\n      return false\n    },\n    [project],\n  )\n\n  const handleSaveBitmapFont = useCallback(\n    (config) => {\n      outputFile(project, config)\n    },\n    [project],\n  )\n\n  const handleOpenProject = useCallback((e: { preventDefault(): void }) => {\n    e.preventDefault()\n    if (labelRef.current) labelRef.current.click()\n    return false\n  }, [])\n\n  const handleToastClose = () => {\n    setToast((t) => {\n      return {\n        ...t,\n        open: false,\n      }\n    })\n  }\n\n  useEffect(() => {\n    hotkeys.unbind('alt+n,control+n')\n    hotkeys.unbind('ctrl+s')\n    hotkeys.unbind('ctrl+o,command+o')\n    hotkeys('alt+n,control+n', handleNewProject)\n    hotkeys('ctrl+s', handleSaveProject)\n    hotkeys('ctrl+o,command+o', handleOpenProject)\n    return () => {\n      hotkeys.unbind('alt+n,control+n')\n      hotkeys.unbind('ctrl+s')\n      hotkeys.unbind('ctrl+o,command+o')\n    }\n  }, [handleNewProject, handleOpenProject, handleSaveProject])\n\n  return (\n    <Box\n      className={classes.root}\n      bgcolor='background.titleBar'\n      paddingX={4}\n      display='flex'\n      alignItems='center'\n    >\n      {/* lowing modifiers: ⇧, shift, option, ⌥, alt, ctrl, control, command, and ⌘. */}\n      <Typography variant='h1' className={classes.appName}>\n        SnowB BMF\n        <sup className={classes.appNameSup}>BETA</sup>\n      </Typography>\n      <Box flex='auto' paddingX={4}>\n        <Button\n          className={classes.btn}\n          title='New Project (ALT + N)'\n          onClick={handleNewProject}\n        >\n          New\n        </Button>\n        <Button\n          className={classes.btn}\n          title='Open Project (⌘ + O)'\n          component='label'\n          ref={labelRef}\n        >\n          Open\n          <input type='file' onChange={handleLoad} accept='.sbf' hidden />\n        </Button>\n        <Button\n          className={classes.btn}\n          title='Save Project (⌘ + S)'\n          onClick={handleSaveProject}\n        >\n          Save\n        </Button>\n        <ExportButton className={classes.btn} onSave={handleSaveBitmapFont} />\n      </Box>\n      <IconButton\n        size='small'\n        component='a'\n        href='https://github.com/SilenceLeo/snowb-bmf'\n        target='_blank'\n        title='GitHub'\n      >\n        <GitHubIcon />\n      </IconButton>\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={toast.open}\n        onClose={handleToastClose}\n        message={toast.component}\n      />\n    </Box>\n  )\n}\nexport default observer(TitleBar)\n","import { saveAs } from 'file-saver'\nimport { Project } from 'src/store'\nimport proto, { IProject } from 'src/proto'\n\nimport prefix from './prefix'\n\nexport default function saveProject(project: Project): void {\n  // font\n  if (project.style.font.font) {\n    project.style.font.font = new Uint8Array(project.style.font.font)\n  }\n\n  // images\n  project.glyphImages.forEach((glyphImage) => {\n    if (glyphImage.buffer) glyphImage.buffer = new Uint8Array(glyphImage.buffer)\n  })\n\n  // fill\n  if (project.style.fill.patternTexture.buffer) {\n    project.style.fill.patternTexture.buffer = new Uint8Array(\n      project.style.fill.patternTexture.buffer,\n    )\n  }\n\n  // stroke\n  if (project.style.stroke.patternTexture.buffer) {\n    project.style.stroke.patternTexture.buffer = new Uint8Array(\n      project.style.stroke.patternTexture.buffer,\n    )\n  }\n\n  const protoProject = proto.Project.create((project as unknown) as IProject)\n  const projectBuffer = proto.Project.encode(protoProject).finish()\n  const perfixBuffer = prefix()\n\n  const buffer = new Uint8Array(\n    perfixBuffer.byteLength + projectBuffer.byteLength,\n  )\n  buffer.set(perfixBuffer, 0)\n  buffer.set(projectBuffer, perfixBuffer.byteLength)\n\n  saveAs(new Blob([buffer]), `${project.name}.sbf`)\n}\n","import JSZip from 'jszip'\nimport { saveAs } from 'file-saver'\nimport { Project } from 'src/store'\nimport getXmlString from './getXmlString'\nimport getLuaString from './getLuaString'\nimport getTextString from './getTextString'\nimport toOutputInfo from './toOutputInfo'\n\nexport default function outputFile(\n  project: Project,\n  config = {\n    type: 'xml',\n    ext: 'fnt',\n  },\n): void {\n  const zip = new JSZip()\n  const { packCanvas, name } = project\n  const bmfont = toOutputInfo(project)\n  let text = ''\n\n  switch (config.type) {\n    case 'text':\n      text = getTextString(bmfont)\n      break\n    case 'lua':\n      text = getLuaString(bmfont)\n      break\n    default:\n      text = getXmlString(bmfont)\n      break\n  }\n\n  zip.file(`${name}.${config.ext}`, text)\n  if (packCanvas) {\n    packCanvas.toBlob((blob) => {\n      if (blob) zip.file(`${name}.png`, blob)\n      zip\n        .generateAsync({ type: 'blob' })\n        .then((content) => saveAs(content, `${name}.zip`))\n    })\n  }\n}\n","import React, { FunctionComponent } from 'react'\nimport { SketchPicker, ColorResult } from 'react-color'\nimport { useTheme, makeStyles, createStyles } from '@material-ui/core/styles'\nimport Popper, { PopperPlacementType } from '@material-ui/core/Popper'\n\nexport interface ChildrenProps {\n  open: boolean\n  color: string\n  placement: PopperPlacementType\n  anchorEl: HTMLDivElement | null\n  onChange(color: string): void\n}\n\nconst usePickerStyle = () => {\n  const theme = useTheme()\n  const { palette } = theme\n\n  if (palette.type === 'light') return {}\n\n  return {\n    default: {\n      picker: {\n        background: palette.background.titleBar,\n        shadow: theme.shadows[24],\n      },\n      alpha: {\n        background: '#fff',\n      },\n      color: {\n        background: '#fff',\n      },\n    },\n  }\n}\n\nconst useStyles = makeStyles(({ palette }) =>\n  createStyles({\n    picker: {\n      '& *': {\n        color: `${palette.text.primary} !important`,\n        borderColor: `${palette.divider} !important`,\n      },\n      '& input': {\n        background: 'none',\n        color: `${palette.text.primary} !important`,\n        boxShadow: `none !important`,\n        border: `1px solid ${palette.divider} !important`,\n      },\n    },\n  }),\n)\n\nconst WrappedSketchPicker: FunctionComponent<Partial<ChildrenProps>> = (\n  props: Partial<ChildrenProps>,\n) => {\n  const { open, anchorEl, color, onChange, placement } = props\n  const classes = useStyles()\n  const pickerStyle = usePickerStyle()\n  return (\n    <Popper\n      open={!!open}\n      anchorEl={anchorEl}\n      placement={placement || 'bottom'}\n      style={{ zIndex: 999999 }}\n    >\n      <SketchPicker\n        color={color}\n        styles={pickerStyle}\n        className={classes.picker}\n        onChange={({ rgb }: ColorResult) => {\n          if (onChange)\n            onChange(\n              `rgba(${rgb.r},${rgb.g},${rgb.b},${\n                typeof rgb.a === 'undefined' ? 1 : rgb.a\n              })`,\n            )\n        }}\n      />\n    </Popper>\n  )\n}\n\nexport default WrappedSketchPicker\n","import React, { FunctionComponent, useRef, useState } from 'react'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener'\n\nimport WrappedSketchPicker from '../WrappedSketchPicker'\n\nexport interface ColorInputProps {\n  color?: string\n  onChange?: (color: string) => void\n}\n\nconst useStyles = makeStyles(({ palette, bgPixel }: Theme) =>\n  createStyles({\n    root: {\n      overflow: 'hidden',\n    },\n    swatch: {\n      ...bgPixel,\n      display: 'inline-block',\n      cursor: 'pointer',\n    },\n    color: {\n      width: '46px',\n      height: '24px',\n      border: `5px solid ${palette.primary.main}`,\n      backgroundColor: (props: ColorInputProps) => props.color || '',\n    },\n  }),\n)\n\nconst ColorInput: FunctionComponent<ColorInputProps> = (\n  props: ColorInputProps,\n) => {\n  const { color, onChange } = props\n  const classes = useStyles(props)\n  const anchorEl = useRef(null)\n  const [open, setOpen] = useState(false)\n\n  return (\n    <ClickAwayListener\n      mouseEvent='onMouseDown'\n      onClickAway={() => setOpen(false)}\n    >\n      <div aria-hidden className={classes.swatch} ref={anchorEl}>\n        <div\n          aria-hidden\n          className={classes.color}\n          onClick={() => setOpen(!open)}\n        />\n        <WrappedSketchPicker\n          open={open}\n          anchorEl={anchorEl.current}\n          color={color || '#000000'}\n          onChange={onChange}\n        />\n      </div>\n    </ClickAwayListener>\n  )\n}\n\nexport default ColorInput\n","import React, { FunctionComponent } from 'react'\n\nimport GridInput from 'src/app/components/GridInput'\nimport ColorInput from 'src/app/components/ColorInput'\n\ninterface FormColorProps {\n  color: string\n  onChange(color: string): void\n}\n\nconst FormColor: FunctionComponent<FormColorProps> = (\n  props: FormColorProps,\n) => {\n  const { color, onChange } = props\n\n  return (\n    <GridInput before='Color:' childrenWidth={3}>\n      <ColorInput color={color} onChange={onChange} />\n    </GridInput>\n  )\n}\n\nexport default FormColor\n","import React, {\n  FunctionComponent,\n  DetailedHTMLProps,\n  HTMLAttributes,\n} from 'react'\nimport clsx from 'clsx'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\n\ninterface ColorStopPorps\n  extends DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement> {\n  left?: string | number\n  top?: string | number\n  color: string\n  isActive: boolean\n}\n\nconst useStyles = makeStyles(({ bgPixel, palette }: Theme) =>\n  createStyles({\n    root: {\n      ...bgPixel,\n      width: '12px',\n      height: '12px',\n      border: `solid ${palette.primary.main}`,\n      borderWidth: '0 1px 1px',\n      position: 'absolute',\n      cursor: 'pointer',\n      marginLeft: '-6px',\n      left: (props) => props.left || 0,\n      zIndex: (props) => (props.isActive ? 2 : 1),\n      '&:before,&:after': {\n        position: 'absolute',\n        content: '\"\"',\n        width: 0,\n        height: 0,\n        borderStyle: 'solid',\n        left: '0',\n      },\n      '&:before': {\n        top: '-6px',\n        left: '-1px',\n        borderWidth: '0 6px 6px 6px',\n        borderColor: `transparent transparent ${palette.primary.dark} transparent`,\n      },\n      '&:after': {\n        top: '-5px',\n        borderWidth: '0 5px 5px 5px',\n        borderColor: (props) => {\n          const activeColor =\n            palette.type === 'dark'\n              ? palette.common.white\n              : palette.common.black\n\n          return `transparent transparent ${\n            props.isActive ? activeColor : palette.grey[600]\n          } transparent`\n        },\n      },\n    },\n    color: {\n      width: '100%',\n      height: '100%',\n      pointerEvents: 'none',\n      backgroundColor: ({ color }: ColorStopPorps) => color || 'transparent',\n    },\n  }),\n)\n\nconst ColorStop: FunctionComponent<ColorStopPorps> = (\n  props: ColorStopPorps,\n) => {\n  const { left, top, color, isActive, className, ...divProps } = props\n  const classes = useStyles({ left, top, color, isActive })\n\n  return (\n    <div className={clsx(classes.root, className)} {...divProps}>\n      <div className={classes.color} />\n    </div>\n  )\n}\n\nexport default ColorStop\n","import React, {\n  FunctionComponent,\n  useCallback,\n  useRef,\n  MutableRefObject,\n  useState,\n  useEffect,\n} from 'react'\nimport clsx from 'clsx'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport ColorStop from './ColorStop'\n\nexport interface AddPaletteItem {\n  offset: number\n  color: string\n}\n\nexport interface PaletteItem extends AddPaletteItem {\n  id: number\n  offset: number\n  color: string\n}\n\ninterface ColorStopsHolderProps {\n  className?: string\n  palette: PaletteItem[]\n  activeId?: number\n  onAdd(offset: number): void\n  onUpdate(paletteItem: Partial<AddPaletteItem>, isDelete?: boolean): void\n  onSelect(id?: number): void\n}\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      width: '100%',\n      height: '17px',\n      position: 'relative',\n      cursor: 'crosshair',\n    },\n  }),\n)\n\nconst ColorStopsHolder: FunctionComponent<ColorStopsHolderProps> = (\n  props: ColorStopsHolderProps,\n) => {\n  const { className, palette, activeId, onAdd, onUpdate, onSelect } = props\n  const classes = useStyles(props)\n  const [width, setWidth] = useState(0)\n  const [startPoint, setStartPoint] = useState({ x: 0, y: 0, offset: 0 })\n  const [isDragging, setIsDragging] = useState(false)\n  const rootRef: MutableRefObject<HTMLDivElement | null> = useRef(null)\n\n  useEffect(() => {\n    if (rootRef.current) {\n      setWidth(rootRef.current.clientWidth)\n    }\n  }, [rootRef])\n\n  const handleAddPalette = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n  ) => {\n    const target = rootRef.current\n    if (!target || e.buttons !== 1) return\n    const { left } = target.getBoundingClientRect()\n    const offset = (e.clientX - left) / width\n    onAdd(offset)\n    setIsDragging(true)\n    setStartPoint({ x: e.clientX, y: e.clientY, offset })\n  }\n\n  const handleMouseDown = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    paletteItem: PaletteItem,\n  ) => {\n    if (e.buttons !== 1) return\n    e.preventDefault()\n    e.stopPropagation()\n    setStartPoint({ x: e.clientX, y: e.clientY, offset: paletteItem.offset })\n    setIsDragging(true)\n    onSelect(paletteItem.id)\n  }\n\n  const handleMouseMove = useCallback(\n    (e: MouseEvent) => {\n      if (!isDragging || !activeId) return\n      if (e.buttons !== 1) {\n        setIsDragging(false)\n        return\n      }\n      const idx = palette.findIndex(\n        (paletteItem) => paletteItem.id === activeId,\n      )\n\n      if (idx < 0) return\n      const newPalette = [...palette]\n\n      if (Math.abs(e.clientY - startPoint.y) > 50) {\n        onUpdate(newPalette[idx], true)\n        return\n      }\n\n      const paletteItem = newPalette[idx]\n      const offset = Math.min(\n        Math.max((e.clientX - startPoint.x) / width + startPoint.offset, 0),\n        1,\n      )\n      newPalette[idx] = { ...paletteItem, offset }\n      onUpdate({ offset })\n    },\n    [\n      activeId,\n      isDragging,\n      onUpdate,\n      palette,\n      startPoint.offset,\n      startPoint.x,\n      startPoint.y,\n      width,\n    ],\n  )\n\n  const handleMouseUp = useCallback((e: MouseEvent) => {\n    e.stopPropagation()\n    e.preventDefault()\n    setIsDragging(false)\n  }, [])\n\n  useEffect(() => {\n    if (isDragging) {\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    } else {\n      window.removeEventListener('mousemove', handleMouseMove)\n      window.removeEventListener('mouseup', handleMouseUp)\n    }\n\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove)\n      window.removeEventListener('mouseup', handleMouseUp)\n    }\n  }, [handleMouseMove, handleMouseUp, isDragging])\n\n  return (\n    <div\n      aria-hidden\n      ref={rootRef}\n      className={clsx(classes.root, className)}\n      onMouseDown={handleAddPalette}\n    >\n      {palette.map((paletteItem) => (\n        <ColorStop\n          key={paletteItem.id}\n          left={width * paletteItem.offset}\n          color={paletteItem.color}\n          isActive={paletteItem.id === activeId}\n          onMouseDown={(e) => handleMouseDown(e, paletteItem)}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default ColorStopsHolder\n","import React, { FunctionComponent, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nexport interface PaletteItem {\n  id: number | string\n  offset: number\n  color: string\n}\n\ninterface PaletteProps {\n  width?: number | string\n  height?: number | string\n  palette: PaletteItem[]\n}\n\nconst useStyles = makeStyles(({ bgPixel }) => ({\n  root: {\n    ...bgPixel,\n    width: (props: PaletteProps) => props.width || '100%',\n    height: (props: PaletteProps) => props.height || '100%',\n    border: '1px solid #ccc',\n  },\n  svg: {\n    width: '100%',\n    height: '100%',\n    verticalAlign: 'top',\n  },\n}))\n\nconst Palette: FunctionComponent<PaletteProps> = (\n  props: PaletteProps,\n): JSX.Element => {\n  const classes = useStyles(props)\n  const { palette } = props\n  const [id] = useState(`palette_${Math.random().toString().substr(2, 9)}`)\n  const sortedPalette = [...palette].sort(\n    ({ offset: offset1 }, { offset: offset2 }) => offset1 - offset2,\n  )\n\n  return (\n    <div className={classes.root}>\n      <svg className={classes.svg}>\n        <defs>\n          <linearGradient id={id} x1='0' y1='0.5' x2='1' y2='0.5'>\n            {sortedPalette.map((item) => (\n              <stop\n                key={item.id}\n                offset={item.offset}\n                style={{ stopColor: item.color }}\n              />\n            ))}\n          </linearGradient>\n        </defs>\n        <rect x='0' y='0' width='100%' height='100%' fill={`url(#${id})`} />\n      </svg>\n    </div>\n  )\n}\n\nexport default Palette\n","import React, { FunctionComponent, useRef, useState, useEffect } from 'react'\nimport Color from 'color'\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener'\n\nimport ColorStopsHolder, {\n  AddPaletteItem,\n  PaletteItem,\n} from './ColorStopsHolder'\nimport Palette from '../Palette'\n\nexport interface GradientBuilderProps {\n  children?: JSX.Element\n  palette: PaletteItem[]\n  onAdd: (addPaletteItem: AddPaletteItem) => void\n  onUpdate: (palette: PaletteItem[]) => void\n}\n\nexport interface ChildrenProps {\n  open: boolean\n  anchorEl: HTMLDivElement | null\n  color: string\n  onChange(color: string): void\n}\n\nconst GradientBuilder: FunctionComponent<GradientBuilderProps> = (\n  props: GradientBuilderProps,\n) => {\n  const { children, palette, onUpdate, onAdd } = props\n  const rootEl: React.MutableRefObject<HTMLDivElement | null> = useRef(null)\n  const [oldPalette, setOldPalette] = useState([...palette])\n  const [activeId, setActiveId] = useState<number>(0)\n  const [activeColor, setActiveColor] = useState<string>('')\n  const [isAdd, setIsAdd] = useState(false)\n\n  useEffect(() => {\n    if (isAdd) {\n      const newIds = palette.map(({ id }) => id)\n      const oldIds = oldPalette.map(({ id }) => id)\n      const diff = Array.from(new Set([...newIds, ...oldIds])).filter(\n        (id) => !oldIds.includes(id),\n      )\n      if (diff.length > 0) {\n        setActiveId(diff[0])\n      }\n      setIsAdd(() => false)\n    }\n  }, [palette, isAdd, oldPalette])\n\n  useEffect(() => {\n    setOldPalette([...palette])\n  }, [palette])\n\n  useEffect(() => {\n    if (activeId) {\n      const paletteItem = palette.find((item) => item.id === activeId)\n      if (paletteItem) {\n        setActiveColor(paletteItem.color)\n      }\n    }\n  }, [activeId, palette])\n\n  const handleAdd = (offset: number) => {\n    const list = [...palette]\n    const current = { offset, color: '#000' }\n    let left: PaletteItem | undefined\n    let right: PaletteItem | undefined\n    setActiveId(0)\n\n    list.forEach((item) => {\n      if (\n        item.offset < current.offset &&\n        (!left || left.offset < item.offset)\n      ) {\n        left = item\n      } else if (!right || right.offset > item.offset) {\n        right = item\n      }\n    })\n\n    if (left && right) {\n      const offsetSpace =\n        (current.offset - left.offset) / (right.offset - left.offset)\n      const leftColor = Color(left.color)\n      const rightColor = Color(right.color)\n\n      const r =\n        (rightColor.red() - leftColor.red()) * offsetSpace + leftColor.red()\n      const g =\n        (rightColor.green() - leftColor.green()) * offsetSpace +\n        leftColor.green()\n      const b =\n        (rightColor.blue() - leftColor.blue()) * offsetSpace + leftColor.blue()\n      const a =\n        (rightColor.alpha() - leftColor.alpha()) * offsetSpace +\n        leftColor.alpha()\n      current.color = `rgba(${Math.round(r)},${Math.round(g)},${Math.round(\n        b,\n      )},${Math.round(a)})`\n    } else if (left || right) {\n      current.color = ((left || right) as PaletteItem).color\n    }\n\n    onAdd(current)\n    setIsAdd(true)\n  }\n\n  const handleUpdate = (item: Partial<AddPaletteItem>, isDelete = false) => {\n    if (!activeId) return\n\n    const newPalette = [...palette]\n    const idx = newPalette.findIndex(\n      (paletteItem) => paletteItem.id === activeId,\n    )\n    if (isDelete) {\n      onUpdate([...newPalette.slice(0, idx), ...newPalette.slice(idx + 1)])\n      setActiveId(0)\n    } else {\n      const updateItem = { ...newPalette[idx], ...item }\n      onUpdate([\n        ...newPalette.slice(0, idx),\n        updateItem,\n        ...newPalette.slice(idx + 1),\n      ])\n    }\n  }\n\n  return (\n    <ClickAwayListener\n      mouseEvent='onMouseDown'\n      onClickAway={() => setActiveId(0)}\n    >\n      <div ref={rootEl}>\n        <Palette palette={palette} height='35px' />\n        <ColorStopsHolder\n          palette={palette}\n          activeId={activeId}\n          onAdd={handleAdd}\n          onUpdate={handleUpdate}\n          onSelect={(id) => setActiveId(id || 0)}\n        />\n        {children\n          ? React.cloneElement(children, {\n              open: !!activeId || isAdd,\n              anchorEl: rootEl.current,\n              color: activeColor,\n              onChange: (color: string) =>\n                handleUpdate({\n                  color,\n                }),\n            })\n          : null}\n      </div>\n    </ClickAwayListener>\n  )\n}\nexport default GradientBuilder\n","import React, {\n  useState,\n  useRef,\n  useEffect,\n  FunctionComponent,\n  useCallback,\n} from 'react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nexport interface AnglePickerProps {\n  width?: number\n  angle: number\n  onChange(angle: number): void\n}\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      width: (props: AnglePickerProps) =>\n        props.width ? `${props.width}px` : '36px',\n      height: (props) => (props.width ? `${props.width}px` : '36px'),\n      position: 'relative',\n      cursor: 'crosshair',\n      overflow: 'hidden',\n      borderRadius: '100%',\n      background: '#FFF',\n    },\n    point: {\n      width: '6px',\n      height: '6px',\n      borderRadius: '100%',\n      position: 'relative',\n      left: '50%',\n      top: '50%',\n      marginTop: '-2px',\n      background: '#000',\n      pointerEvents: 'none',\n      transformOrigin: `0 50%`,\n      transform: (props) =>\n        `rotate(${props.angle || 0}deg) translate(${\n          (props.width || 36) / 2 - 8\n        }px, 0)`,\n    },\n  }),\n)\n\nconst AnglePicker: FunctionComponent<AnglePickerProps> = (\n  props: AnglePickerProps,\n) => {\n  const { onChange } = props\n  const rootRef = useRef<HTMLDivElement>(null)\n  const [isDragging, setIsDragging] = useState(false)\n  const classes = useStyles(props)\n\n  const handleMouseMove = useCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent> | MouseEvent) => {\n      if (!rootRef.current) return\n\n      const { clientX, clientY } = e\n      const bounds = rootRef.current.getBoundingClientRect()\n      const radians = Math.atan2(\n        clientY - (bounds.y + bounds.height / 2),\n        clientX - (bounds.x + bounds.width / 2),\n      )\n      onChange(Math.round(radians * (180 / Math.PI)))\n    },\n    [onChange],\n  )\n\n  const handleMouseUp = useCallback((e: MouseEvent) => {\n    e.stopPropagation()\n    e.preventDefault()\n    setIsDragging(false)\n  }, [])\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!rootRef.current) return\n    setIsDragging(true)\n    handleMouseMove(e)\n  }\n\n  useEffect(() => {\n    if (isDragging) {\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    } else {\n      window.removeEventListener('mousemove', handleMouseMove)\n      window.removeEventListener('mouseup', handleMouseUp)\n    }\n\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove)\n      window.removeEventListener('mouseup', handleMouseUp)\n    }\n  }, [handleMouseMove, handleMouseUp, isDragging])\n\n  return (\n    <div\n      aria-hidden\n      className={classes.root}\n      ref={rootRef}\n      onMouseDown={handleMouseDown}\n    >\n      <div className={classes.point} />\n    </div>\n  )\n}\n\nexport default AnglePicker\n","import React, { FunctionComponent } from 'react'\nimport Input from '@material-ui/core/Input'\n\nimport GridInput from 'src/app/components/GridInput'\nimport AnglePicker, { AnglePickerProps } from 'src/app/components/AnglePicker'\n\nconst FormAngle: FunctionComponent<AnglePickerProps> = (\n  props: AnglePickerProps,\n) => {\n  const { angle, onChange } = props\n\n  return (\n    <GridInput\n      before='Angle:'\n      after={<AnglePicker width={24} angle={angle} onChange={onChange} />}\n    >\n      <Input\n        value={angle}\n        fullWidth\n        type='number'\n        onChange={(e) => onChange(Number(e.target.value))}\n      />\n    </GridInput>\n  )\n}\n\nexport default FormAngle\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Box from '@material-ui/core/Box'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\nimport GradientPicker from 'src/app/components/GradientPicker'\nimport WrappedSketchPicker from 'src/app/components/WrappedSketchPicker'\nimport { Gradient, GradientType } from 'src/store'\nimport GridInput from 'src/app/components/GridInput'\n\nimport FormAngle from '../FormAngle'\n\ninterface FormGradientProps {\n  gradient: Gradient\n}\n\nconst FormGradient: FunctionComponent<FormGradientProps> = (\n  props: FormGradientProps,\n) => {\n  const {\n    gradient: {\n      type,\n      angle,\n      palette,\n      addColor,\n      updatePalette,\n      setAngle,\n      setType,\n    },\n  } = props\n\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <FormAngle angle={angle} onChange={setAngle} />\n      </Box>\n\n      <Box paddingX={2} marginY={4}>\n        <GridInput before='Type:' component='div' childrenWidth={8}>\n          <RadioGroup\n            row\n            name='type'\n            value={type}\n            onChange={(e) => setType(Number(e.target.value))}\n            style={{ flexWrap: 'nowrap' }}\n          >\n            <FormControlLabel\n              value={GradientType.LINEAR}\n              control={<Radio size='small' color='default' />}\n              label='Linear'\n            />\n            <FormControlLabel\n              value={GradientType.RADIAL}\n              control={<Radio size='small' color='default' />}\n              label='Radial'\n            />\n          </RadioGroup>\n        </GridInput>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <GradientPicker\n          palette={palette}\n          onAdd={(e) => addColor(e.offset, e.color)}\n          onUpdate={updatePalette}\n        >\n          <WrappedSketchPicker />\n        </GradientPicker>\n      </Box>\n    </>\n  )\n}\n\nexport default observer(FormGradient)\n","import React, { FunctionComponent } from 'react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\n\nimport readFile from 'src/utils/readFile'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      width: theme.spacing(12),\n      height: theme.spacing(12),\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      position: 'relative',\n      border: `1px solid ${theme.palette.primary.main}`,\n      cursor: 'pointer',\n      ...theme.bgPixel,\n    },\n    image: {\n      maxWidth: '100%',\n      maxHeight: '100%',\n      pointerEvents: 'none',\n    },\n  }),\n)\n\ninterface FileSelectorProps {\n  src: string\n  onChange(image: ArrayBuffer): void\n}\n\nconst FileSelector: FunctionComponent<FileSelectorProps> = (\n  props: FileSelectorProps,\n) => {\n  const { src, onChange } = props\n  const classes = useStyles()\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    if (!e.target.files) return\n    if (e.target.files.length > 0) {\n      readFile(e.target.files[0]).then((buffer) => {\n        if (buffer instanceof ArrayBuffer) onChange(buffer)\n      })\n    }\n  }\n\n  return (\n    <Box component='label' className={classes.root}>\n      <input\n        hidden\n        type='file'\n        multiple\n        accept='image/*'\n        onChange={handleChange}\n      />\n      <img className={classes.image} src={src} alt='' />\n    </Box>\n  )\n}\n\nexport default FileSelector\n","import React, { FunctionComponent } from 'react'\n\nimport GridInput from 'src/app/components/GridInput'\nimport Box from '@material-ui/core/Box'\nimport Input from '@material-ui/core/Input'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport { PatternTexture, Repetition } from 'src/store'\n\nimport FileSelector from './FileSelector'\n\ninterface FormImageProps {\n  patternTexture: PatternTexture\n  scale: number\n  src: string\n  // onChangeImage(buffer: ArrayBuffer): void\n  // onChangeScale(scale: number): void\n}\n\nconst FormImage: FunctionComponent<FormImageProps> = (\n  props: FormImageProps,\n) => {\n  const { patternTexture } = props\n  const {\n    src,\n    scale,\n    repetition,\n    setRepetition,\n    setScale,\n    setImage,\n  } = patternTexture\n\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <GridInput\n          component='div'\n          before='Scale:'\n          after={<FileSelector src={src} onChange={setImage} />}\n        >\n          <Input\n            value={scale}\n            fullWidth\n            type='number'\n            inputProps={{ min: 0.01, step: 0.1 }}\n            onChange={(e) => setScale(Number(e.target.value))}\n          />\n        </GridInput>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <GridInput before='Repeat:'>\n          <Select\n            value={repetition}\n            onChange={(e) => setRepetition(e.target.value as Repetition)}\n            displayEmpty\n            fullWidth\n          >\n            <MenuItem value='repeat'>Repeat</MenuItem>\n            <MenuItem value='repeat-x'>Repeat-x</MenuItem>\n            <MenuItem value='repeat-y'>Repeat-y</MenuItem>\n            <MenuItem value='no-repeat'>No Repeat</MenuItem>\n          </Select>\n        </GridInput>\n      </Box>\n    </>\n  )\n}\n\nexport default FormImage\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Box from '@material-ui/core/Box'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\nimport { FontStyleConfig, FillType } from 'src/store'\n\nimport FormColor from '../FormColor'\nimport FormGradient from '../FormGradient'\nimport FormImage from '../FormImage'\n\ninterface FormFillProps {\n  config: FontStyleConfig\n}\n\nconst FormFill: FunctionComponent<FormFillProps> = (props: FormFillProps) => {\n  const {\n    config: { type, color, gradient, patternTexture, setType, setColor },\n  } = props\n\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <RadioGroup\n          row\n          name='type'\n          value={type}\n          onChange={(e) => setType(Number(e.target.value))}\n        >\n          <FormControlLabel\n            value={FillType.SOLID}\n            control={<Radio size='small' color='default' />}\n            label='Solid'\n          />\n          <FormControlLabel\n            value={FillType.GRADIENT}\n            control={<Radio size='small' color='default' />}\n            label='Gradient'\n          />\n          <FormControlLabel\n            value={FillType.IMAGE}\n            control={<Radio size='small' color='default' />}\n            label='Image'\n          />\n        </RadioGroup>\n      </Box>\n      {type === 0 ? (\n        <Box paddingX={2} marginY={4}>\n          <FormColor color={color} onChange={setColor} />\n        </Box>\n      ) : null}\n      {type === 1 ? <FormGradient gradient={gradient} /> : null}\n      {type === 2 ? (\n        <FormImage\n          patternTexture={patternTexture}\n          src={patternTexture.src}\n          scale={patternTexture.scale}\n          // onChangeImage={patternTexture.setImage}\n          // onChangeScale={patternTexture.setScale}\n        />\n      ) : null}\n    </>\n  )\n}\n\nexport default observer(FormFill)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\n\nimport { useFill } from 'src/store/hooks'\nimport FormFill from '../../../common/FormFill'\n\nconst Fill: FunctionComponent<unknown> = () => {\n  const fill = useFill()\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <Typography>Fill</Typography>\n      </Box>\n      <FormFill config={fill} />\n    </>\n  )\n}\n\nexport default observer(Fill)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Input from '@material-ui/core/Input'\nimport Switch from '@material-ui/core/Switch'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\n\nimport { useStyle } from 'src/store/hooks'\nimport GridInput from 'src/app/components/GridInput'\n\nimport FormFill from 'src/app/layout/common/FormFill'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    disabled: {\n      opacity: 0.3,\n      pointerEvents: 'none',\n    },\n    title: {\n      flex: 1,\n    },\n  }),\n)\n\nconst Stroke: FunctionComponent<unknown> = () => {\n  const classes = useStyles()\n  const { stroke, useStroke, setUseStroke } = useStyle()\n  const { setWidth, lineJoin, setLineJoin, lineCap, setLineCap } = stroke\n\n  return (\n    <>\n      <Box\n        component='label'\n        display='flex'\n        alignItems='center'\n        paddingX={2}\n        marginY={4}\n      >\n        <Typography component='div' className={classes.title}>\n          Stroke\n        </Typography>\n        Off\n        <Switch\n          size='small'\n          checked={useStroke}\n          onChange={(e) => setUseStroke(e.target.checked)}\n        />\n        On\n      </Box>\n      <div className={useStroke ? '' : classes.disabled}>\n        <Box paddingX={2} marginY={4}>\n          <GridInput before='Width:' after='px'>\n            <Input\n              value={stroke?.width || 0}\n              fullWidth\n              type='number'\n              inputProps={{ min: 0 }}\n              onChange={(e) => setWidth(Number(e.target.value))}\n            />\n          </GridInput>\n        </Box>\n\n        <Box paddingX={2} marginY={4}>\n          <GridInput before='Line Cap:' component='div' childrenWidth={8}>\n            <ButtonGroup size='small' color='primary'>\n              <Button\n                onClick={() => setLineCap('butt')}\n                variant={lineCap === 'butt' ? 'contained' : 'outlined'}\n              >\n                Butt\n              </Button>\n              <Button\n                onClick={() => setLineCap('round')}\n                variant={lineCap === 'round' ? 'contained' : 'outlined'}\n              >\n                Round\n              </Button>\n              <Button\n                onClick={() => setLineCap('square')}\n                variant={lineCap === 'square' ? 'contained' : 'outlined'}\n              >\n                Square\n              </Button>\n            </ButtonGroup>\n          </GridInput>\n        </Box>\n\n        <Box paddingX={2} marginY={4}>\n          <GridInput before='Line Join:' component='div' childrenWidth={8}>\n            <ButtonGroup size='small' color='primary'>\n              <Button\n                onClick={() => setLineJoin('miter')}\n                variant={lineJoin === 'miter' ? 'contained' : 'outlined'}\n              >\n                Miter\n              </Button>\n              <Button\n                onClick={() => setLineJoin('round')}\n                variant={lineJoin === 'round' ? 'contained' : 'outlined'}\n              >\n                Round\n              </Button>\n              <Button\n                onClick={() => setLineJoin('bevel')}\n                variant={lineJoin === 'bevel' ? 'contained' : 'outlined'}\n              >\n                Bevel\n              </Button>\n            </ButtonGroup>\n          </GridInput>\n        </Box>\n        <FormFill config={stroke} />\n      </div>\n    </>\n  )\n}\n\nexport default observer(Stroke)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport Input from '@material-ui/core/Input'\nimport Switch from '@material-ui/core/Switch'\n\nimport { useStyle } from 'src/store/hooks'\nimport GridInput from 'src/app/components/GridInput'\nimport FormColor from '../../../common/FormColor'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    disabled: {\n      opacity: 0.3,\n      pointerEvents: 'none',\n    },\n    title: {\n      flex: 1,\n    },\n  }),\n)\n\nconst Shadow: FunctionComponent<unknown> = () => {\n  const { shadow, useShadow, setUseShadow } = useStyle()\n  const { setOffsetX, setOffsetY, setBlur, setColor } = shadow\n  const classes = useStyles()\n\n  return (\n    <>\n      <Box\n        component='label'\n        display='flex'\n        alignItems='center'\n        paddingX={2}\n        marginY={4}\n      >\n        <Typography component='div' className={classes.title}>\n          Shadow\n        </Typography>\n        Off\n        <Switch\n          size='small'\n          checked={useShadow}\n          onChange={(e) => setUseShadow(e.target.checked)}\n        />\n        On\n      </Box>\n      <div className={useShadow ? '' : classes.disabled}>\n        <Box paddingX={2} marginY={4}>\n          <GridInput before='Offset X:' after='px'>\n            <Input\n              value={shadow?.offsetX || 0}\n              fullWidth\n              type='number'\n              disabled={!useShadow}\n              onChange={(e) => setOffsetX(Number(e.target.value))}\n            />\n          </GridInput>\n        </Box>\n        <Box paddingX={2} marginY={4}>\n          <GridInput before='Offset Y:' after='px'>\n            <Input\n              value={shadow?.offsetY || 0}\n              fullWidth\n              type='number'\n              disabled={!useShadow}\n              onChange={(e) => setOffsetY(Number(e.target.value))}\n            />\n          </GridInput>\n        </Box>\n        <Box paddingX={2} marginY={4}>\n          <GridInput before='Blur:' after='px'>\n            <Input\n              value={shadow?.blur || 0}\n              fullWidth\n              type='number'\n              disabled={!useShadow}\n              inputProps={{ style: { textAlign: 'right' }, min: 0 }}\n              onChange={(e) => setBlur(Number(e.target.value))}\n            />\n          </GridInput>\n        </Box>\n        <Box paddingX={2} marginY={4}>\n          <FormColor color={shadow?.color || ''} onChange={setColor} />\n        </Box>\n      </div>\n    </>\n  )\n}\nexport default observer(Shadow)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\n\nimport { useStyle } from 'src/store/hooks'\nimport FormColor from '../../../common/FormColor'\n\nconst BackgroundColor: FunctionComponent<unknown> = () => {\n  const { bgColor, setBgColor } = useStyle()\n\n  return (\n    <>\n      <Box\n        component='label'\n        display='flex'\n        alignItems='center'\n        paddingX={2}\n        marginY={4}\n      >\n        <Typography>Background Color</Typography>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <FormColor color={bgColor || ''} onChange={setBgColor} />\n      </Box>\n    </>\n  )\n}\n\nexport default observer(BackgroundColor)\n","import React, { FunctionComponent } from 'react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Divider from '@material-ui/core/Divider'\nimport Typography from '@material-ui/core/Typography'\n\nimport Fill from './modules/Fill'\nimport Stroke from './modules/Stroke'\nimport Shadow from './modules/Shadow'\nimport BackgroundColor from './modules/BackgroundColor'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      overflow: 'hidden',\n      width: '256px',\n    },\n  }),\n)\n\nconst RightBar: FunctionComponent<unknown> = () => {\n  const classes = useStyles()\n\n  return (\n    <Box\n      bgcolor='background.sidebar'\n      display='flex'\n      flexDirection='column'\n      overflow='hidden'\n      className={classes.root}\n    >\n      <Box bgcolor='background.sidebar' boxShadow={2} padding={2}>\n        <Typography variant='subtitle2'>Style Config</Typography>\n      </Box>\n      <Box flex={1} height={0} overflow='hidden auto'>\n        <Fill />\n        <Divider />\n        <Stroke />\n        <Divider />\n        <Shadow />\n        <Divider />\n        <BackgroundColor />\n      </Box>\n    </Box>\n  )\n}\n\nexport default RightBar\n","import { useEffect, useCallback, RefObject, DependencyList } from 'react'\n\ninterface DeltaInfo {\n  deltaScale: number\n  deltaX: number\n  deltaY: number\n}\n\ninterface WheelCallback {\n  (deltaInfo: DeltaInfo): void\n}\n\nfunction useWheel(\n  ref: RefObject<HTMLElement>,\n  onWheel: WheelCallback,\n  deps: DependencyList = [],\n): void {\n  const callback = useCallback(onWheel, [onWheel, deps])\n  const handleWheel = useCallback(\n    (e: WheelEvent) => {\n      e.preventDefault()\n      e.stopPropagation()\n      const { ctrlKey, altKey, deltaX, deltaY } = e\n      if (ctrlKey) {\n        let d = -0.01\n        if (Math.abs(deltaY) > 50) d *= 0.1\n        callback({ deltaScale: deltaY * d, deltaX: 0, deltaY: 0 })\n      } else {\n        let x = -deltaX\n        let y = -deltaY\n        if (deltaX === 0 && altKey && Math.abs(deltaY) > 50) {\n          x = -deltaY\n          y = 0\n        }\n        callback({\n          deltaX: x,\n          deltaY: y,\n          deltaScale: 0,\n        })\n      }\n    },\n    [callback],\n  )\n\n  useEffect(() => {\n    if (!ref.current) return undefined\n\n    const dom = ref.current\n\n    dom.addEventListener('wheel', handleWheel, {\n      passive: false,\n    })\n\n    return () => dom.removeEventListener('wheel', handleWheel)\n  }, [ref, handleWheel])\n}\nexport default useWheel\n","import {\n  useState,\n  useEffect,\n  useMemo,\n  useCallback,\n  DependencyList,\n} from 'react'\n\ninterface OffsetInfo {\n  offsetX: number\n  offsetY: number\n}\n\ninterface WheelCallback {\n  (offsetInfo: OffsetInfo): void\n}\n\nconst point = {\n  x: 0,\n  y: 0,\n}\n\nfunction useSpaceDrag<T extends HTMLElement>(\n  onMove: WheelCallback,\n  deps: DependencyList = [],\n): [0 | 1 | 2, (e: React.MouseEvent<T, MouseEvent>) => void] {\n  const [moveState, setMoveState] = useState({\n    ks: false,\n    ms: false,\n  })\n\n  const dragStatus = useMemo(() => {\n    if (moveState.ks && moveState.ms) return 2\n    if (moveState.ks) return 1\n    return 0\n  }, [moveState.ks, moveState.ms])\n\n  const moveCallback = useCallback(onMove, [onMove, ...deps])\n\n  const handleKeyEvent = useCallback(\n    (e: KeyboardEvent) => {\n      const state = e.keyCode === 32 && e.type === 'keydown'\n      if (moveState.ks === state) return\n      setMoveState((s) => {\n        return {\n          ...s,\n          ks: e.keyCode === 32 && e.type === 'keydown',\n        }\n      })\n    },\n    [moveState.ks],\n  )\n\n  const handleMouseDown = (e: React.MouseEvent<T, MouseEvent>) => {\n    if (!moveState.ks) return\n    const { clientX, clientY } = e\n    point.x = clientX\n    point.y = clientY\n    setMoveState((s) => {\n      return {\n        ...s,\n        ms: true,\n      }\n    })\n  }\n\n  const handleMove = useCallback(\n    (e: MouseEvent) => {\n      const { clientX, clientY } = e\n      const { x, y } = point\n\n      if (clientX - x === 0 && clientY - y === 0) return\n\n      moveCallback({\n        offsetX: clientX - x,\n        offsetY: clientY - y,\n      })\n\n      point.x = clientX\n      point.y = clientY\n    },\n    [moveCallback],\n  )\n\n  const handleEnd = useCallback(() => {\n    setMoveState((s) => {\n      return {\n        ...s,\n        ms: false,\n      }\n    })\n  }, [])\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyEvent)\n    window.addEventListener('keyup', handleKeyEvent)\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyEvent)\n      window.removeEventListener('keyup', handleKeyEvent)\n    }\n  }, [handleKeyEvent])\n\n  useEffect(() => {\n    if (moveState.ks && moveState.ms) {\n      window.addEventListener('mousemove', handleMove)\n      window.addEventListener('mouseup', handleEnd)\n    } else {\n      window.removeEventListener('mousemove', handleMove)\n      window.removeEventListener('mouseup', handleEnd)\n    }\n\n    return () => {\n      window.removeEventListener('mousemove', handleMove)\n      window.removeEventListener('mouseup', handleEnd)\n    }\n  }, [handleEnd, handleMove, moveState.ks, moveState.ms])\n\n  return [dragStatus, handleMouseDown]\n}\nexport default useSpaceDrag\n","import React, { useRef, useEffect, FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport { useProject } from 'src/store/hooks'\nimport useWheel from 'src/app/hooks/useWheel'\nimport useSpaceDrag from 'src/app/hooks/useSpaceDrag'\n\ninterface StyleProps {\n  width: number\n  height: number\n  scale: number\n  offsetX: number\n  offsetY: number\n  dragState: number\n}\n\nconst useStyles = makeStyles(({ bgPixel }) =>\n  createStyles({\n    root: {\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden',\n      flex: 1,\n      cursor: (props: StyleProps) => {\n        if (props.dragState === 2) return 'grabbing'\n        if (props.dragState === 1) return 'grab'\n        return 'default'\n      },\n    },\n    canvas: {\n      ...bgPixel,\n      transformOrigin: '50% 50%',\n      position: 'absolute',\n      left: '50%',\n      top: '50%',\n      width: (props: StyleProps) => `${props.width}px`,\n      height: (props: StyleProps) => `${props.height}px`,\n      marginLeft: (props: StyleProps) => `${props.width / -2}px`,\n      marginTop: (props: StyleProps) => `${props.height / -2}px`,\n      transform: (props: StyleProps) =>\n        `scale(${props.scale}) translate(${props.offsetX}px,${props.offsetY}px)`,\n      imageRendering: 'pixelated',\n    },\n  }),\n)\n\nconst PackCanvas: FunctionComponent<unknown> = () => {\n  const {\n    isPacking,\n    ui,\n    layout: { padding, auto, fixedSize, width: packWidth, height: packHeight },\n    glyphList,\n    style: { bgColor },\n    packCanvas,\n    setCanvas,\n  } = useProject()\n  const { width, height, scale, offsetX, offsetY } = ui\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const domRef = useRef<HTMLDivElement>(null)\n  const [dragState, handleMouseDown] = useSpaceDrag(\n    (offsetInfo) => {\n      const { offsetX: ix, offsetY: iy } = offsetInfo\n      const { scale: os, offsetX: ox, offsetY: oy, setTransform } = ui\n      setTransform({\n        offsetX: ox + ix / os,\n        offsetY: oy + iy / os,\n      })\n    },\n    [ui],\n  )\n\n  const classes = useStyles({\n    width,\n    height,\n    scale,\n    offsetX,\n    offsetY,\n    dragState,\n  })\n\n  useWheel(\n    domRef,\n    (info) => {\n      const { offsetX: ox, offsetY: oy, scale: os, setTransform } = ui\n      const s = os + info.deltaScale\n      const x = ox + info.deltaX / s\n      const y = oy + info.deltaY / s\n      setTransform({\n        offsetX: x,\n        offsetY: y,\n        scale: s,\n      })\n    },\n    [ui],\n  )\n\n  useEffect(() => {\n    if (canvasRef.current && canvasRef.current !== packCanvas)\n      setCanvas(canvasRef.current)\n  }, [canvasRef, packCanvas, setCanvas])\n\n  useEffect(() => {\n    if (!glyphList || isPacking || !width || !height) return\n    const canvas = canvasRef.current\n    if (!canvas) return\n\n    canvas.width = width\n    canvas.height = height\n\n    const ctx = canvas.getContext('2d')\n    if (!ctx) return\n\n    if (bgColor) {\n      ctx.fillStyle = bgColor\n      ctx.fillRect(0, 0, canvas.width, canvas.height)\n    }\n\n    glyphList.forEach((glyph) => {\n      if (\n        glyph.source &&\n        glyph.source.width !== 0 &&\n        glyph.source.height !== 0\n      ) {\n        ctx.drawImage(\n          glyph.source as HTMLCanvasElement,\n          glyph.x + (padding || 0),\n          glyph.y + (padding || 0),\n        )\n      }\n    })\n  }, [\n    bgColor,\n    glyphList,\n    isPacking,\n    height,\n    width,\n    padding,\n    auto,\n    fixedSize,\n    packWidth,\n    packHeight,\n  ])\n\n  return (\n    <div\n      aria-hidden\n      ref={domRef}\n      className={classes.root}\n      onMouseDown={handleMouseDown}\n    >\n      <canvas ref={canvasRef} className={classes.canvas} />\n    </div>\n  )\n}\n\nexport default observer(PackCanvas)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport { useProjectUi } from 'src/store/hooks'\n\nconst useStyles = makeStyles(({ palette }) =>\n  createStyles({\n    root: {\n      width: '100%',\n      background: palette.background.paper,\n      textAlign: 'center',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      fontSize: 12,\n      padding: 2,\n      animationDuration: '300ms',\n      pointerEvents: 'none',\n      color: palette.text.secondary,\n    },\n  }),\n)\n\nconst PackSizeBar: FunctionComponent<unknown> = () => {\n  const { width, height } = useProjectUi()\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      Packed texture size: {width} x {height}\n    </div>\n  )\n}\n\nexport default observer(PackSizeBar)\n","import React, { FunctionComponent } from 'react'\n\nimport PackCanvas from './PackCanvas'\nimport PackSizeBar from './PackSizeBar'\n\nconst PackView: FunctionComponent<unknown> = () => {\n  return (\n    <>\n      <PackSizeBar />\n      <PackCanvas />\n    </>\n  )\n}\n\nexport default PackView\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport clsx from 'clsx'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport { useProjectUi } from 'src/store/hooks'\n\nimport { PreviewObject } from './getPreviewCanvas'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    letter: {\n      position: 'absolute',\n      '&:hover,&$select': {\n        background: 'rgba(0,0,0,0.2)',\n        outline: '1px solid #000',\n      },\n    },\n    select: {\n      '& + $next': {\n        background: 'rgba(0,0,0,0.1)',\n        outline: '1px dashed #666',\n      },\n    },\n    next: {},\n  }),\n)\n\ninterface LetterListProps {\n  data: PreviewObject\n}\n\nconst LetterList: FunctionComponent<LetterListProps> = (\n  props: LetterListProps,\n) => {\n  const {\n    data: { xOffset, yOffset, list },\n  } = props\n  const classes = useStyles()\n  const ui = useProjectUi()\n  const handleSelect = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    letter: string,\n    next: string,\n  ) => {\n    // setSelectLetter\n    e.stopPropagation()\n    ui.setSelectLetter(letter, next)\n  }\n  return (\n    <>\n      {list.map((item, idx) => {\n        const key = `${item.letter}${idx}`\n        return (\n          <div\n            aria-hidden\n            className={clsx(classes.letter, {\n              [classes.select]: item.letter === ui.selectLetter,\n              [classes.next]: item.letter === ui.selectNextLetter,\n            })}\n            style={{\n              width: item.width,\n              height: item.height,\n              left: `${item.x - xOffset}px`,\n              top: `${item.y - yOffset}px`,\n            }}\n            key={key}\n            onClick={(e) => handleSelect(e, item.letter, item.next)}\n          />\n        )\n      })}\n    </>\n  )\n}\n\nexport default observer(LetterList)\n","import React, { useRef, useState, useEffect, FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport { useProject } from 'src/store/hooks'\nimport useWheel from 'src/app/hooks/useWheel'\nimport useSpaceDrag from 'src/app/hooks/useSpaceDrag'\nimport toOutputInfo, { BMFontChar } from 'src/file/toOutputInfo'\n\nimport getPreviewCanvas, { PreviewObject } from './getPreviewCanvas'\nimport LetterList from './LetterList'\n\ninterface StyleProps {\n  width: number\n  height: number\n  scale: number\n  offsetX: number\n  offsetY: number\n  dragState: number\n}\n\nconst useStyles = makeStyles(({ bgPixel }) =>\n  createStyles({\n    root: {\n      position: 'relative',\n      flex: 1,\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden',\n      ...bgPixel,\n      cursor: (props: StyleProps) => {\n        if (props.dragState === 2) return 'grabbing'\n        if (props.dragState === 1) return 'grab'\n        return 'default'\n      },\n    },\n    wrap: {\n      transformOrigin: '50% 50%',\n      position: 'absolute',\n      left: '50%',\n      top: '50%',\n      width: (props: StyleProps) => `${props.width}px`,\n      height: (props: StyleProps) => `${props.height}px`,\n      marginLeft: (props: StyleProps) => `${props.width / -2}px`,\n      marginTop: (props: StyleProps) => `${props.height / -2}px`,\n      transform: (props: StyleProps) =>\n        `scale(${props.scale}) translate(${props.offsetX}px,${props.offsetY}px)`,\n    },\n    canvas: {\n      width: '100%',\n      height: '100%',\n      imageRendering: 'pixelated',\n    },\n  }),\n)\n\nconst PreviewCanvas: FunctionComponent<unknown> = () => {\n  const project = useProject()\n  const [data, setData] = useState<PreviewObject | null>(null)\n  const {\n    ui,\n    style: {\n      font: {\n        size,\n        lineHeight,\n        middle,\n        hanging,\n        top,\n        alphabetic,\n        ideographic,\n        bottom,\n        minBaseLine,\n        maxBaseLine,\n      },\n    },\n    isPacking,\n  } = project\n  const { previewScale, previewOffsetX, previewOffsetY } = ui\n\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const domRef = useRef<HTMLDivElement>(null)\n  const [dragState, handleMouseDown] = useSpaceDrag(\n    (offsetInfo) => {\n      const { offsetX: ix, offsetY: iy } = offsetInfo\n      const {\n        previewScale: os,\n        previewOffsetX: ox,\n        previewOffsetY: oy,\n        setPreviewTransform,\n      } = ui\n      setPreviewTransform({\n        previewOffsetX: ox + ix / os,\n        previewOffsetY: oy + iy / os,\n      })\n    },\n    [ui],\n  )\n  const classes = useStyles({\n    width: data ? data.width : 0,\n    height: data ? data.height : 0,\n    scale: previewScale,\n    offsetX: previewOffsetX,\n    offsetY: previewOffsetY,\n    dragState,\n  })\n\n  useWheel(\n    domRef,\n    (info) => {\n      const {\n        previewOffsetX: ox,\n        previewOffsetY: oy,\n        previewScale: os,\n        setPreviewTransform,\n      } = ui\n      const s = os + info.deltaScale\n      const x = ox + info.deltaX / s\n      const y = oy + info.deltaY / s\n      setPreviewTransform({\n        previewOffsetX: x,\n        previewOffsetY: y,\n        previewScale: s,\n      })\n    },\n    [ui],\n  )\n\n  useEffect(() => {\n    if (!canvasRef.current || isPacking || !data) return\n\n    const canvas = canvasRef.current\n    const ctx = canvas.getContext('2d')\n    if (!ctx) return\n    const lh = size * lineHeight\n\n    canvas.width = data.width\n    canvas.height = data.height\n    data.list.forEach((item) => {\n      if (!item.source || item.source.width === 0 || item.source.height === 0)\n        return\n      ctx.drawImage(item.source, item.x - data.xOffset, item.y - data.yOffset)\n    })\n\n    for (let index = 0; index < data.lines; index += 1) {\n      ;[middle, hanging, top, alphabetic, ideographic, bottom].forEach(\n        (baseLine) => {\n          const basey = Math.round(baseLine - minBaseLine + index * lh)\n          ctx.beginPath()\n          ctx.moveTo(-data.xOffset, basey + 0.5 - data.yOffset)\n          ctx.lineTo(data.width, basey + 0.5 - data.yOffset)\n          if (baseLine === minBaseLine || baseLine === maxBaseLine) {\n            ctx.strokeStyle = 'rgba(0,0,0,1)'\n            ctx.setLineDash([])\n          } else {\n            ctx.strokeStyle = 'rgba(0,0,0,0.5)'\n            ctx.setLineDash([10, 3, 2, 3])\n          }\n          ctx.stroke()\n        },\n      )\n      ctx.beginPath()\n      ctx.moveTo(-data.xOffset + 0.5, index * lh - data.yOffset)\n      ctx.lineTo(\n        -data.xOffset + 0.5,\n        index * lh - data.yOffset + maxBaseLine - minBaseLine,\n      )\n      ctx.strokeStyle = 'rgba(0,0,0,1)'\n      ctx.setLineDash([])\n      ctx.stroke()\n    }\n  }, [\n    alphabetic,\n    bottom,\n    data,\n    hanging,\n    ideographic,\n    isPacking,\n    lineHeight,\n    maxBaseLine,\n    middle,\n    minBaseLine,\n    size,\n    top,\n  ])\n\n  useEffect(() => {\n    if (!canvasRef.current || isPacking) return\n\n    const canvas = canvasRef.current\n    const ctx = canvas.getContext('2d')\n    if (!ctx) return\n\n    const { chars, kernings } = toOutputInfo(project)\n    const kerningMap: Map<number, Map<number, number>> = new Map()\n    kernings.list.forEach(({ first, second, amount }) => {\n      if (!kerningMap.has(first)) kerningMap.set(first, new Map())\n      const k = kerningMap.get(first)\n      k?.set(second, amount)\n    })\n    const charMap: Map<string, BMFontChar> = new Map()\n    chars.list.forEach((char) => {\n      charMap.set(char.letter, char)\n    })\n    const lh = size * lineHeight\n    const obj = getPreviewCanvas(\n      ui.previewText,\n      charMap,\n      kerningMap,\n      lh,\n      maxBaseLine - minBaseLine,\n    )\n    setData(() => obj)\n  }, [\n    isPacking,\n    lineHeight,\n    maxBaseLine,\n    minBaseLine,\n    project,\n    size,\n    ui.previewText,\n  ])\n\n  return (\n    <div\n      aria-hidden\n      ref={domRef}\n      className={classes.root}\n      onMouseDown={handleMouseDown}\n      onClick={() => ui.setSelectLetter('', '')}\n    >\n      <div className={classes.wrap}>\n        <canvas ref={canvasRef} className={classes.canvas} />\n        {data ? <LetterList data={data} /> : null}\n      </div>\n    </div>\n  )\n}\n\nexport default observer(PreviewCanvas)\n","import { BMFontChar } from 'src/file/toOutputInfo'\n\ninterface PreviewItem {\n  x: number\n  y: number\n  width: number\n  height: number\n  source: HTMLImageElement | HTMLCanvasElement | null\n  letter: string\n  next: string\n}\n\nexport interface PreviewObject {\n  xOffset: number\n  yOffset: number\n  width: number\n  height: number\n  list: PreviewItem[]\n  lines: number\n}\n\nexport default function getPreviewCanvas(\n  text: string,\n  chars: Map<string, BMFontChar>,\n  kernings: Map<number, Map<number, number>>,\n  lineHeight: number,\n  fontHeight: number,\n): PreviewObject {\n  // const letters = Array.from(new Set(text.replace(/\\r\\n|\\r|\\n/g, '').split('')))\n  const list: PreviewItem[] = []\n  const lines = text.split(/\\r\\n|\\r|\\n/)\n  let minX = 0\n  let minY = 0\n  let maxX = 0\n  let maxY = 0\n  let y = 0\n  let x = 0\n\n  lines.forEach((str, index) => {\n    y = lineHeight * index\n    x = 0\n    const arr = Array.from(str)\n    arr.forEach((letter, idx) => {\n      const char = chars.get(letter)\n      if (!char) return\n      const next = arr[idx + 1]\n      const lk = kernings.get(letter.charCodeAt(0))\n      let kering = 0\n      if (next && lk && lk.has(next.charCodeAt(0))) {\n        kering = lk.get(next.charCodeAt(0)) || 0\n      }\n      const obj = {\n        x: x + char.xoffset,\n        y: y + char.yoffset,\n        width: char.width || char.xadvance,\n        height: char.height || fontHeight,\n        source: char.source,\n        letter: char.letter,\n        next,\n      }\n      x += char.xadvance + kering\n      minX = Math.min(obj.x, minX)\n      minY = Math.min(obj.y, minY)\n      maxX = Math.max(obj.x + obj.width, maxX)\n      maxY = Math.max(obj.y + char.height, maxY)\n      list.push(obj)\n    })\n  })\n\n  return {\n    lines: lines.length,\n    list,\n    xOffset: minX,\n    yOffset: minY,\n    width: maxX - minX,\n    height: Math.max(maxY - minY, lines.length * lineHeight - minY),\n  }\n}\n","import React, { useState, FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\n\nimport Box from '@material-ui/core/Box'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\n\nimport { useProjectUi } from 'src/store/hooks'\n\nconst Preview: FunctionComponent<unknown> = () => {\n  const { previewText, setPreviewText } = useProjectUi()\n  const [isIME, setIsIME] = useState(false)\n  const [inputText, setInputText] = useState(previewText)\n\n  const handleInput = (event: React.ChangeEvent<HTMLTextAreaElement>): void => {\n    const { value } = event.target\n    if (isIME) {\n      setInputText(value)\n    } else {\n      setInputText(value)\n      if (value !== previewText) setPreviewText(value)\n    }\n  }\n\n  const handleCompositionEnd = (): void => {\n    setIsIME(false)\n    setInputText(inputText)\n    if (inputText !== previewText) setPreviewText(inputText)\n  }\n\n  return (\n    <Box>\n      <Box paddingX={2} marginY={4}>\n        <Typography>Glyphs</Typography>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <TextField\n          margin='none'\n          value={isIME ? inputText : previewText}\n          fullWidth\n          multiline\n          rows={7}\n          variant='outlined'\n          inputProps={{ spellCheck: false }}\n          onChange={handleInput}\n          onCompositionStart={() => setIsIME(true)}\n          onCompositionEnd={handleCompositionEnd}\n        />\n      </Box>\n    </Box>\n  )\n}\n\nexport default observer(Preview)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\n\nimport { useProject } from 'src/store/hooks'\n\nimport FormAdjustMetric from 'src/app/layout/common/FormAdjustMetric'\n\nconst GlobalMetric: FunctionComponent<unknown> = () => {\n  const project = useProject()\n  const { glyphList, ui } = project\n  const glyph = glyphList.find((gl) => gl.letter === ui.selectLetter)\n  if (!glyph) return null\n  const { adjustMetric, letter } = glyph\n  const {\n    xAdvance,\n    xOffset,\n    yOffset,\n    setXAdvance,\n    setXOffset,\n    setYOffset,\n  } = adjustMetric\n\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <Typography>{`\"${letter}\" Adjustment`}</Typography>\n      </Box>\n      <FormAdjustMetric\n        xAdvance={xAdvance}\n        xOffset={xOffset}\n        yOffset={yOffset}\n        setXAdvance={setXAdvance}\n        setXOffset={setXOffset}\n        setYOffset={setYOffset}\n      />\n    </>\n  )\n}\n\nexport default observer(GlobalMetric)\n","import React, { useState, useEffect, FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport { deepObserve } from 'mobx-utils'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport Input from '@material-ui/core/Input'\nimport GridInput from 'src/app/components/GridInput'\n\nimport { useProject } from 'src/store/hooks'\nimport { GlyphFont, GlyphImage } from 'src/store'\n\nconst GlobalMetric: FunctionComponent<unknown> = () => {\n  const {\n    glyphList,\n    ui,\n    style: {\n      font: { opentype, size },\n    },\n  } = useProject()\n  const [offset, setOffset] = useState(0)\n  const [glyph, setGlyph] = useState<GlyphFont | GlyphImage | undefined>()\n  const [kerning, setKerning] = useState(0)\n\n  useEffect(() => {\n    setGlyph(glyphList.find((gl) => gl.letter === ui.selectLetter))\n  }, [glyphList, ui.selectLetter])\n\n  useEffect(() => {\n    if (glyph && ui.selectNextLetter && opentype) {\n      const fontScale = (1 / opentype.unitsPerEm) * size\n      setOffset(\n        Math.round(\n          opentype.getKerningValue(\n            opentype.charToGlyphIndex(glyph.letter),\n            opentype.charToGlyphIndex(ui.selectNextLetter),\n          ) * fontScale,\n        ),\n      )\n    }\n  }, [glyph, opentype, size, ui.selectNextLetter])\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ) => {\n    if (glyph)\n      glyph.steKerning(ui.selectNextLetter, Number(e.target.value) - offset)\n  }\n\n  useEffect(() => {\n    let disposer\n\n    if (glyph) {\n      setKerning(glyph.kerning.get(ui.selectNextLetter) || 0)\n      disposer = deepObserve(glyph.kerning, () => {\n        setKerning(glyph.kerning.get(ui.selectNextLetter) || 0)\n      })\n    }\n\n    return disposer\n  }, [glyph, ui.selectNextLetter])\n\n  if (!glyph || !ui.selectNextLetter) return null\n\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <Typography>{`\"${glyph.letter}\" - \"${ui.selectNextLetter}\" Kerning`}</Typography>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <GridInput before='Amount:' after='px'>\n          <Input\n            value={kerning + offset}\n            fullWidth\n            type='number'\n            onChange={handleChange}\n          />\n        </GridInput>\n      </Box>\n    </>\n  )\n}\n\nexport default observer(GlobalMetric)\n","import React, { FunctionComponent } from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport PreviewCanvas from './PreviewCanvas'\nimport PreviewText from './PreviewText'\nimport PreviewMertic from './PreviewMertic'\nimport PreviewKerning from './PreviewKerning'\n\nconst Preview: FunctionComponent<unknown> = () => {\n  return (\n    <>\n      <PreviewCanvas />\n      <Grid container alignItems='flex-start'>\n        <Grid item xs={4}>\n          <PreviewText />\n        </Grid>\n        <Grid item xs={4}>\n          <PreviewMertic />\n        </Grid>\n        <Grid item xs={4}>\n          <PreviewKerning />\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nexport default Preview\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline'\n\nimport { useProjectUi } from 'src/store/hooks'\n\nimport PackView from '../PackView'\nimport Preview from '../Preview'\n\nconst useStyles = makeStyles(({ palette }) =>\n  createStyles({\n    '@keyframes slideDown': {\n      from: { opacity: 0, transform: 'translate(0, -100%)' },\n      to: { opacity: 1, transform: 'translate(0, 0)' },\n    },\n    root: {\n      backgroundColor: palette.background.default,\n      position: 'relative',\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'column',\n    },\n    toast: {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      width: '100%',\n      zIndex: 10,\n      background: palette.error.main,\n      textAlign: 'center',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      fontSize: 14,\n      padding: 2,\n      animationName: '$slideDown',\n      animationDuration: '300ms',\n      pointerEvents: 'none',\n    },\n    icon: {\n      marginRight: 5,\n    },\n  }),\n)\n\nconst MainView: FunctionComponent<unknown> = () => {\n  const { showPreview, packFailed } = useProjectUi()\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      {packFailed ? (\n        <div className={classes.toast}>\n          <ErrorOutlineIcon className={classes.icon} fontSize='inherit' />\n          Packaging failed, try to increase the size of the package please.\n        </div>\n      ) : null}\n      {showPreview ? <Preview /> : <PackView />}\n    </div>\n  )\n}\n\nexport default observer(MainView)\n","import React, { useRef, useState, useEffect, FunctionComponent } from 'react'\n// import { observer } from 'mobx-react'\nimport clsx from 'clsx'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n// import Input from '@material-ui/core/Input'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst useStyles = makeStyles(({ palette }) =>\n  createStyles({\n    root: {\n      minHeight: 'auto',\n      minWidth: '80px',\n      maxWidth: 'none',\n      height: '34px',\n      lineHeight: '16px',\n      padding: '10px',\n      color: 'rgba(255,255,255,0.5)',\n      backgroundColor: 'rgb(45, 45, 45)',\n      borderRight: `1px solid ${palette.background.default}`,\n      textTransform: 'none',\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      cursor: 'pointer',\n      '&:hover': {\n        '& $icon': {\n          opacity: 1,\n        },\n      },\n      '&:last-child': {\n        borderRight: '0 none',\n      },\n    },\n    selected: {\n      background: palette.background.default,\n      color: '#fff',\n      '& $icon': {\n        opacity: 1,\n      },\n    },\n    name: {\n      whiteSpace: 'nowrap',\n      position: 'relative',\n      background: 'inherit',\n    },\n    editor: {\n      color: 'rgba(0,0,0,0)',\n    },\n    input: {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      left: 0,\n      fontSize: 'inherit',\n      padding: 0,\n      border: '0 none',\n      appearance: 'none',\n      color: 'inherit',\n      background: 'inherit',\n    },\n    icon: {\n      width: '16px',\n      height: '16px',\n      marginLeft: '10px',\n      opacity: 0,\n    },\n  }),\n)\n\ninterface ProjectTabProps {\n  name: string\n  value: number\n  selected?: boolean\n  useRemove?: boolean\n  onRemove?: (\n    e: React.MouseEvent<SVGSVGElement, MouseEvent>,\n    value: number,\n  ) => void\n  onChange?: (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    value: number,\n  ) => void\n  onClick?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\n  onRename?: (name: string, value: number) => void\n}\n\nconst ProjectTab: FunctionComponent<ProjectTabProps> = (\n  props: ProjectTabProps,\n) => {\n  const {\n    name,\n    useRemove,\n    selected,\n    value,\n    onChange,\n    onClick,\n    onRemove,\n    onRename,\n  } = props\n  const [editor, setEditor] = useState(false)\n  const [sname, setSName] = useState(name)\n  const editorRef = useRef<HTMLInputElement>(null)\n  const classes = useStyles()\n\n  const handleRemove = (e: React.MouseEvent<SVGSVGElement, MouseEvent>) => {\n    e.stopPropagation()\n    if (onRemove) onRemove(e, value)\n  }\n\n  const handleSelect = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n  ): void => {\n    e.stopPropagation()\n    if (onChange) onChange(e, value)\n    if (onClick) onClick(e)\n  }\n\n  const handleDoubleClick = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n  ): void => {\n    e.stopPropagation()\n    if (editorRef.current) {\n      setEditor(true)\n    }\n  }\n\n  const handleEditorEnd = (e: { preventDefault?(): void }) => {\n    if (e.preventDefault) e.preventDefault()\n    setEditor(false)\n  }\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.keyCode === 13 && editorRef.current) {\n      editorRef.current.blur()\n    }\n  }\n\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSName(e.target.value)\n  }\n\n  useEffect(() => {\n    if (editor && editorRef.current) editorRef.current.focus()\n    if (!editor && onRename) onRename(sname, value)\n  }, [editor, onRename, sname, value])\n\n  useEffect(() => {\n    setSName(name)\n  }, [name])\n\n  return (\n    <div\n      aria-hidden\n      className={clsx(classes.root, {\n        [classes.selected]: selected,\n      })}\n      onClick={handleSelect}\n      onDoubleClick={handleDoubleClick}\n      title='Double click rename'\n    >\n      <span aria-hidden className={classes.name}>\n        {editor ? sname : name}\n        <input\n          className={classes.input}\n          hidden={!editor}\n          ref={editorRef}\n          value={editor ? sname : name}\n          type='text'\n          onKeyDown={handleKeyDown}\n          onBlur={handleEditorEnd}\n          //   onInput={handleInput}\n          onChange={handleInput}\n        />\n      </span>\n      {useRemove ? (\n        <CloseIcon\n          className={classes.icon}\n          onClick={handleRemove}\n          onDoubleClick={handleRemove}\n        />\n      ) : null}\n    </div>\n  )\n}\n\nexport default ProjectTab\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport Tabs from '@material-ui/core/Tabs'\nimport { useWorkspace } from 'src/store/hooks'\nimport ProjectTab from './ProjectTab'\n\nconst useStyles = makeStyles(({ palette, shadows }) =>\n  createStyles({\n    root: {\n      minHeight: 'auto',\n      width: '100%',\n      boxShadow: shadows[2],\n      background: palette.background.sidebar,\n      position: 'relative',\n      zIndex: 1,\n    },\n  }),\n)\n\nconst ProjectTabs: FunctionComponent<unknown> = () => {\n  const classes = useStyles()\n  const workSpace = useWorkspace()\n  const {\n    addProject,\n    selectProject,\n    removeProject,\n    setProjectName,\n    namedList,\n    activeId,\n  } = workSpace\n\n  const handleChange = (e: unknown, value: number): void => {\n    selectProject(value)\n  }\n\n  const handleRemove = (\n    e: React.MouseEvent<SVGSVGElement, MouseEvent>,\n    value?: number,\n  ): void => {\n    if (typeof value !== 'undefined') removeProject(value)\n  }\n\n  const handleDoubleClick = (): void => {\n    addProject()\n  }\n\n  return (\n    <Tabs\n      classes={classes}\n      value={activeId}\n      onChange={handleChange}\n      indicatorColor='primary'\n      textColor='primary'\n      variant='scrollable'\n      scrollButtons='off'\n      selectionFollowsFocus\n      TabIndicatorProps={{ hidden: true }}\n      onDoubleClick={handleDoubleClick}\n    >\n      {namedList.map((item) => {\n        return (\n          <ProjectTab\n            useRemove={namedList.length > 1}\n            name={item.name}\n            value={item.id}\n            key={item.id}\n            onRename={setProjectName}\n            onRemove={handleRemove}\n          />\n        )\n      })}\n    </Tabs>\n  )\n}\n\nexport default observer(ProjectTabs)\n","import React, { FunctionComponent, useState, useRef } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Paper from '@material-ui/core/Paper'\nimport Button from '@material-ui/core/Button'\nimport Popper from '@material-ui/core/Popper'\nimport Slider from '@material-ui/core/Slider'\nimport Switch from '@material-ui/core/Switch'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport MenuList from '@material-ui/core/MenuList'\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener'\n\nimport { useProjectUi } from 'src/store/hooks'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    slider: {\n      width: '200px',\n    },\n  }),\n)\n\nconst ControlerBar: FunctionComponent<unknown> = () => {\n  const {\n    scale,\n    setTransform,\n    previewScale,\n    setPreviewTransform,\n    showPreview,\n    setShowPreview,\n  } = useProjectUi()\n  const classes = useStyles()\n  const [open, setOpen] = useState(false)\n  const anchorRef = useRef<HTMLButtonElement>(null)\n  const [list] = useState([0.25, 0.5, 0.75, 1, 1.25, 1.5, 5, 10])\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen)\n  }\n\n  const handleClose = (event: React.MouseEvent<EventTarget>) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return\n    }\n\n    setOpen(false)\n  }\n\n  const handleChange = (event: unknown, val: number | number[]) => {\n    if (showPreview) {\n      setPreviewTransform({ previewScale: val as number })\n    } else {\n      setTransform({ scale: val as number })\n    }\n  }\n\n  const handleSelect = (val: number) => {\n    // setTransform({ scale: val })\n    handleChange(null, val)\n    setOpen(false)\n  }\n\n  return (\n    <Box paddingX={2} display='flex' justifyContent='space-between'>\n      <Box component='label' display='flex' alignItems='center'>\n        Preview\n        <Switch\n          size='small'\n          color='primary'\n          checked={showPreview}\n          onChange={(e) => setShowPreview(e.target.checked)}\n        />\n      </Box>\n      <Slider\n        className={classes.slider}\n        value={showPreview ? previewScale : scale}\n        min={0.01}\n        max={10}\n        step={0.01}\n        onChange={handleChange}\n      />\n      <Button ref={anchorRef} onClick={handleToggle}>\n        {`${Math.round((showPreview ? previewScale : scale) * 1000) / 10}%`}\n      </Button>\n      <Popper open={open} anchorEl={anchorRef.current} placement='top-end'>\n        <Paper>\n          <ClickAwayListener onClickAway={handleClose}>\n            <MenuList>\n              {list.map((n) => (\n                <MenuItem key={n} onClick={() => handleSelect(n)}>\n                  {`${n * 100}%`}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </ClickAwayListener>\n        </Paper>\n      </Popper>\n    </Box>\n  )\n}\n\nexport default observer(ControlerBar)\n","import React, { useState, FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\n\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport InputBase from '@material-ui/core/InputBase'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nimport { GlyphImage } from 'src/store'\nimport { useProject } from 'src/store/hooks'\n\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      width: theme.spacing(24),\n      height: theme.spacing(24),\n      margin: theme.spacing(2),\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      position: 'relative',\n    },\n    image: {\n      maxWidth: '100%',\n      maxHeight: '100%',\n      pointerEvents: 'none',\n    },\n    actions: {\n      width: '100%',\n      height: '100%',\n      position: 'absolute',\n      left: 0,\n      top: 0,\n    },\n    inputLabel: {\n      width: '100%',\n      height: '100%',\n      '& input': {\n        textAlign: 'center',\n      },\n    },\n  }),\n)\n\ninterface ImageGlyphProps {\n  glyph: GlyphImage\n  selected?: boolean\n}\n\nconst ImageGlyph: FunctionComponent<ImageGlyphProps> = (\n  props: ImageGlyphProps,\n) => {\n  const classes = useStyles()\n  const { removeImage } = useProject()\n  const [isIME, setIsIME] = useState(false)\n  const { glyph } = props\n  const [inputValue, setInputValue] = useState(glyph.letter)\n  const { changeSelect, selected, setGlyph } = glyph\n\n  const handleChangeGlyph = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const { value } = e.target\n    if (!isIME) {\n      setGlyph(value)\n    } else {\n      setInputValue(value.slice(0, 1))\n      setGlyph(value.slice(0, 1))\n    }\n  }\n\n  const handleCompositionEnd = (): void => {\n    setIsIME(false)\n    setInputValue((iv) => iv.slice(0, 1))\n    setGlyph(inputValue.slice(0, 1))\n  }\n\n  return (\n    <Paper variant='outlined' className={classes.root}>\n      <img className={classes.image} src={glyph.src} alt={glyph.fileName} />\n      <Grid container direction='column' className={classes.actions}>\n        <Grid item container justify='space-between' alignItems='center'>\n          <Checkbox\n            checked={selected}\n            size='small'\n            color='default'\n            onChange={(e) => changeSelect(e.target.checked)}\n          />\n          <IconButton\n            color='primary'\n            size='small'\n            onClick={() => removeImage(glyph)}\n          >\n            <DeleteIcon fontSize='small' />\n          </IconButton>\n        </Grid>\n        <Grid\n          item\n          xs\n          component='label'\n          className={classes.inputLabel}\n          container\n          alignItems='flex-end'\n        >\n          <InputBase\n            fullWidth\n            value={isIME ? inputValue : glyph.letter}\n            onFocus={(e) => e.target.select()}\n            onInput={handleChangeGlyph}\n            onCompositionEnd={handleCompositionEnd}\n            onCompositionStart={() => setIsIME(true)}\n          />\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n}\n\nexport default observer(ImageGlyph)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles, createStyles } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\n\nimport { useProject } from 'src/store/hooks'\n\nimport ImageGlyph from './ImageGlyph'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      width: '100%',\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n  }),\n)\n\nconst ImageGlyphList: FunctionComponent<unknown> = () => {\n  const { glyphImages } = useProject()\n  const classes = useStyles()\n  return (\n    <Box className={classes.root}>\n      {glyphImages.map((glyph) => {\n        return <ImageGlyph glyph={glyph} key={glyph.src} />\n      })}\n    </Box>\n  )\n}\n\nexport default observer(ImageGlyphList)\n","import React, { FunctionComponent, useState, useEffect } from 'react'\nimport { observer } from 'mobx-react'\nimport clsx from 'clsx'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport Box from '@material-ui/core/Box'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport Accordion from '@material-ui/core/Accordion'\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\nimport Typography from '@material-ui/core/Typography'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport FullscreenIcon from '@material-ui/icons/Fullscreen'\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit'\nimport IconButton from '@material-ui/core/IconButton'\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary'\n\nimport { FileInfo } from 'src/store'\nimport { useProject } from 'src/store/hooks'\n\nimport readFile from 'src/utils/readFile'\n\nimport ImageGlyphList from './ImageGlyphList'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      display: 'flex',\n      position: 'relative',\n    },\n    fixed: {\n      position: 'fixed',\n      left: 0,\n      top: 0,\n      zIndex: 999999,\n      width: '100%',\n      height: '100%',\n      '& $panel': {\n        maxHeight: 'none',\n      },\n    },\n    panel: {\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      maxHeight: '305px',\n    },\n    continer: {\n      flex: 1,\n      overflow: 'hidden',\n      overflowY: 'auto',\n    },\n    listWrap: {\n      minHeight: '224px',\n      height: '100%',\n      width: '100%',\n      overflow: 'hidden',\n      overflowY: 'auto',\n    },\n  }),\n)\n\nconst LayerBox: FunctionComponent<unknown> = () => {\n  const classes = useStyles()\n  const { addImages } = useProject()\n  const [isFullscreen, setFullscreen] = useState(false)\n  const [open, setOpen] = useState(false)\n  // const [isDroping, setIsDroping] = useState(false)\n\n  const handleLoadFile = (files: FileList) => {\n    const list = Array.from(files).filter((file) => /^image\\//.test(file.type))\n    if (!list.length) return\n    Promise.all(\n      list.map((file) =>\n        readFile(file).then((buffer) => {\n          if (!buffer || typeof buffer === 'string') return null\n\n          const matched = file.name.match(/(\\S)\\.[a-zA-Z0-9]+$/i)\n          return {\n            letter: matched ? matched[1] : '',\n            fileName: file.name,\n            fileType: file.type,\n            buffer,\n          }\n        }),\n      ),\n    ).then((fileList) => {\n      addImages(fileList.filter((f) => f) as FileInfo[])\n    })\n  }\n\n  const handleDrop = (e: React.DragEvent<HTMLElement>): void => {\n    e.preventDefault()\n    handleLoadFile(e.dataTransfer.files)\n  }\n\n  const hanfleToggleFullScreen = (\n    e?: React.MouseEvent<HTMLDivElement, MouseEvent>,\n  ) => {\n    if (e) e.stopPropagation()\n    setFullscreen((f) => !f)\n  }\n\n  const handleToggleOpen = () => {\n    setOpen((o) => isFullscreen || !o)\n  }\n  const handleFilesChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    if (!e.target.files) return\n    const { files } = e.target\n    handleLoadFile(files)\n  }\n\n  const handleKeyDown = (e: KeyboardEvent) => {\n    const target = e.target as HTMLElement\n    if (e.keyCode === 27) {\n      if (!target || target.tagName !== 'INPUT') setFullscreen(false)\n      else if (target) target.blur()\n    }\n  }\n\n  useEffect(() => {\n    if (isFullscreen) window.addEventListener('keydown', handleKeyDown)\n    else window.removeEventListener('keydown', handleKeyDown)\n    return () => window.removeEventListener('keydown', handleKeyDown)\n  }, [isFullscreen])\n\n  return (\n    <Box\n      onDragEnter={(e) => e.preventDefault()}\n      onDragOver={(e) => e.preventDefault()}\n      // onDragLeave={handleDrop}\n      onDrop={handleDrop}\n      className={clsx(classes.root, {\n        [classes.fixed]: isFullscreen,\n      })}\n    >\n      <Accordion\n        className={classes.panel}\n        expanded={isFullscreen || open}\n        onChange={handleToggleOpen}\n        TransitionProps={{\n          style:\n            isFullscreen || open\n              ? { flex: 1, overflow: 'hidden', overflowY: 'auto' }\n              : {},\n        }}\n      >\n        <AccordionSummary\n          expandIcon={isFullscreen ? undefined : <ExpandMoreIcon />}\n        >\n          <Grid container alignItems='center'>\n            <Grid item>\n              <Typography>Image Glyph List</Typography>\n            </Grid>\n            <Grid item xs container justify='center'>\n              <Button\n                component='label'\n                color='primary'\n                size='small'\n                variant='contained'\n                startIcon={<PhotoLibraryIcon />}\n              >\n                Select Images\n                <input\n                  hidden\n                  type='file'\n                  multiple\n                  accept='image/*'\n                  onChange={handleFilesChange}\n                />\n              </Button>\n            </Grid>\n            <Grid item>\n              <IconButton component='div' onClick={hanfleToggleFullScreen}>\n                {isFullscreen ? <FullscreenExitIcon /> : <FullscreenIcon />}\n              </IconButton>\n            </Grid>\n          </Grid>\n        </AccordionSummary>\n        <AccordionDetails className={classes.continer}>\n          <Box className={classes.listWrap}>\n            <ImageGlyphList />\n          </Box>\n        </AccordionDetails>\n      </Accordion>\n    </Box>\n  )\n}\nexport default observer(LayerBox)\n","import React, { FunctionComponent } from 'react'\nimport Box from '@material-ui/core/Box'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport MainView from './modules/MainView'\nimport ProjectTabs from './modules/ProjectTabs'\nimport ControlerBar from './modules/ControlerBar'\nimport ImageGlyphList from './modules/ImageGlyphList'\n\nconst useStyles = makeStyles(({ palette, shadows }) =>\n  createStyles({\n    root: {\n      position: 'relative',\n      flex: 1,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      width: 0,\n    },\n    tabsRoot: {\n      minHeight: 'auto',\n      width: '100%',\n      boxShadow: shadows[2],\n      background: palette.background.sidebar,\n      position: 'relative',\n      zIndex: 1,\n    },\n    tabRoot: {\n      minHeight: 'auto',\n      minWidth: 'auto',\n      maxWidth: 'none',\n      height: '34px',\n      color: 'rgba(255,255,255,0.5)',\n      borderRight: `1px solid ${palette.background.default}`,\n      textTransform: 'none',\n    },\n    tabSelected: {\n      background: palette.background.default,\n    },\n    tabWrapper: {\n      color: '#FFF',\n    },\n  }),\n)\n\nconst WorkSpace: FunctionComponent<unknown> = () => {\n  const classes = useStyles()\n\n  return (\n    <Box className={classes.root}>\n      <ProjectTabs />\n      <MainView />\n      <ControlerBar />\n      <ImageGlyphList />\n    </Box>\n  )\n}\n\nexport default WorkSpace\n","import React from 'react'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    close: {\n      padding: theme.spacing(0.5),\n    },\n  }),\n)\n\nexport interface SnackbarMessage {\n  message: string\n  key: number\n}\n\nexport interface State {\n  open: boolean\n  snackPack: SnackbarMessage[]\n  messageInfo?: SnackbarMessage\n}\n\nexport default function ConsecutiveSnackbars() {\n  const classes = useStyles()\n  const [open, setOpen] = React.useState(false)\n\n  const handleClose = (\n    event: React.SyntheticEvent | MouseEvent,\n    reason?: string,\n  ) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setOpen(false)\n  }\n\n  const updateVersion = React.useCallback((event) => {\n    const { detail } = event\n    setOpen(!!detail)\n  }, [])\n\n  const handleReload = () => {\n    window.location.reload()\n  }\n\n  React.useEffect(() => {\n    window.addEventListener('updateVerion', updateVersion, false)\n    return () =>\n      window.removeEventListener('updateVerion', updateVersion, false)\n  }, [updateVersion])\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      open={open}\n      onClose={handleClose}\n      message='New version is available.'\n      action={\n        <React.Fragment>\n          <Button color='secondary' size='small' onClick={handleReload}>\n            Reload\n          </Button>\n          <IconButton\n            aria-label='close'\n            color='inherit'\n            className={classes.close}\n            onClick={handleClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        </React.Fragment>\n      }\n    />\n  )\n}\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Box from '@material-ui/core/Box'\nimport Backdrop from '@material-ui/core/Backdrop'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport useStores from 'src/store/hooks'\n\nimport LeftBar from '../LeftBar'\nimport TitleBar from '../TitleBar'\nimport RightBar from '../RightBar'\nimport WorkSpace from '../WorkSpace'\nimport UpdateToast from './UpdateToast'\n\nconst useStyles = makeStyles(({ zIndex }) =>\n  createStyles({\n    root: {\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    content: {\n      display: 'flex',\n      flex: 1,\n      position: 'relative',\n      height: '0',\n      overflow: 'hidden',\n    },\n    loadingBackdrop: {\n      zIndex: zIndex.drawer + 1,\n      color: '#fff',\n    },\n  }),\n)\n\nconst Wrap: FunctionComponent<unknown> = () => {\n  const classes = useStyles()\n  const { ui } = useStores()\n\n  return (\n    <Box className={classes.root}>\n      <TitleBar />\n      <UpdateToast />\n      <Box className={classes.content}>\n        <LeftBar />\n        <WorkSpace />\n        <RightBar />\n      </Box>\n      <Backdrop className={classes.loadingBackdrop} open={!!ui.globalLoader}>\n        <CircularProgress color='inherit' />\n      </Backdrop>\n    </Box>\n  )\n}\n\nexport default observer(Wrap)\n","import React from 'react'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { Provider } from 'mobx-react'\n\nimport createStore from 'src/store'\nimport theme from './theme'\n\nimport Wrap from './layout/Wrap'\n\nfunction App(): JSX.Element {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Provider {...createStore()}>\n        <Wrap />\n      </Provider>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './app/App'\n\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register({\n  onUpdate(registration) {\n    const worker = registration.waiting\n    if (!worker) return\n\n    const channel = new MessageChannel()\n\n    channel.port1.onmessage = () => {\n      window.dispatchEvent(new CustomEvent('updateVerion', { detail: worker }))\n    }\n\n    worker.postMessage({ type: 'SKIP_WAITING' }, [channel.port2])\n  },\n})\n"],"sourceRoot":""}