{"version":3,"sources":["workers/RectanglePacker.worker.ts","utils/getTextBaselines.ts","store/ui.ts","utils/is.ts","utils/use.ts","store/base/ui.ts","utils/fontStyleStringify.ts","utils/updateFontFace.ts","store/base/gradient.ts","store/base/font.ts","store/base/patternTexture.ts","store/base/fill.ts","utils/base64ToArrayBuffer.ts","utils/getTextSize.ts","store/base/stroke.ts","store/base/shadow.ts","store/base/style.ts","store/base/layout.ts","store/base/metric.ts","utils/trimImageData.ts","utils/getPointOnCircle.ts","utils/getCanvasStyle.ts","utils/getGlyphInfo.ts","store/base/glyphBase.ts","store/base/glyphFont.ts","store/base/glyphImage.ts","utils/getTrimImageInfo.ts","store/project.ts","store/workspace.ts","store/index.ts","app/theme/props.ts","app/theme/overrides.ts","app/theme/index.ts","store/hooks.ts","utils/readFile.ts","app/layout/LeftBar/modules/Font/FontFamily.tsx","app/components/GridInput/GridInput.tsx","app/layout/LeftBar/modules/Font/FontSize.tsx","app/layout/LeftBar/modules/Font/LineHeight.tsx","app/layout/LeftBar/modules/Font/Font.tsx","app/layout/LeftBar/modules/Glyphs/Glyphs.tsx","app/layout/LeftBar/modules/PackConfig/Padding.tsx","app/layout/LeftBar/modules/PackConfig/Spacing.tsx","app/layout/LeftBar/modules/PackConfig/PackConfig.tsx","app/layout/common/FormAdjustMetric/FormAdjustMetric.tsx","app/layout/LeftBar/modules/GlobalMetric/GlobalMetric.tsx","app/layout/LeftBar/LeftBar.tsx","utils/formatStr.ts","file/getXmlString.ts","file/getLuaString.ts","file/getTextString.ts","file/toOutputInfo.ts","proto/project.js","file/prefix.ts","file/decodeProject.ts","app/layout/TitleBar/ExportButton.tsx","app/layout/TitleBar/TitleBar.tsx","file/saveProject.ts","file/outputFile.ts","app/components/WrappedSketchPicker/WrappedSketchPicker.tsx","app/components/ColorInput/ColorInput.tsx","app/layout/common/FormColor/FormColor.tsx","app/components/GradientPicker/ColorStop.tsx","app/components/GradientPicker/ColorStopsHolder.tsx","app/components/Palette/Palette.tsx","app/components/GradientPicker/GradientBuilder.tsx","app/components/AnglePicker/AnglePicker.tsx","app/layout/common/FormAngle/FormAngle.tsx","app/layout/common/FormGradient/FormGradient.tsx","app/layout/common/FormImage/FileSelector.tsx","app/layout/common/FormImage/FormImage.tsx","app/layout/common/FormFill/FormFill.tsx","app/layout/RightBar/modules/Fill/Fill.tsx","app/layout/RightBar/modules/Stroke/Stroke.tsx","app/layout/RightBar/modules/Shadow/Shadow.tsx","app/layout/RightBar/modules/BackgroundColor/BackgroundColor.tsx","app/layout/RightBar/RightBar.tsx","app/hooks/useWheel.ts","app/hooks/useSpaceDrag.ts","app/layout/WorkSpace/modules/PackCanvas/PackCanvas.tsx","app/layout/WorkSpace/modules/Preview/LetterList.tsx","app/layout/WorkSpace/modules/Preview/PreviewCanvas.tsx","app/layout/WorkSpace/modules/Preview/getPreviewCanvas.ts","app/layout/WorkSpace/modules/Preview/PreviewText.tsx","app/layout/WorkSpace/modules/Preview/PreviewMertic.tsx","app/layout/WorkSpace/modules/Preview/PreviewKerning.tsx","app/layout/WorkSpace/modules/Preview/Preview.tsx","app/layout/WorkSpace/modules/MainView/MainView.tsx","app/layout/WorkSpace/modules/ProjectTabs/ProjectTab.tsx","app/layout/WorkSpace/modules/ProjectTabs/ProjectTabs.tsx","app/layout/WorkSpace/modules/ControlerBar/ControlerBar.tsx","app/layout/WorkSpace/modules/ImageGlyphList/ImageGlyph.tsx","app/layout/WorkSpace/modules/ImageGlyphList/ImageGlyphList.tsx","app/layout/WorkSpace/modules/ImageGlyphList/LayerBox.tsx","app/layout/WorkSpace/WorkSpace.tsx","app/layout/Wrap/Wrap.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Worker","canvas","Ui","action","bound","num","this","globalLoader","observable","n","Number","isNaN","a","b","is","ui","previewText","offsetX","Math","min","max","width","offsetY","height","scale","trans","use","reOffset","text","showPreview","previewScale","previewOffsetX","previewOffsetY","letter","next","selectLetter","selectNextLetter","defaultConfig","fontSize","fontFamily","fontStyleStringify","fontStyleConfig","config","arr","fontStyle","push","fontVariant","fontWeight","lineHeight","join","fontTargeCache","loadDiv","GradientType","Font","ref","font","size","byteLength","setFont","updateBaseines","middle","hanging","top","alphabetic","ideographic","bottom","bls","styleConig","document","createElement","ctx","getContext","Error","textBaseline","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","getTextBaselines","family","buffer","opentype","parse","lowMemory","e","Promise","resolve","names","fontName","postScriptName","Object","keys","url","URL","createObjectURL","Blob","name","cssNode","createTextNode","replaceChild","childNodes","textNode","head","appendChild","style","position","left","opacity","pointerEvents","body","setTimeout","updateFontFace","then","runInAction","computed","Gradient","shallow","gradient","type","angle","palette","forEach","item","id","nextId","addColor","offset","color","map","ids","length","FillType","PatternTexture","pt","repetition","setImage","src","img","Image","onload","image","base64","binaryString","atob","len","bytes","Uint8Array","i","charCodeAt","base64ToArrayBuffer","Fill","fill","patternTexture","Stroke","stroke","lineCap","lineJoin","Shadow","shadow","blur","Style","useShadow","useStroke","bgColor","Layout","layout","padding","spacing","power","Metric","metric","xAdvance","xOffset","yOffset","trimImageData","imageData","threshold","data","topTrim","bottomTrim","leftTrim","rightTrim","topStatus","bottomStatus","leftStatus","rightStatus","h","ceil","w","j","trimOffsetLeft","trimOffsetTop","getPointOnCircle","x","y","r","cos","PI","sin","getCanvasStyle","cx","cy","startPoint","endPoint","createLinearGradient","createRadialGradient","addColorStop","createPattern","naturalWidth","naturalHeight","textureCtx","drawImage","getGlyphInfo","trimInfo","textAlign","testA","actualBoundingBoxLeft","parseInt","fontWidth","fontHeight","trimOffsetRight","trimOffsetBottom","testB","actualBoundingBoxRight","getTextSize","lineWidth","addX","addY","styleX","styleY","abs","strokeStyle","strokeText","fillStyle","fillText","cvs","newCtx","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","imgData","getImageData","styleTrimInfo","putImageData","GlyphBase","glyph","adjustMetric","kerning","set","Map","GlyphFont","galyphFont","textStyle","setGlyphInfo","glyphInfo","source","GlyphImage","glyphImage","fileName","fileType","getTrimImageInfo","isSelect","selected","Project","project","worker","packStart","packTimer","idleId","Date","now","globalAdjustMetric","glyphs","value","key","glyphImages","add","has","addGlyphs","addAutoRun","pack","terminate","isPacking","RectanglePacker","packList","rectangleList","sort","addEventListener","messageEvent","imgList","Array","from","maxWidth","maxHeight","rectangle","find","gi","get","setSize","postMessage","filter","cancel","tasks","runTasks","request","deadline","tr","timeRemaining","start","shift","window","clearTimeout","isName","obj","deepObserve","throttlePack","change","packStyle","str","oldText","replace","currentList","Set","split","oldList","diffList","concat","t","includes","delete","list","all","initImage","packCanvas","glyphList","isUnEmpty","Workspace","activeId","projectList","namedList","p","named","match","setName","configure","enforceActions","computedRequiresReaction","props","MuiButton","MuiButtonBase","disableRipple","MuiFilledInput","margin","MuiFormControl","MuiFormHelperText","MuiIconButton","MuiInputBase","MuiInputLabel","MuiListItem","dense","MuiOutlinedInput","MuiFab","MuiTable","MuiTextField","MuiToolbar","variant","overrides","MuiCssBaseline","html","marginLeft","background","input","theme","createMuiTheme","primary","main","secondary","paper","default","activityBar","titleBar","sidebar","common","black","white","hover","bgPixel","backgroundColor","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","typography","transitions","create","shape","borderRadius","responsiveFontSizes","useStores","useContext","MobXProviderContext","useWorkspace","workspace","useLayout","currentProject","useProject","useStyle","useFont","useProjectUi","readFile","file","arrayBuffer","reader","FileReader","readAsArrayBuffer","target","result","observer","useState","loading","setLoading","Button","component","fullWidth","startIcon","CircularProgress","disabled","hidden","onChange","event","files","arrBuf","ArrayBuffer","catch","alert","message","accept","GridInput","before","children","after","childrenWidth","Grid","container","wrap","justify","alignItems","xs","Typography","noWrap","align","Input","inputProps","setLineHeight","step","Box","paddingX","marginY","setText","isIME","setIsIME","inputText","setInputText","TextField","multiline","rows","spellCheck","onCompositionStart","onCompositionEnd","setPadding","setSpacing","PackConfig","FormAdjustMetric","setXAdvance","setXOffset","setYOffset","getHandle","handleSet","useStyles","makeStyles","createStyles","root","overflow","LeftBar","classes","bgcolor","display","flexDirection","className","boxShadow","flex","Divider","formatStr","matchs","returns","storeToXml","bmfont","info","pages","chars","kernings","parser","DOMParser","xmlDOM","implementation","createDocument","infoDoc","parseFromString","documentElement","commonDoc","pagesDoc","charsDoc","char","charDoc","count","kerningsDoc","kerningDoc","XMLSerializer","serializeToString","getLuaString","charset","charsCount","kerningsCounts","getTextString","toOutputInfo","fontScale","unitsPerEm","face","bold","italic","unicode","stretchH","smooth","aa","base","scaleW","scaleH","packed","xoffset","yoffset","xadvance","page","chnl","amount","round","getKerningValue","charToGlyphIndex","first","second","$Reader","$protobuf","$Writer","$util","$root","prefix","properties","prototype","encode","writer","hasOwnProperty","call","uint32","sint32","encodeDelimited","ldelim","decode","end","undefined","pos","tag","skipType","decodeDelimited","verify","isInteger","fromObject","object","toObject","options","defaults","toJSON","constructor","toJSONOptions","GradientColor","int32","string","isString","String","emptyArray","float","fork","isArray","error","TypeError","arrays","json","isFinite","newBuffer","double","slice","emptyObject","end2","tag2","isObject","keys2","objects","bool","Boolean","Long","fromBits","int64","low","high","fromValue","unsigned","LongBits","toNumber","long","longs","toString","s","decodeProject","perfixBuffer","u8","filePrefix","isSbf","protoProject","imgKerning","k","gl","glyphKerning","toOriginBuffer","proto","ExportButton","onSave","open","setOpen","val","setVal","ext","handleClickOpen","handleClose","useEffect","hotkeys","unbind","title","onClick","Dialog","onClose","DialogTitle","DialogContent","dividers","Select","displayEmpty","MenuItem","toUpperCase","DialogActions","autoFocus","zIndex","appBar","appName","marginRight","appNameSup","btn","textTransform","toast","setToast","worckSpace","labelRef","useRef","addProject","handleNewProject","useCallback","preventDefault","handleSaveProject","projectBuffer","finish","saveAs","saveProject","toJS","handleSaveBitmapFont","zip","JSZip","getXmlString","toBlob","blob","generateAsync","content","outputFile","handleOpenProject","current","click","err","IconButton","href","Snackbar","anchorOrigin","vertical","horizontal","picker","borderColor","divider","border","WrappedSketchPicker","anchorEl","placement","pickerStyle","useTheme","shadows","alpha","usePickerStyle","Popper","styles","rgb","g","swatch","cursor","ColorInput","ClickAwayListener","mouseEvent","onClickAway","aria-hidden","FormColor","borderWidth","isActive","borderStyle","dark","activeColor","grey","ColorStop","divProps","clsx","ColorStopsHolder","onAdd","onUpdate","onSelect","setWidth","setStartPoint","isDragging","setIsDragging","rootRef","clientWidth","handleMouseMove","buttons","idx","findIndex","paletteItem","newPalette","clientY","clientX","handleMouseUp","stopPropagation","removeEventListener","onMouseDown","getBoundingClientRect","handleMouseDown","svg","verticalAlign","Palette","random","substr","sortedPalette","x1","y1","x2","y2","stopColor","GradientBuilder","rootEl","oldPalette","setOldPalette","setActiveId","setActiveColor","isAdd","setIsAdd","newIds","oldIds","diff","handleUpdate","isDelete","updateItem","right","offsetSpace","leftColor","Color","rightColor","red","green","blue","React","cloneElement","point","marginTop","transformOrigin","transform","AnglePicker","bounds","radians","atan2","FormAngle","updatePalette","setAngle","setType","RadioGroup","row","flexWrap","FormControlLabel","LINEAR","control","Radio","label","RADIAL","justifyContent","FileSelector","multiple","alt","FormImage","setRepetition","setScale","setColor","SOLID","GRADIENT","IMAGE","onChangeImage","onChangeScale","setUseStroke","setLineJoin","setLineCap","Switch","checked","ButtonGroup","setUseShadow","setOffsetX","setOffsetY","setBlur","setBgColor","RightBar","useWheel","onWheel","deps","callback","handleWheel","ctrlKey","altKey","deltaX","deltaY","d","deltaScale","dom","passive","useSpaceDrag","onMove","ks","ms","moveState","setMoveState","dragStatus","useMemo","moveCallback","handleKeyEvent","state","keyCode","handleMove","handleEnd","dragState","setCanvas","canvasRef","domRef","offsetInfo","ix","iy","os","ox","oy","setTransform","fillRect","outline","select","setSelectLetter","handleSelect","setData","minBaseLine","maxBaseLine","setPreviewTransform","lh","index","baseLine","basey","beginPath","moveTo","lineTo","setLineDash","lines","kerningMap","charMap","minX","minY","maxX","maxY","lk","kering","getPreviewCanvas","setPreviewText","setOffset","setGlyph","setKerning","disposer","steKerning","Preview","PreviewText","PreviewMertic","PreviewKerning","minHeight","minWidth","borderRight","whiteSpace","editor","appearance","icon","ProjectTab","useRemove","onRemove","onRename","setEditor","sname","setSName","editorRef","handleRemove","focus","onDoubleClick","onKeyDown","onBlur","workSpace","selectProject","removeProject","setProjectName","Tabs","indicatorColor","textColor","scrollButtons","selectionFollowsFocus","TabIndicatorProps","slider","setShowPreview","anchorRef","handleChange","Slider","prevOpen","Paper","contains","MenuList","actions","inputLabel","removeImage","inputValue","setInputValue","changeSelect","direction","Checkbox","InputBase","onFocus","onInput","iv","fixed","panel","continer","overflowY","listWrap","addImages","isFullscreen","setFullscreen","handleLoadFile","test","matched","fileList","f","handleKeyDown","tagName","onDragEnter","onDragOver","onDrop","dataTransfer","Accordion","expanded","o","TransitionProps","AccordionSummary","expandIcon","AccordionDetails","tabsRoot","tabRoot","tabSelected","tabWrapper","WorkSpace","loadingBackdrop","drawer","Backdrop","App","ThemeProvider","CssBaseline","isLocalhost","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onSuccess","ReactDOM","render","getElementById","process","origin","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.439d2119.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"static/js/RectanglePacker.654b1e16b59dc2cc713a.worker.js\");\n};","import fontStyleStringify from './fontStyleStringify'\n\ninterface StyleConig {\n  fontFamily: string\n  fontSize: number\n}\ninterface Baselines {\n  middle: number\n  hanging: number\n  top: number\n  alphabetic: number\n  ideographic: number\n  bottom: number\n}\n\nlet canvas: HTMLCanvasElement\n\nexport default function getTextBaselines(\n  text: string,\n  styleConig: StyleConig,\n): Baselines {\n  if (!canvas) canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n  if (!ctx) throw new Error('Get context 2d failed.')\n  const font = fontStyleStringify(styleConig)\n\n  // clear before settings\n  canvas.width = 1\n  canvas.height = 1\n\n  ctx.font = font\n\n  ctx.textBaseline = 'middle'\n  const middle = ctx.measureText(text)\n  ctx.textBaseline = 'hanging'\n  const hanging = ctx.measureText(text)\n  ctx.textBaseline = 'top'\n  const top = ctx.measureText(text)\n  ctx.textBaseline = 'alphabetic'\n  const alphabetic = ctx.measureText(text)\n  ctx.textBaseline = 'ideographic'\n  const ideographic = ctx.measureText(text)\n  ctx.textBaseline = 'bottom'\n  const bottom = ctx.measureText(text)\n\n  return {\n    middle: 0,\n    hanging: hanging.actualBoundingBoxAscent - middle.actualBoundingBoxAscent,\n    top: top.actualBoundingBoxAscent - middle.actualBoundingBoxAscent,\n    alphabetic:\n      middle.actualBoundingBoxDescent - alphabetic.actualBoundingBoxDescent,\n    ideographic:\n      middle.actualBoundingBoxDescent - ideographic.actualBoundingBoxDescent,\n    bottom: middle.actualBoundingBoxDescent - bottom.actualBoundingBoxDescent,\n  }\n}\n","import { action, observable } from 'mobx'\n\nclass Ui {\n  @observable globalLoader = 0\n\n  @action.bound showGlobalLoader(num = 1): void {\n    this.globalLoader += num\n  }\n\n  @action.bound hideGlobalLoader(num = -1): void {\n    this.globalLoader += num\n  }\n}\n\nexport default Ui\n","type UseType<T, U> = T extends U ? true : false\n\ntype IsNumber<T> = UseType<T, number>\n\nconst num = <T>(n: T): IsNumber<T> => {\n  return (typeof n === 'number' && !Number.isNaN(n)) as IsNumber<T>\n}\n\nexport default {\n  num,\n}\n","import is from './is'\n\nconst num = <T extends unknown>(a: T, b: number): number => {\n  if (is.num(a)) return a as number\n  return b\n}\n\nexport default {\n  num,\n}\n","import { action, observable } from 'mobx'\nimport use from 'src/utils/use'\n\nclass Ui {\n  @observable scale = 1\n\n  @observable offsetX = 0\n\n  @observable offsetY = 0\n\n  @observable width = 0\n\n  @observable height = 0\n\n  @observable previewText = 'Hello World!\\nHello Snow Bamboo!' // /\\r\\n|\\r|\\n/\n\n  @observable selectLetter = ''\n\n  @observable selectNextLetter = ''\n\n  @observable showPreview = false\n\n  @observable previewScale = 1\n\n  @observable previewOffsetX = 0\n\n  @observable previewOffsetY = 0\n\n  constructor(ui: Partial<Ui> = {}) {\n    if (ui.previewText) {\n      this.previewText = ui.previewText\n    }\n  }\n\n  reOffset() {\n    this.offsetX = Math.min(\n      Math.max(this.width / -2, this.offsetX),\n      this.width / 2,\n    )\n    this.offsetY = Math.min(\n      Math.max(this.height / -2, this.offsetY),\n      this.height / 2,\n    )\n    this.scale = Math.max(this.scale, 0.01)\n  }\n\n  @action.bound setTransform(trans: Partial<Ui>): void {\n    this.scale = use.num(trans.scale, this.scale)\n    this.offsetX = use.num(trans.offsetX, this.offsetX)\n    this.offsetY = use.num(trans.offsetY, this.offsetY)\n    this.reOffset()\n  }\n\n  @action.bound setSize(width: number, height: number): void {\n    this.width = width\n    this.height = height\n    this.reOffset()\n  }\n\n  @action.bound setPreviewText(text: string): void {\n    this.previewText = text\n  }\n\n  @action.bound setShowPreview(showPreview: boolean) {\n    this.showPreview = showPreview\n  }\n\n  @action.bound setPreviewTransform(trans: Partial<Ui>): void {\n    this.previewScale = Math.max(\n      use.num(trans.previewScale, this.previewScale),\n      0.01,\n    )\n    this.previewOffsetX = use.num(trans.previewOffsetX, this.previewOffsetX)\n    this.previewOffsetY = use.num(trans.previewOffsetY, this.previewOffsetY)\n  }\n\n  @action.bound setSelectLetter(letter: string = '', next: string = '') {\n    this.selectLetter = letter\n    this.selectNextLetter = next\n  }\n}\n\nexport default Ui\n","import is from './is'\n\nexport interface FontStyleConfig {\n  fontStyle?: 'normal' | 'italic' | 'oblique' | string\n  fontVariant?: 'normal' | 'none' | 'small-caps' | string\n  fontWeight?:\n    | 'normal'\n    | 'bold'\n    | 'lighter'\n    | 'bolder'\n    | '100'\n    | '200'\n    | '300'\n    | '400'\n    | '500'\n    | '600'\n    | '700'\n    | '800'\n    | '900'\n    | 100\n    | 200\n    | 300\n    | 400\n    | 500\n    | 600\n    | 700\n    | 800\n    | 900\n    | 'inherit'\n    | 'initial'\n    | 'unset'\n  fontSize?: string | number\n  lineHeight?: string | number\n  fontFamily?: string\n}\n\nconst defaultConfig: FontStyleConfig = {\n  fontSize: '14px',\n  fontFamily: 'sans-serif',\n}\n\n// https://developer.mozilla.org/zh-CN/docs/Web/CSS/font\nexport default function fontStyleStringify(\n  fontStyleConfig: FontStyleConfig,\n): string {\n  const config = { ...defaultConfig, ...fontStyleConfig }\n  const arr = []\n\n  if (config.fontStyle) arr.push(config.fontStyle)\n\n  if (config.fontVariant) arr.push(config.fontVariant)\n\n  if (config.fontWeight) arr.push(config.fontWeight)\n\n  if (is.num(config.fontSize)) {\n    config.fontSize = `${config.fontSize}px`\n  } else {\n    config.fontSize = defaultConfig.fontSize\n  }\n\n  if (config.lineHeight) {\n    arr.push(`${config.fontSize}/${config.lineHeight}`)\n  } else {\n    arr.push(config.fontSize)\n  }\n\n  arr.push(config.fontFamily)\n\n  return arr.join(' ')\n}\n","let fontTargeCache: HTMLStyleElement\nlet loadDiv: HTMLDivElement\n\nexport default function updateFontFace(\n  name: string,\n  url: string,\n): Promise<void> {\n  const cssNode = document.createTextNode(`\n    @font-face {\n        font-family: \"${name}\";\n        src: url(\"${url}\") format('truetype');\n    }`)\n\n  if (!fontTargeCache) {\n    const textNode = document.createTextNode(`A`)\n    fontTargeCache = document.createElement('style')\n    loadDiv = document.createElement('div')\n    document.head.appendChild(fontTargeCache)\n    fontTargeCache.appendChild(cssNode)\n    loadDiv.appendChild(textNode)\n    loadDiv.style.position = 'absolute'\n    loadDiv.style.left = '-1000px'\n    loadDiv.style.top = '-1000px'\n    loadDiv.style.opacity = '0'\n    loadDiv.style.fontSize = '12px'\n    loadDiv.style.pointerEvents = 'none'\n    document.body.appendChild(loadDiv)\n  } else {\n    fontTargeCache.replaceChild(cssNode, fontTargeCache.childNodes[0])\n  }\n  loadDiv.style.fontFamily = name\n  return new Promise((resolve) => setTimeout(resolve, 200))\n}\n","import { action, computed, observable } from 'mobx'\n\n// import GradientPaletteItem from './gradientPaletteItem'\n\nexport enum GradientType {\n  LINEAR,\n  RADIAL,\n}\n\nexport interface GradientColor {\n  offset: number\n  color: string\n}\n\nexport interface GradientPaletteItem extends GradientColor {\n  id: number\n}\n\nexport interface GradientColorOption extends GradientColor {\n  id?: number\n}\n\nclass Gradient {\n  @observable type: GradientType = 0\n\n  @observable angle: number\n\n  @observable.shallow palette: GradientPaletteItem[] = []\n\n  constructor(gradient: Partial<Gradient> = {}) {\n    this.type = gradient.type && GradientType[gradient.type] ? gradient.type : 0\n    this.angle = gradient.angle || 0\n    if (gradient.palette) {\n      gradient.palette.forEach((item) => {\n        this.palette.push({\n          ...item,\n          id: item.id || this.nextId,\n        })\n      })\n    } else {\n      this.addColor(0, '#FFF')\n      this.addColor(1)\n    }\n  }\n\n  @computed get ids(): number[] {\n    return this.palette.map((color) => color.id)\n  }\n\n  @computed get nextId(): number {\n    if (this.ids.length === 0) return 1\n    return Math.max(...this.ids) + 1\n  }\n\n  @action.bound setType(type: GradientType): void {\n    this.type = type\n  }\n\n  @action.bound setAngle(angle: number): void {\n    this.angle = angle\n  }\n\n  @action.bound addColor(offset = 0, color = '#000000'): void {\n    this.palette.push({ offset, color, id: this.nextId })\n  }\n\n  @action.bound updatePalette(palette: GradientPaletteItem[]): void {\n    this.palette = palette\n  }\n}\n\nexport default Gradient\n","import { action, observable, computed, runInAction } from 'mobx'\nimport getTextBaselines from 'src/utils/getTextBaselines'\nimport { parse, Font as OpenType } from 'opentype.js'\nimport updateFontFace from 'src/utils/updateFontFace'\n\nclass Font {\n  @observable.ref font: ArrayBuffer | null = null\n\n  @observable family: string = 'sans-serif'\n\n  @observable size: number\n\n  @observable lineHeight = 1.25\n\n  @observable middle = 0\n\n  @observable hanging = 0\n\n  @observable top = 0\n\n  @observable alphabetic = 0\n\n  @observable ideographic = 0\n\n  @observable bottom = 0\n\n  @observable.ref opentype: OpenType | null = null\n\n  @computed get minBaseLine() {\n    const min = Math.min(\n      this.middle,\n      this.hanging,\n      this.top,\n      this.alphabetic,\n      this.ideographic,\n      this.bottom,\n    )\n    if (Number.isNaN(Number(min))) return 0\n    return min\n  }\n\n  @computed get maxBaseLine() {\n    const max = Math.max(\n      this.middle,\n      this.hanging,\n      this.top,\n      this.alphabetic,\n      this.ideographic,\n      this.bottom,\n    )\n    if (Number.isNaN(Number(max))) return this.size\n    return max\n  }\n\n  constructor(font: Partial<Font> = {}) {\n    this.size = font.size || 72\n    if (font.font && font.font.byteLength) {\n      this.setFont(font.font)\n    } else {\n      this.updateBaseines()\n    }\n  }\n\n  updateBaseines(): void {\n    const bls = getTextBaselines('a', {\n      fontFamily: this.family,\n      fontSize: this.size,\n    })\n\n    this.middle = bls.middle\n    this.hanging = bls.hanging\n    this.top = bls.top\n    this.alphabetic = bls.alphabetic\n    this.ideographic = bls.ideographic\n    this.bottom = bls.bottom\n  }\n\n  @action.bound setFont(buffer: ArrayBuffer): Promise<void> {\n    try {\n      this.opentype = parse(buffer, { lowMemory: true })\n    } catch (e) {\n      return Promise.resolve()\n    }\n    const { names } = this.opentype\n    const fontName = names.postScriptName[Object.keys(names.postScriptName)[0]]\n    const url = URL.createObjectURL(new Blob([buffer]))\n    return updateFontFace(fontName, url).then(() => {\n      runInAction(() => {\n        this.family = fontName\n        this.font = buffer\n        this.updateBaseines()\n      })\n    })\n  }\n\n  @action.bound setSize(size: number): void {\n    this.size = size\n    this.updateBaseines()\n  }\n\n  @action.bound setLineHeight(lineHeight: number): void {\n    this.lineHeight = lineHeight\n  }\n}\n\nexport default Font\n","import { action, observable, runInAction } from 'mobx'\nimport use from 'src/utils/use'\nimport base64ToArrayBuffer from 'src/utils/base64ToArrayBuffer'\n\nexport type Repetition = 'repeat' | 'repeat-x' | 'repeat-y' | 'no-repeat'\n\nconst DEFAULT_IMAGE =\n  'iVBORw0KGgoAAAANSUhEUgAAAAgAAAAIAQMAAAD+wSzIAAAABlBMVEX////MzMw46qqDAAAADklEQVQI12Pgh8IPEAgAEeAD/Xk4HBcAAAAASUVORK5CYII='\n\nclass PatternTexture {\n  @observable.ref buffer: ArrayBuffer = base64ToArrayBuffer(DEFAULT_IMAGE)\n\n  @observable.ref image: HTMLImageElement | null = null\n\n  @observable src = ''\n\n  @observable repetition: Repetition = 'repeat'\n\n  @observable scale: number\n\n  constructor(pt: Partial<PatternTexture> = {}) {\n    this.scale = use.num(pt.scale, 1)\n    this.repetition = pt.repetition || 'repeat'\n    this.setImage(pt.buffer || this.buffer)\n  }\n\n  @action.bound setImage(buffer: ArrayBuffer): void {\n    const src = URL.createObjectURL(new Blob([buffer]))\n    const img = new Image()\n    img.onload = () => {\n      runInAction('setPatternTextureImage', () => {\n        this.buffer = buffer\n        this.image = img\n        this.src = src\n        img.onload = null\n      })\n    }\n    img.src = src\n  }\n\n  @action.bound setRepetition(repetition: Repetition): void {\n    this.repetition = repetition\n  }\n\n  @action.bound setScale(scale: number): void {\n    this.scale = scale\n  }\n}\n\nexport default PatternTexture\n","import { action, observable } from 'mobx'\n\nimport Gradient from './gradient'\nimport PatternTexture from './patternTexture'\n\nexport enum FillType {\n  SOLID,\n  GRADIENT,\n  IMAGE,\n}\n\nclass Fill {\n  @observable type: FillType\n\n  @observable color: string\n\n  @observable.shallow gradient: Gradient\n\n  @observable.shallow patternTexture: PatternTexture\n\n  constructor(fill: Partial<Fill> = {}) {\n    this.color = fill.color || '#000000'\n    this.type = fill.type && FillType[fill.type] ? fill.type : 0\n    this.gradient = new Gradient(fill.gradient)\n    this.patternTexture = new PatternTexture(fill.patternTexture)\n  }\n\n  @action.bound setType(type: FillType = 0): void {\n    this.type = type\n  }\n\n  @action.bound setColor(color = '#000000'): void {\n    this.color = color\n  }\n}\n\nexport default Fill\n","export default function base64ToArrayBuffer(base64: string): ArrayBuffer {\n  const binaryString = atob(base64)\n  const len = binaryString.length\n  const bytes = new Uint8Array(len)\n  for (let i = 0; i < len; i += 1) {\n    bytes[i] = binaryString.charCodeAt(i)\n  }\n  return bytes.buffer\n}\n","import fontStyleStringify, { FontStyleConfig } from './fontStyleStringify'\n\nexport interface TextSize {\n  text: string\n  font: string\n  width: number\n  height: number\n  fontWidth: number\n  fontHeight: number\n  trimOffsetTop: number\n  trimOffsetLeft: number\n  trimOffsetRight: number\n  trimOffsetBottom: number\n}\n\nlet canvas: HTMLCanvasElement\n\nexport default function getTextSize(\n  text: string,\n  config: FontStyleConfig,\n): TextSize {\n  if (!canvas) canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n  if (!ctx) throw new Error('Get context 2d failed.')\n\n  // clear before settings\n  canvas.width = 1\n  canvas.height = 1\n\n  const font = fontStyleStringify(config)\n\n  ctx.font = font\n\n  ctx.textAlign = 'left'\n  ctx.textBaseline = 'bottom'\n\n  const testA = ctx.measureText(text)\n\n  if (typeof testA.actualBoundingBoxLeft === 'undefined') {\n    return {\n      text,\n      font,\n      width: testA.width,\n      height: parseInt(`${config.fontSize ?? '14'}`, 10),\n      fontWidth: testA.width,\n      fontHeight: parseInt(`${config.fontSize ?? '14'}`, 10),\n      trimOffsetTop: 0,\n      trimOffsetLeft: 0,\n      trimOffsetRight: 0,\n      trimOffsetBottom: 0,\n    }\n  }\n\n  ctx.textAlign = 'right'\n  ctx.textBaseline = 'top'\n\n  const testB = ctx.measureText(text)\n\n  const trimOffsetLeft = Math.ceil(testA.actualBoundingBoxLeft)\n  const trimOffsetRight = Math.ceil(testB.actualBoundingBoxRight)\n  const trimOffsetTop = Math.ceil(testB.actualBoundingBoxAscent)\n  const trimOffsetBottom = Math.ceil(testA.actualBoundingBoxDescent)\n  const width = trimOffsetLeft + Math.ceil(testA.actualBoundingBoxRight)\n  const height = trimOffsetBottom + Math.ceil(testA.actualBoundingBoxAscent)\n  const fontWidth = Math.ceil(testA.width)\n  const fontHeight =\n    testA.actualBoundingBoxAscent - testB.actualBoundingBoxAscent\n\n  return {\n    text,\n    font,\n    width,\n    height,\n    fontWidth,\n    fontHeight,\n    trimOffsetTop,\n    trimOffsetLeft,\n    trimOffsetRight,\n    trimOffsetBottom,\n  }\n}\n","import { action, observable } from 'mobx'\nimport use from 'src/utils/use'\n\nimport Fill from './fill'\n\nclass Stroke extends Fill {\n  @observable width = 1\n\n  /**\n   * butt   默认。向线条的每个末端添加平直的边缘。\n   * round  向线条的每个末端添加圆形线帽。\n   * square 向线条的每个末端添加正方形线帽。\n   */\n  @observable lineCap: CanvasLineCap\n\n  /**\n   * bevel 创建斜角。\n   * round 创建圆角。\n   * miter 默认。创建尖角。\n   */\n  @observable lineJoin: CanvasLineJoin\n\n  constructor(stroke: Partial<Stroke> = {}) {\n    super(stroke)\n    this.width = use.num(stroke.width, 1)\n    this.lineCap = stroke.lineCap || 'round'\n    this.lineJoin = stroke.lineJoin || 'round'\n  }\n\n  @action.bound setWidth(width: number): void {\n    this.width = width\n  }\n\n  @action.bound setLineCap(lineCap: CanvasLineCap): void {\n    this.lineCap = lineCap\n  }\n\n  @action.bound setLineJoin(lineJoin: CanvasLineJoin): void {\n    this.lineJoin = lineJoin\n  }\n}\n\nexport default Stroke\n","import { action, observable } from 'mobx'\nimport use from 'src/utils/use'\n\nclass Shadow {\n  @observable color: string\n\n  @observable blur = 1\n\n  @observable offsetX = 1\n\n  @observable offsetY = 1\n\n  constructor(shadow: Partial<Shadow> = {}) {\n    this.color = shadow.color || '#000000'\n    this.blur = use.num(shadow.blur, 1)\n    this.offsetX = use.num(shadow.offsetX, 1)\n    this.offsetY = use.num(shadow.offsetY, 1)\n  }\n\n  @action.bound setColor(color: string): void {\n    this.color = color\n  }\n\n  @action.bound setBlur(blur: number): void {\n    this.blur = blur\n  }\n\n  @action.bound setOffsetX(offsetX: number): void {\n    this.offsetX = offsetX\n  }\n\n  @action.bound setOffsetY(offsetY: number): void {\n    this.offsetY = offsetY\n  }\n\n  @action.bound setOffset(offsetX: number, offsetY: number): void {\n    this.offsetX = offsetX\n    this.offsetY = offsetY\n  }\n}\n\nexport default Shadow\n","import { action, observable } from 'mobx'\n\nimport Font from './font'\nimport Fill from './fill'\nimport Stroke from './stroke'\nimport Shadow from './shadow'\n\nclass Style {\n  @observable readonly font: Font\n\n  @observable readonly fill: Fill\n\n  @observable useStroke: boolean\n\n  @observable readonly stroke: Stroke\n\n  @observable useShadow: boolean\n\n  @observable readonly shadow: Shadow\n\n  @observable bgColor = 'rgba(0,0,0,0)'\n\n  constructor(style: Partial<Style> = {}) {\n    this.font = new Font(style.font)\n    this.fill = new Fill(style.fill)\n    this.stroke = new Stroke(style.stroke)\n    this.shadow = new Shadow(style.shadow)\n    this.useShadow = !!style.useShadow\n    this.useStroke = !!style.useStroke\n  }\n\n  @action.bound setUseStroke(useStroke: boolean): void {\n    this.useStroke = useStroke\n  }\n\n  @action.bound setUseShadow(useShadow: boolean): void {\n    this.useShadow = useShadow\n  }\n\n  @action.bound setBgColor(bgColor: string): void {\n    this.bgColor = bgColor\n  }\n}\n\nexport default Style\n","import { action, observable } from 'mobx'\nimport use from 'src/utils/use'\n\nclass Layout {\n  @observable padding = 1\n\n  @observable spacing = 1\n\n  @observable power = false\n\n  constructor(layout: Partial<Layout> = {}) {\n    this.padding = use.num(layout.padding, 1)\n\n    this.spacing = use.num(layout.spacing, 1)\n\n    this.power = !!layout.power\n  }\n\n  @action.bound setPadding(padding: number): void {\n    this.padding = padding\n  }\n\n  @action.bound setSpacing(spacing: number): void {\n    this.spacing = spacing\n  }\n\n  @action.bound setPower(power: boolean): void {\n    this.power = power\n  }\n}\n\nexport default Layout\n","import { action, observable } from 'mobx'\n\nclass Metric {\n  @observable xAdvance = 0\n\n  @observable xOffset = 0\n\n  @observable yOffset = 0\n\n  constructor(metric: Partial<Metric> = {}) {\n    this.xAdvance = metric.xAdvance || 0\n    this.xOffset = metric.xOffset || 0\n    this.yOffset = metric.yOffset || 0\n  }\n\n  @action.bound setXAdvance(xAdvance: number): void {\n    this.xAdvance = xAdvance\n  }\n\n  @action.bound setXOffset(xOffset: number): void {\n    this.xOffset = xOffset\n  }\n\n  @action.bound setYOffset(yOffset: number): void {\n    this.yOffset = yOffset\n  }\n}\n\nexport default Metric\n","export interface TrimImageInfo {\n  width: number\n  height: number\n  trimOffsetTop: number\n  trimOffsetLeft: number\n}\n\nexport default function trimImageData(\n  imageData: ImageData,\n  threshold = 0,\n): TrimImageInfo {\n  const { data, width, height } = imageData\n  let topTrim = 0\n  let bottomTrim = 0\n  let leftTrim = 0\n  let rightTrim = 0\n  let topStatus = true\n  let bottomStatus = true\n  let leftStatus = true\n  let rightStatus = true\n\n  let h: number = Math.ceil(height / 2)\n  const w: number = Math.ceil(width / 2)\n\n  for (let i = 0; i < h; i += 1) {\n    for (let j = 0; j < width; j += 1) {\n      if (topStatus && data[(i * width + j) * 4 + 3] > threshold) {\n        topStatus = false\n      }\n      if (\n        bottomStatus &&\n        data[((height - i - 1) * width + j) * 4 + 3] > threshold\n      ) {\n        bottomStatus = false\n      }\n      if (!topStatus && !bottomStatus) {\n        break\n      }\n    }\n    if (!topStatus && !bottomStatus) {\n      break\n    }\n    if (topStatus) topTrim += 1\n    if (bottomStatus) bottomTrim += 1\n  }\n\n  if (topTrim + bottomTrim >= height) {\n    // Is empty image.\n    return {\n      trimOffsetLeft: width * -1,\n      trimOffsetTop: height * -1,\n      width: 0,\n      height: 0,\n    }\n  }\n\n  h = height - bottomTrim\n\n  for (let i = 0; i < w; i += 1) {\n    for (let j = topTrim; j < h; j += 1) {\n      if (leftStatus && data[(width * j + i) * 4 + 3] > threshold) {\n        leftStatus = false\n      }\n      if (\n        rightStatus &&\n        data[(width * j + width - i - 1) * 4 + 3] > threshold\n      ) {\n        rightStatus = false\n      }\n      if (!leftStatus && !rightStatus) {\n        break\n      }\n    }\n    if (!leftStatus && !rightStatus) {\n      break\n    }\n    if (leftStatus) leftTrim += 1\n    if (rightStatus) rightTrim += 1\n  }\n\n  return {\n    trimOffsetLeft: leftTrim * -1,\n    trimOffsetTop: topTrim * -1,\n    width: width - leftTrim - rightTrim,\n    height: height - topTrim - bottomTrim,\n  }\n}\n","export interface Point {\n  x: number\n  y: number\n}\n\nexport default function getPointOnCircle(\n  x: number,\n  y: number,\n  r: number,\n  angle: number,\n): Point {\n  return {\n    x: x + r * Math.cos((Math.PI / 180) * angle),\n    y: y + r * Math.sin((Math.PI / 180) * angle),\n  }\n}\n","import getPointOnCircle from './getPointOnCircle'\n\ninterface GarentColor {\n  offset: number\n  color: string\n}\n\ninterface Pradient {\n  type: 0 | 1\n  palette: GarentColor[]\n  angle: number\n}\n\ninterface PatternTexture {\n  image: HTMLImageElement | null\n  repetition: string\n  scale: number\n}\n\ninterface Config {\n  type: number\n  color: string\n  gradient: Pradient\n  patternTexture: PatternTexture\n}\n\nexport default function getCanvasStyle(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  config: Config,\n): string | CanvasGradient | CanvasPattern {\n  // 纯色\n  if (config.type === 0) {\n    return config.color\n  }\n\n  // 渐变\n  if (config.type === 1) {\n    const { type, palette, angle } = config.gradient\n    let gradient: CanvasGradient\n    const cx = x + width / 2\n    const cy = y + height / 2\n    const r = Math.max(width, height) / 2\n    if (type === 0) {\n      const startPoint = getPointOnCircle(cx, cy, r, angle + 180)\n      const endPoint = getPointOnCircle(cx, cy, r, angle)\n      gradient = ctx.createLinearGradient(\n        startPoint.x,\n        startPoint.y,\n        endPoint.x,\n        endPoint.y,\n      )\n    } else {\n      gradient = ctx.createRadialGradient(cx, cy, 0, cx, cy, r)\n    }\n\n    palette.forEach((color) => {\n      gradient.addColorStop(color.offset, color.color)\n    })\n\n    return gradient\n  }\n\n  const { image, repetition, scale } = config.patternTexture\n  if (!image) return 'rgba(0,0,0,0)'\n\n  if (scale === 1)\n    return ctx.createPattern(image, repetition) || 'rgba(0,0,0,0)'\n\n  const { naturalWidth, naturalHeight } = image\n  const canvas: HTMLCanvasElement = document.createElement('canvas')\n  canvas.width = Math.ceil(naturalWidth * scale)\n  canvas.height = Math.ceil(naturalHeight * scale)\n  const textureCtx = canvas.getContext('2d')\n\n  if (!textureCtx) return 'rgba(0,0,0,0)'\n\n  textureCtx.drawImage(image, 0, 0, canvas.width, canvas.height)\n  return ctx.createPattern(canvas, repetition) || 'rgba(0,0,0,0)'\n}\n","import trimImageData from './trimImageData'\nimport getTextSize, { TextSize } from './getTextSize'\nimport fontStyleStringify from './fontStyleStringify'\nimport getCanvasStyle from './getCanvasStyle'\n\nexport interface GlyphInfo extends TextSize {\n  canvas: HTMLCanvasElement | null\n}\n\ninterface ParentColor {\n  offset: number\n  color: string\n}\n\ninterface Gradient {\n  type: 0 | 1\n  palette: ParentColor[]\n  angle: number\n}\n\ninterface PatternTexture {\n  image: HTMLImageElement | null\n  repetition: string\n  scale: number\n}\n\ninterface Fill {\n  type: number\n  color: string\n  gradient: Gradient\n  patternTexture: PatternTexture\n}\n\ninterface Stroke extends Fill {\n  width: number\n  lineJoin: CanvasLineJoin\n  lineCap: CanvasLineCap\n}\n\ninterface Font {\n  family: string\n  size: number\n}\n\ninterface Shadow {\n  color: string\n  blur: number\n  offsetX: number\n  offsetY: number\n}\n\nexport interface Config {\n  font: Font\n  fill: Fill\n  stroke?: Stroke\n  shadow?: Shadow\n}\n\nexport default function getGlyphInfo(text: string, config: Config): GlyphInfo {\n  const { font, stroke, shadow, fill } = config\n\n  const styleConig = {\n    fontSize: font.size,\n    fontFamily: font.family,\n  }\n\n  const trimInfo = getTextSize(text, styleConig)\n  const { width, height, trimOffsetLeft, trimOffsetTop } = trimInfo\n  if (width === 0 || height === 0) return { canvas: null, ...trimInfo }\n\n  const lineWidth = stroke ? stroke.width * 2 : 0 // canvas is center stroke\n  let addX = lineWidth\n  let addY = lineWidth\n  let styleX = (width - font.size) / 2\n  let styleY = (height - font.size) / 2\n\n  if (shadow) {\n    const blur = Math.ceil(shadow.blur * 1.5)\n    addX = Math.abs(shadow.offsetX) + blur\n    addY = Math.abs(shadow.offsetY) + blur\n  }\n\n  styleX += addX\n  styleY += addY\n\n  let canvas = document.createElement('canvas')\n  let ctx = canvas.getContext('2d') as CanvasRenderingContext2D\n  canvas.width = width + addX * 2\n  canvas.height = height + addY * 2\n\n  ctx.textAlign = 'left'\n  ctx.textBaseline = 'top'\n\n  ctx.font = fontStyleStringify({\n    fontSize: font.size,\n    fontFamily: font.family,\n  })\n\n  if (stroke && lineWidth) {\n    ctx.lineWidth = lineWidth\n    ctx.lineCap = stroke.lineCap\n    ctx.lineJoin = stroke.lineJoin\n    ctx.strokeStyle = getCanvasStyle(\n      ctx,\n      styleX,\n      styleY,\n      font.size,\n      font.size,\n      stroke,\n    )\n    ctx.strokeText(text, addX + trimOffsetLeft, addY + trimOffsetTop)\n  }\n\n  ctx.fillStyle = getCanvasStyle(\n    ctx,\n    styleX,\n    styleY,\n    font.size,\n    font.size,\n    fill,\n  )\n  ctx.fillText(text, addX + trimOffsetLeft, addY + trimOffsetTop)\n\n  if (shadow) {\n    const cvs = document.createElement('canvas')\n    cvs.width = width + addX * 2\n    cvs.height = height + addY * 2\n    const newCtx = cvs.getContext('2d') as CanvasRenderingContext2D\n\n    newCtx.shadowColor = shadow.color\n    newCtx.shadowBlur = shadow.blur\n    newCtx.shadowOffsetX = shadow.offsetX\n    newCtx.shadowOffsetY = shadow.offsetY\n\n    newCtx.drawImage(canvas, 0, 0)\n\n    canvas = cvs\n    ctx = newCtx\n  }\n\n  if (canvas.width === 0 || canvas.height === 0) {\n    return {\n      canvas,\n      ...trimInfo,\n    }\n  }\n\n  const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height)\n  const styleTrimInfo = trimImageData(imgData)\n  canvas.width = styleTrimInfo.width\n  canvas.height = styleTrimInfo.height\n  trimInfo.width = styleTrimInfo.width\n  trimInfo.height = styleTrimInfo.height\n  ctx.putImageData(\n    imgData,\n    styleTrimInfo.trimOffsetLeft,\n    styleTrimInfo.trimOffsetTop,\n  )\n  trimInfo.trimOffsetLeft += addX + styleTrimInfo.trimOffsetLeft\n  trimInfo.trimOffsetTop += addY + styleTrimInfo.trimOffsetTop\n  trimInfo.trimOffsetBottom +=\n    addY +\n    (height + addY * 2 + styleTrimInfo.trimOffsetTop - styleTrimInfo.height)\n\n  return {\n    canvas,\n    ...trimInfo,\n  }\n}\n","import { observable, action } from 'mobx'\n\nimport Metric from './metric'\n\nexport type GlyphType = 'text' | 'image'\n\nclass GlyphBase {\n  readonly type: GlyphType = 'text'\n\n  @observable letter = ''\n\n  @observable.ref source: HTMLImageElement | HTMLCanvasElement | null = null\n\n  @observable width = 0\n\n  @observable height = 0\n\n  @observable x = 0\n\n  @observable y = 0\n\n  @observable fontWidth = 0\n\n  @observable fontHeight = 0\n\n  @observable trimOffsetTop = 0\n\n  @observable trimOffsetLeft = 0\n\n  @observable trimOffsetRight = 0\n\n  @observable trimOffsetBottom = 0\n\n  @observable.ref adjustMetric: Metric\n\n  @observable kerning: Map<string, number> = new Map()\n\n  constructor(glyph: Partial<GlyphBase> = {}) {\n    this.letter = glyph.letter || ''\n    this.adjustMetric = new Metric(glyph.adjustMetric)\n\n    if (glyph.kerning) {\n      this.kerning = glyph.kerning\n    }\n  }\n\n  @action.bound steKerning(text: string, kerning: number) {\n    this.kerning.set(text, kerning)\n  }\n}\n\nexport default GlyphBase\n","import { action } from 'mobx'\nimport getGlyphInfo, { Config } from 'src/utils/getGlyphInfo'\nimport GlyphBase from './glyphBase'\n\nimport Style from './style'\n\nclass GlyphFont extends GlyphBase {\n  constructor(galyphFont: Partial<GlyphFont> = {}, textStyle: Style) {\n    super(galyphFont)\n    this.setGlyphInfo(textStyle)\n  }\n\n  @action setGlyphInfo(textStyle: Style): void {\n    const { font, fill, useStroke, stroke, useShadow, shadow } = textStyle\n    const config: Config = { font, fill }\n    if (useStroke) config.stroke = stroke\n    if (useShadow) config.shadow = shadow\n\n    const glyphInfo = getGlyphInfo(this.letter, config)\n    this.source = glyphInfo.canvas\n    this.width = glyphInfo.width\n    this.height = glyphInfo.height\n    this.fontWidth = glyphInfo.fontWidth\n    this.fontHeight = glyphInfo.fontHeight\n    this.trimOffsetTop = glyphInfo.trimOffsetTop\n    this.trimOffsetLeft = glyphInfo.trimOffsetLeft\n    this.trimOffsetRight = glyphInfo.trimOffsetRight\n    this.trimOffsetBottom = glyphInfo.trimOffsetBottom\n  }\n}\n\nexport default GlyphFont\n","import { action, observable, runInAction } from 'mobx'\nimport getTrimImageInfo from 'src/utils/getTrimImageInfo'\n\nimport GlyphBase, { GlyphType } from './glyphBase'\n\nexport interface FileInfo {\n  letter?: string\n  fileName: string\n  fileType: string\n  buffer: ArrayBuffer\n}\n\nclass GlyphImage extends GlyphBase {\n  readonly type: GlyphType = 'image'\n\n  @observable src = '' // 仅显示列表中\n\n  @observable.ref buffer: ArrayBuffer | null = null\n\n  @observable fileName = ''\n\n  @observable fileType = ''\n\n  @observable selected = true\n\n  constructor(glyphImage: Partial<GlyphImage>) {\n    super(glyphImage)\n    this.letter = glyphImage.letter || ''\n    this.fileName = glyphImage.fileName || ''\n    this.fileType = glyphImage.fileType || ''\n    this.buffer = glyphImage.buffer || null\n    if (glyphImage.buffer)\n      this.src = URL.createObjectURL(new Blob([glyphImage.buffer]))\n  }\n\n  @action.bound initImage(): Promise<void> {\n    return new Promise((resolve) => {\n      const image = new Image()\n      image.onload = () => {\n        runInAction('trimImage', () => {\n          const { naturalWidth, naturalHeight } = image\n          this.fontWidth = naturalWidth\n          this.fontHeight = naturalHeight\n\n          const trimInfo = getTrimImageInfo(image)\n          this.width = trimInfo.width\n          this.height = trimInfo.height\n          this.trimOffsetLeft = trimInfo.trimOffsetLeft\n          this.trimOffsetTop = trimInfo.trimOffsetTop\n          this.trimOffsetRight =\n            trimInfo.width - trimInfo.trimOffsetLeft - naturalWidth\n          this.trimOffsetBottom =\n            trimInfo.height - trimInfo.trimOffsetTop - naturalHeight\n\n          this.source = trimInfo.canvas\n          resolve()\n        })\n      }\n      image.src = this.src\n    })\n  }\n\n  @action.bound setGlyph(text: string): void {\n    this.letter = text[0] || ''\n  }\n\n  @action.bound changeSelect(isSelect: boolean): void {\n    this.selected = isSelect\n  }\n}\n\nexport default GlyphImage\n","import trimImageData, { TrimImageInfo } from './trimImageData'\n\ninterface TrimInfo extends TrimImageInfo {\n  canvas: HTMLCanvasElement\n}\n\nexport default function getTrimImageInfo(\n  image: HTMLImageElement,\n  threshold = 10,\n): TrimInfo {\n  const width = image.naturalWidth\n  const height = image.naturalHeight\n\n  const canvas = document.createElement('canvas')\n  canvas.width = width\n  canvas.height = height\n  const ctx = canvas.getContext('2d') as CanvasRenderingContext2D\n  ctx.drawImage(image, 0, 0)\n  const imageData = ctx.getImageData(0, 0, width, height)\n  const trimInfo = trimImageData(imageData, threshold)\n  canvas.width = trimInfo.width\n  canvas.height = trimInfo.height\n  ctx.drawImage(image, trimInfo.trimOffsetLeft, trimInfo.trimOffsetTop)\n\n  return {\n    canvas,\n    ...trimInfo,\n  }\n}\n","import { observable, action, computed } from 'mobx'\nimport { deepObserve } from 'mobx-utils'\nimport { cancel, request } from 'requestidlecallback'\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport RectanglePacker from 'worker-loader?name=static/js/RectanglePacker.[hash].worker.js!src/workers/RectanglePacker.worker'\n\nimport Ui from './base/ui'\nimport Style from './base/style'\nimport Layout from './base/layout'\nimport Metric from './base/metric'\nimport GlyphFont from './base/glyphFont'\nimport GlyphImage, { FileInfo } from './base/glyphImage'\nimport { GlyphType } from './base/glyphBase'\n\ninterface TextRectangle {\n  width: number\n  height: number\n  x: number\n  y: number\n  letter: string\n  type: GlyphType\n}\n\nclass Project {\n  @observable name = 'Unnamed'\n\n  id: number\n\n  worker: RectanglePacker | null = null\n\n  packStart = 0\n\n  packTimer = 0\n\n  idleId = 0\n\n  @observable isPacking = false\n\n  @observable text =\n    'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!№;%:?*()_+-=.,/|\"\\'@#$^&{}[]'\n\n  @observable.shallow glyphs: Map<string, GlyphFont> = new Map()\n\n  @observable.shallow glyphImages: Set<GlyphImage> = new Set()\n\n  @observable.ref style: Style\n\n  @observable.ref layout: Layout\n\n  @observable.ref globalAdjustMetric: Metric\n\n  @observable.ref packCanvas: HTMLCanvasElement | null = null\n\n  @observable.ref ui: Ui = new Ui()\n\n  constructor(project: Partial<Project> = {}) {\n    this.id = project.id || Date.now()\n    this.name = project.name || 'Unnamed'\n    this.text = project.text || this.text\n    this.ui = new Ui(project.ui)\n    this.style = new Style(project.style)\n    this.layout = new Layout(project.layout)\n    this.globalAdjustMetric = new Metric(project.globalAdjustMetric)\n\n    if (project.glyphs) {\n      project.glyphs.forEach((value, key) => {\n        this.glyphs.set(key, new GlyphFont(value, this.style))\n      })\n    }\n\n    project.glyphImages?.forEach((img) => {\n      this.glyphImages.add(new GlyphImage(img))\n    })\n\n    if (!this.glyphs.has(' '))\n      this.glyphs.set(' ', new GlyphFont({ letter: ' ' }, this.style))\n\n    this.addGlyphs(project.text || '')\n    this.addAutoRun()\n    this.pack()\n  }\n\n  @computed get glyphList(): (GlyphFont | GlyphImage)[] {\n    const obj: { [key: string]: GlyphImage } = {}\n\n    Array.from(this.glyphImages).forEach((glyph) => {\n      if (glyph.letter && glyph.selected) {\n        obj[glyph.letter] = glyph\n      }\n    })\n\n    return ` ${this.text}`.split('').map((letter) => {\n      if (obj[letter]) return obj[letter]\n      return this.glyphs.get(letter) as GlyphFont\n    })\n  }\n\n  @computed get rectangleList(): TextRectangle[] {\n    const { padding, spacing } = this.layout\n    return this.glyphList.map((glyph) => {\n      const isUnEmpty = !!(glyph.width && glyph.height)\n      return {\n        letter: glyph.letter,\n        type: glyph.type,\n        width: isUnEmpty ? glyph.width + padding * 2 + spacing : 0,\n        height: isUnEmpty ? glyph.height + padding * 2 + spacing : 0,\n        x: 0,\n        y: 0,\n      }\n    })\n  }\n\n  @action.bound pack(): void {\n    if (this.idleId) return\n    if (this.worker) this.worker.terminate()\n    this.isPacking = true\n    this.worker = new RectanglePacker()\n    const packList = this.rectangleList.sort((a, b) => b.height - a.height)\n\n    this.worker.addEventListener(\n      'message',\n      action('PackerWorkerCallback', (messageEvent) => {\n        const { data } = messageEvent\n        const imgList = Array.from(this.glyphImages)\n        let maxWidth = 0\n        let maxHeight = 0\n        ;(data as TextRectangle[]).forEach((rectangle) => {\n          const { letter, x, y, type, width, height } = rectangle\n          let glyph: GlyphFont | GlyphImage | undefined\n\n          if (type === 'image') {\n            glyph = imgList.find((gi) => {\n              if (gi && gi.letter === letter) return true\n              return false\n            })\n          }\n\n          if (!glyph) {\n            glyph = this.glyphs.get(letter)\n          }\n\n          if (glyph) {\n            glyph.x = x || 0\n            glyph.y = y || 0\n          }\n\n          maxWidth = Math.max(maxWidth, x + width)\n          maxHeight = Math.max(maxHeight, y + height)\n        })\n\n        this.ui.setSize(\n          maxWidth - this.layout.spacing,\n          maxHeight - this.layout.spacing,\n        )\n\n        this.isPacking = false\n        this.worker?.terminate()\n        this.worker = null\n      }),\n      false,\n    )\n\n    this.worker.postMessage(\n      packList.filter(({ width, height }) => !!(width && height)),\n    )\n  }\n\n  @action.bound packStyle(): void {\n    this.isPacking = true\n    if (this.worker) {\n      this.worker.terminate()\n      this.worker = null\n    }\n    cancel(this.idleId)\n\n    const tasks: GlyphFont[] = []\n\n    this.glyphs.forEach((glyph) => {\n      tasks.push(glyph)\n    })\n\n    const runTasks = () => {\n      this.idleId = request((deadline) => {\n        const tr = deadline.timeRemaining()\n        const start = Date.now()\n        while (tasks.length && tr - (Date.now() - start) > -100) {\n          // while (tasks.length) {\n          const glyph = tasks.shift()\n          if (glyph) glyph.setGlyphInfo(this.style)\n        }\n\n        if (tasks.length) {\n          runTasks()\n        } else {\n          this.idleId = 0\n          this.pack()\n        }\n      })\n    }\n\n    runTasks()\n  }\n\n  @action.bound throttlePack(): void {\n    if (this.idleId) return\n    window.clearTimeout(this.packTimer)\n    if (Date.now() - this.packStart > 500) {\n      Promise.resolve().then(this.pack)\n    } else {\n      this.packTimer = window.setTimeout(() => {\n        this.pack()\n      }, 500)\n    }\n    this.packStart = Date.now()\n  }\n\n  addAutoRun(): void {\n    const isName = (obj: { name?: unknown }, name: string): boolean =>\n      !!(obj.name && obj.name === name)\n\n    deepObserve(this.glyphs, () => {\n      this.throttlePack()\n    })\n\n    deepObserve(this.glyphImages, () => {\n      this.throttlePack()\n    })\n\n    deepObserve(this.layout, (change) => {\n      if (isName(change, 'power')) return\n      this.throttlePack()\n    })\n\n    deepObserve(this.style, (change) => {\n      if (isName(change, 'bgColor') || isName(change, 'lineHeight')) return\n      this.packStyle()\n    })\n  }\n\n  @action.bound setText(str: string): void {\n    const oldText = this.text\n    this.text = str.replace(/\\s/gm, '')\n    this.addGlyphs(oldText)\n  }\n\n  @action.bound addGlyphs(oldText = ''): void {\n    const currentList = Array.from(new Set(this.text.split('')))\n    const oldList = Array.from(new Set(oldText.split('')))\n    this.text = currentList.join('')\n    const diffList = oldText\n      ? Array.from(new Set(currentList.concat(oldList))).filter(\n          (t) => !(currentList.includes(t) && oldList.includes(t)),\n        )\n      : currentList\n\n    if (!diffList.length) return\n\n    diffList.forEach((letter) => {\n      if (currentList.includes(letter)) {\n        this.glyphs.set(letter, new GlyphFont({ letter }, this.style))\n      } else {\n        // in diff\n        this.glyphs.delete(letter)\n      }\n    })\n  }\n\n  @action.bound addImages<T extends FileInfo>(list: T[]): void {\n    Promise.all(\n      list.map((img) => {\n        const glyphImage = new GlyphImage(img)\n        this.glyphImages.add(glyphImage)\n        return glyphImage.initImage()\n      }),\n    ).then(this.pack)\n  }\n\n  @action.bound removeImage(image: GlyphImage): void {\n    this.glyphImages.delete(image)\n  }\n\n  @action.bound setCanvas(canvas: HTMLCanvasElement): void {\n    this.packCanvas = canvas\n  }\n\n  @action.bound setName(name: string): void {\n    this.name = name || this.name\n  }\n}\n\nexport default Project\n","import { action, observable, runInAction, computed } from 'mobx'\n\nimport Project from './project'\n\nclass Workspace {\n  @observable activeId = 0\n\n  @observable.shallow projectList: Map<number, Project> = new Map()\n\n  constructor() {\n    runInAction(() => {\n      this.activeId = Date.now()\n      const project = new Project({ id: this.activeId })\n      this.projectList.set(project.id, project)\n    })\n  }\n\n  @computed get currentProject(): Project {\n    return this.projectList.get(this.activeId) as Project\n  }\n\n  @computed get namedList(): { id: number; name: string }[] {\n    const list: { id: number; name: string }[] = []\n    this.projectList.forEach((value) => {\n      list.push({\n        id: value.id,\n        name: value.name,\n      })\n    })\n    return list\n  }\n\n  @action.bound selectProject(id: number): void {\n    if (this.projectList.has(id)) this.activeId = id\n  }\n\n  @action.bound removeProject(id: number): void {\n    const list = this.namedList.filter((item) => item.id !== id)\n    if (list.length === 0) return\n    this.activeId = list[0].id\n    this.projectList.delete(id)\n  }\n\n  @action.bound addProject(p: Partial<Project> = {}): void {\n    if (p.id && this.projectList.has(p.id)) {\n      this.activeId = p.id\n      return\n    }\n    if (!p.name) {\n      p.name = 'Unnamed'\n      const namedList: number[] = []\n      this.projectList.forEach((item) => {\n        const named = item.name.match(/^Unnamed-?(\\d+)?$/)\n        if (named) {\n          namedList.push(Number(named[1]) || 0)\n        }\n      })\n      if (namedList.length > 0) {\n        p.name += `-${Math.max(...namedList) + 1}`\n      }\n    }\n\n    const project = new Project(p)\n    this.projectList.set(project.id, project)\n    this.activeId = project.id\n  }\n\n  @action.bound setProjectName(name: string, value: number): void {\n    const project = this.projectList.get(value)\n    if (project) {\n      project.setName(name)\n    }\n  }\n}\n\nexport default Workspace\n","import { configure } from 'mobx'\n\nimport Ui from './ui'\nimport Workspace from './workspace'\n\nconfigure({\n  enforceActions: 'always',\n  computedRequiresReaction: true,\n})\n\nexport interface Store {\n  ui: Ui\n  workspace: Workspace\n}\n\nexport default function createStore(): Store {\n  return { ui: new Ui(), workspace: new Workspace() }\n}\n\nexport type TStore = ReturnType<typeof createStore>\n\nexport { default as Ui } from './ui'\nexport { default as Project } from './project'\nexport { default as Workspace } from './workspace'\n\nexport * from './base'\n","import { ComponentsProps } from '@material-ui/core/styles/props'\n\nconst props: ComponentsProps = {\n  MuiButton: {\n    size: 'small',\n  },\n  MuiButtonBase: {\n    disableRipple: true,\n  },\n  MuiFilledInput: {\n    margin: 'dense',\n  },\n  MuiFormControl: {\n    margin: 'dense',\n  },\n  MuiFormHelperText: {\n    margin: 'dense',\n  },\n  MuiIconButton: {\n    size: 'small',\n  },\n  MuiInputBase: {\n    margin: 'dense',\n  },\n  MuiInputLabel: {\n    margin: 'dense',\n  },\n  MuiListItem: {\n    dense: true,\n  },\n  MuiOutlinedInput: {\n    margin: 'dense',\n  },\n  MuiFab: {\n    size: 'small',\n  },\n  MuiTable: {\n    size: 'small',\n  },\n  MuiTextField: {\n    margin: 'dense',\n  },\n  MuiToolbar: {\n    variant: 'dense',\n  },\n}\n\nexport default props\n","import { Overrides } from '@material-ui/core/styles/overrides'\n\nconst overrides: Overrides = {\n  MuiCssBaseline: {\n    '@global': {\n      html: {\n        fontSize: '14px',\n      },\n      'input::-webkit-inner-spin-button': {\n        marginLeft: '10px',\n      },\n      'input:enabled:read-write:-webkit-any(:focus,:hover)::-webkit-inner-spin-button': {\n        opacity: 0.3,\n      },\n      '::-webkit-scrollbar': {\n        width: '4px',\n        height: '4px',\n      },\n      '::-webkit-scrollbar-thumb': {\n        background: 'rgba(255, 255, 255, 0.2)',\n      },\n      '::-webkit-scrollbar-track': {\n        background: 'rgba(0, 0, 0, 0.1)',\n      },\n    },\n  },\n  MuiInputBase: {\n    input: {\n      '&[type=number]': {\n        textAlign: 'right',\n      },\n    },\n  },\n}\n\nexport default overrides\n","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles'\n\nimport props from './props'\nimport overrides from './overrides'\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: { main: '#444' },\n    secondary: { main: '#424242' },\n    background: {\n      paper: 'rgb(37, 37, 37)',\n      default: 'rgb(30, 30, 30)',\n      activityBar: 'rgb(51, 51, 51)',\n      titleBar: 'rgb(50, 50, 50)',\n      sidebar: 'rgb(37, 37, 37)',\n    },\n    common: {\n      black: 'rgb(30,30,30)',\n      white: 'rgb(204,204,204)',\n    },\n    action: {\n      hover: 'rgba(255, 255, 255, 0.1)',\n    },\n  },\n  bgPixel: {\n    backgroundColor: '#fff',\n    backgroundImage: `\n    linear-gradient(45deg, #ccc 25%, transparent 0, transparent 75%, #ccc 0),\n    linear-gradient(45deg, #ccc 25%, transparent 0, transparent 75%, #ccc 0)`,\n    backgroundSize: '8px 8px',\n    backgroundPosition: '0 0, 4px 4px',\n    backgroundRepeat: 'repeat',\n  },\n  spacing: 4,\n  typography: { fontSize: 13 },\n  transitions: {\n    create: () => 'none',\n  },\n  shape: { borderRadius: 0 },\n  props,\n  overrides,\n})\n\nexport default responsiveFontSizes(theme)\n","import { useContext } from 'react'\nimport { MobXProviderContext } from 'mobx-react'\nimport {\n  TStore,\n  Workspace,\n  Layout,\n  Project,\n  Style,\n  Font,\n  ProjectUi,\n  FontStyleConfig,\n} from '.'\n\nexport default function useStores(): TStore {\n  return useContext(MobXProviderContext) as TStore\n}\n\nexport function useWorkspace(): Workspace {\n  const store = useStores()\n  return store.workspace\n}\n\nexport function useLayout(): Layout {\n  const store = useStores()\n  return store.workspace.currentProject.layout\n}\n\nexport function useProject(): Project {\n  const store = useStores()\n  return store.workspace.currentProject\n}\n\nexport function useStyle(): Style {\n  const { style } = useProject()\n  return style\n}\n\nexport function useFont(): Font {\n  const { font } = useStyle()\n  return font\n}\n\nexport function useFill(): FontStyleConfig {\n  const { fill } = useStyle()\n  return fill\n}\n\nexport function useProjectUi(): ProjectUi {\n  const { ui } = useProject()\n  return ui\n}\n","export default function readFile(\n  file: File,\n): Promise<string | ArrayBuffer | null> {\n  if (file.arrayBuffer) return file.arrayBuffer()\n\n  return new Promise((resolve) => {\n    const reader = new FileReader()\n    reader.readAsArrayBuffer(file)\n    reader.onload = (e) => {\n      resolve(e.target?.result)\n    }\n  })\n}\n","import React, { useState, FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\n\nimport Button from '@material-ui/core/Button'\nimport FontDownload from '@material-ui/icons/FontDownload'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport { useFont } from 'src/store/hooks'\nimport readFile from 'src/utils/readFile'\n\n// eslint-disable-next-line import/no-webpack-loader-syntax\n// import ToTtfBufferWorder from 'worker-loader?name=static/js/ToTtfBuffer.[hash].worker.js!src/workers/ToTtfBuffer.worker'\n\nconst FontFamily: FunctionComponent<unknown> = () => {\n  const [loading, setLoading] = useState(false)\n  const { setFont } = useFont()\n\n  const hanleUploadFile = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ): void => {\n    if (\n      !event ||\n      !event.target ||\n      !event.target.files ||\n      !event.target.files[0]\n    )\n      return\n\n    const file = event.target.files[0]\n    const ext = file.name.match(/\\.([A-Z0-9]+)$/i)\n    if (!ext) return\n\n    setLoading(true)\n\n    readFile(file).then((arrBuf) => {\n      if (!(arrBuf instanceof ArrayBuffer)) {\n        setLoading(false)\n        return\n      }\n\n      setFont(arrBuf)\n        .then(() => setLoading(false))\n        .catch((e) => {\n          setLoading(false)\n          // eslint-disable-next-line no-alert\n          window.alert(e.message)\n        })\n\n      // const worker = new ToTtfBufferWorder()\n      // const postData = { buffer: arrBuf, type: ext[1] }\n      // worker.addEventListener('message', (messageEvent) => {\n      //   const { data } = messageEvent\n      //   const { buffer, name } = data\n      //   const url = URL.createObjectURL(new Blob([buffer]))\n\n      //   updateFontFace(name.fullName, url)\n      //   setTimeout(() => {\n      //     if (setFont) setFont(name.fullName, buffer)\n      //     setLoading(false)\n      //   }, 200)\n      //   worker.terminate()\n      // })\n\n      // worker.postMessage(postData, [arrBuf])\n    })\n  }\n\n  return (\n    <Button\n      component='label'\n      variant='contained'\n      color='primary'\n      fullWidth\n      size='large'\n      startIcon={\n        loading ? (\n          <CircularProgress size={22} color='inherit' />\n        ) : (\n          <FontDownload />\n        )\n      }\n      disabled={loading}\n    >\n      Select Font File\n      <input\n        hidden\n        type='file'\n        onChange={hanleUploadFile}\n        accept='.ttf,.otf,.woff'\n      />\n    </Button>\n  )\n}\n\nexport default observer(FontFamily)\n","import React, {\n  ReactNode,\n  FunctionComponent,\n  PropsWithChildren,\n  ElementType,\n} from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\n\ninterface GridInputProps {\n  before?: ReactNode\n  after?: ReactNode\n  component?: ElementType\n  childrenWidth?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8\n}\n\nconst GridInput: FunctionComponent<GridInputProps> = (\n  props: PropsWithChildren<GridInputProps>,\n): JSX.Element => {\n  const { before, children, component, after, childrenWidth } = props\n  return (\n    <Grid\n      component={component || 'label'}\n      container\n      spacing={2}\n      wrap='nowrap'\n      justify='center'\n      alignItems='center'\n    >\n      <Grid item xs={4}>\n        {typeof before === 'object' ? (\n          before\n        ) : (\n          <Typography noWrap align='right'>\n            {before}\n          </Typography>\n        )}\n      </Grid>\n      <Grid item xs={childrenWidth || 5}>\n        {children}\n      </Grid>\n      <Grid item xs>\n        {typeof after === 'object' ? (\n          after\n        ) : (\n          <Typography noWrap variant='caption'>\n            {after}\n          </Typography>\n        )}\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default GridInput\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Input from '@material-ui/core/Input'\n\nimport GridInput from 'src/app/components/GridInput/GridInput'\n\nimport { useFont } from 'src/store/hooks'\n\nconst FontSize: FunctionComponent<unknown> = () => {\n  const { size, setSize } = useFont()\n\n  const handleInput = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ): void => {\n    setSize(Number(event.target.value))\n  }\n\n  return (\n    <GridInput before='Font Size:' after='px'>\n      <Input\n        value={size}\n        fullWidth\n        type='number'\n        inputProps={{ min: 1 }}\n        onChange={handleInput}\n      />\n    </GridInput>\n  )\n}\n\nexport default observer(FontSize)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Input from '@material-ui/core/Input'\n\nimport GridInput from 'src/app/components/GridInput/GridInput'\n\nimport { useFont } from 'src/store/hooks'\n\nconst LineHeight: FunctionComponent<unknown> = () => {\n  const { lineHeight, setLineHeight } = useFont()\n\n  const handleInput = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ): void => {\n    setLineHeight(Number(event.target.value))\n  }\n\n  return (\n    <GridInput before='Line Height:' after='multiple'>\n      <Input\n        value={lineHeight}\n        fullWidth\n        type='number'\n        inputProps={{ min: 0.5, step: 0.1 }}\n        onChange={handleInput}\n      />\n    </GridInput>\n  )\n}\n\nexport default observer(LineHeight)\n","import React, { FunctionComponent } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\n\nimport FontFamily from './FontFamily'\nimport FontSize from './FontSize'\nimport LineHeight from './LineHeight'\n\nconst Font: FunctionComponent<unknown> = () => {\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <Typography>Font</Typography>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <FontFamily />\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <FontSize />\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <LineHeight />\n      </Box>\n    </>\n  )\n}\n\nexport default Font\n","import React, { useState, FunctionComponent } from 'react'\n\nimport Box from '@material-ui/core/Box'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\n\nimport { observer } from 'mobx-react'\n\nimport { useProject } from 'src/store/hooks'\n\nconst Glyphs: FunctionComponent<unknown> = () => {\n  const { text, setText } = useProject()\n  const [isIME, setIsIME] = useState(false)\n  const [inputText, setInputText] = useState(text)\n\n  const handleInput = (event: React.ChangeEvent<HTMLTextAreaElement>): void => {\n    const { value } = event.target\n    const str = Array.from(new Set(value.split(''))).join('')\n    if (isIME) {\n      setInputText(value)\n    } else {\n      setInputText(str)\n      if (str !== text) setText(str)\n    }\n  }\n\n  const handleCompositionEnd = (): void => {\n    setIsIME(false)\n    const str = Array.from(new Set(inputText.split(''))).join('')\n    setInputText(str)\n    if (str !== text) setText(str)\n  }\n\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <Typography>Glyphs</Typography>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <TextField\n          margin='none'\n          value={isIME ? inputText : text}\n          fullWidth\n          multiline\n          rows={4}\n          variant='outlined'\n          inputProps={{ spellCheck: false }}\n          onChange={handleInput}\n          onCompositionStart={() => setIsIME(true)}\n          onCompositionEnd={handleCompositionEnd}\n        />\n      </Box>\n    </>\n  )\n}\n\nexport default observer(Glyphs)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Input from '@material-ui/core/Input'\n\nimport GridInput from 'src/app/components/GridInput'\n\nimport { useLayout } from 'src/store/hooks'\n\nconst Padding: FunctionComponent<unknown> = () => {\n  const { padding, setPadding } = useLayout()\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setPadding(Number(event.target.value))\n  }\n\n  return (\n    <GridInput before='Padding:' after='px'>\n      <Input\n        value={padding}\n        fullWidth\n        type='number'\n        inputProps={{ min: 0 }}\n        onChange={handleInput}\n      />\n    </GridInput>\n  )\n}\n\nexport default observer(Padding)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Input from '@material-ui/core/Input'\n\nimport { useLayout } from 'src/store/hooks'\n\nimport GridInput from 'src/app/components/GridInput'\n\nconst Spacing: FunctionComponent<unknown> = () => {\n  const { spacing, setSpacing } = useLayout()\n\n  return (\n    <GridInput before='Spacing:' after='px'>\n      <Input\n        value={spacing}\n        fullWidth\n        type='number'\n        inputProps={{ min: 0 }}\n        onChange={(e) => setSpacing(Number(e.target.value))}\n      />\n    </GridInput>\n  )\n}\n\nexport default observer(Spacing)\n","import React, { FunctionComponent } from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\n\nimport Padding from './Padding'\nimport Spacing from './Spacing'\n// import Power from './Power'\n\nconst PackConfig: FunctionComponent<unknown> = () => {\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <Typography>Layout</Typography>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <Padding />\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <Spacing />\n      </Box>\n      {/* <Box paddingX={2} marginY={4}>\n        <Power />\n      </Box> */}\n    </>\n  )\n}\n\nexport default PackConfig\n","import React, { FunctionComponent } from 'react'\nimport Box from '@material-ui/core/Box'\nimport Input from '@material-ui/core/Input'\nimport GridInput from 'src/app/components/GridInput'\n\ninterface SetHandle {\n  (value: number): void\n}\n\ninterface FormAdjustMetricProps {\n  xAdvance: number\n  xOffset: number\n  yOffset: number\n  setXAdvance: SetHandle\n  setXOffset: SetHandle\n  setYOffset: SetHandle\n}\n\nconst FormAdjustMetric: FunctionComponent<FormAdjustMetricProps> = (\n  props: FormAdjustMetricProps,\n) => {\n  const {\n    xAdvance,\n    xOffset,\n    yOffset,\n    setXAdvance,\n    setXOffset,\n    setYOffset,\n  } = props\n\n  const getHandle = (handleSet: SetHandle) => (\n    e: React.ChangeEvent<HTMLInputElement>,\n  ) => handleSet(Number(e.target.value))\n\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <GridInput before='xAdvance:' after='px'>\n          <Input\n            value={xAdvance}\n            fullWidth\n            type='number'\n            onChange={getHandle(setXAdvance)}\n          />\n        </GridInput>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <GridInput before='xOffset:' after='px'>\n          <Input\n            value={xOffset}\n            fullWidth\n            type='number'\n            onChange={getHandle(setXOffset)}\n          />\n        </GridInput>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <GridInput before='yOffset:' after='px'>\n          <Input\n            value={yOffset}\n            fullWidth\n            type='number'\n            onChange={getHandle(setYOffset)}\n          />\n        </GridInput>\n      </Box>\n    </>\n  )\n}\n\nexport default FormAdjustMetric\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\n\nimport { useProject } from 'src/store/hooks'\n\nimport FormAdjustMetric from 'src/app/layout/common/FormAdjustMetric'\n\nconst GlobalMetric: FunctionComponent<unknown> = () => {\n  const { globalAdjustMetric } = useProject()\n  const {\n    xAdvance,\n    xOffset,\n    yOffset,\n    setXAdvance,\n    setXOffset,\n    setYOffset,\n  } = globalAdjustMetric\n\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <Typography>Global Metric Adjustment</Typography>\n      </Box>\n      <FormAdjustMetric\n        xAdvance={xAdvance}\n        xOffset={xOffset}\n        yOffset={yOffset}\n        setXAdvance={setXAdvance}\n        setXOffset={setXOffset}\n        setYOffset={setYOffset}\n      />\n    </>\n  )\n}\n\nexport default observer(GlobalMetric)\n","import React, { FunctionComponent } from 'react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Divider from '@material-ui/core/Divider'\nimport Typography from '@material-ui/core/Typography'\n\nimport Font from './modules/Font'\nimport Glyphs from './modules/Glyphs'\nimport PackConfig from './modules/PackConfig'\nimport GlobalMetric from './modules/GlobalMetric'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      overflow: 'hidden',\n      width: '256px',\n    },\n  }),\n)\n\nconst LeftBar: FunctionComponent<unknown> = () => {\n  const classes = useStyles()\n  return (\n    <Box\n      bgcolor='background.sidebar'\n      display='flex'\n      flexDirection='column'\n      overflow='hidden'\n      className={classes.root}\n    >\n      <Box bgcolor='background.sidebar' boxShadow={2} padding={2}>\n        <Typography variant='subtitle2'>Font Config</Typography>\n      </Box>\n      <Box flex={1} height={0} overflow='hidden auto'>\n        <Glyphs />\n        <Divider />\n        <Font />\n        <Divider />\n        <PackConfig />\n        <Divider />\n        <GlobalMetric />\n      </Box>\n    </Box>\n  )\n}\n\nexport default LeftBar\n","export default function formatStr(\n  str: string,\n  obj: Record<string, unknown>,\n): string {\n  return str.replace(/\\$\\w+\\$/gi, (matchs: string): string => {\n    const returns = obj[matchs.replace(/\\$/g, '')]\n    return `${returns}` === 'undefined' ? '' : `${returns}`\n  })\n}\n","import formatStr from 'src/utils/formatStr'\n\nimport { BMFont } from './toOutputInfo'\n\nconst TEMP_INFO = `<info face=\"$face$\" size=\"$size$\" bold=\"$bold$\" italic=\"$italic$\" charset=\"$charset$\" unicode=\"$unicode$\" stretchH=\"$stretchH$\" smooth=\"$smooth$\" aa=\"$aa$\" padding=\"$padding$\" spacing=\"$spacing$\" />`\nconst TEMP_COMMON = `<common lineHeight=\"$lineHeight$\" base=\"$base$\" scaleW=\"$scaleW$\" scaleH=\"$scaleH$\" pages=\"$pages$\" packed=\"$packed$\" />`\nconst TEMP_PAGE = `<page id=\"$id$\" file=\"$file$\" />`\nconst TEMP_CHARS = `<chars count=\"$count$\" />`\nconst TEMP_CHAR = `<char id=\"$id$\" x=\"$x$\" y=\"$y$\" width=\"$width$\" height=\"$height$\" xoffset=\"$xoffset$\" yoffset=\"$yoffset$\" xadvance=\"$xadvance$\" page=\"$page$\" chnl=\"$chnl$\" />`\nconst TEMP_KERNINGS = `<kernings count=\"$count$\" />`\nconst TEMP_KERNING = `<kerning first=\"$first$\" second=\"$second$\" amount=\"$amount$\" />`\n// http://www.angelcode.com/products/bmfont/doc/file_format.html\nexport default function storeToXml(bmfont: BMFont): string {\n  const { info, common, pages, chars, kernings } = bmfont\n\n  const parser = new DOMParser()\n  const xmlDOM = document.implementation.createDocument('', 'font', null)\n\n  const infoDoc = parser.parseFromString(formatStr(TEMP_INFO, info), 'text/xml')\n  xmlDOM.documentElement.appendChild(infoDoc.childNodes[0])\n\n  const commonDoc = parser.parseFromString(\n    formatStr(TEMP_COMMON, common),\n    'text/xml',\n  )\n  xmlDOM.documentElement.appendChild(commonDoc.childNodes[0])\n\n  const pagesDoc = parser.parseFromString(\n    `<pages>${pages.map((p) => formatStr(TEMP_PAGE, p))}</pages>`,\n    'text/xml',\n  )\n  xmlDOM.documentElement.appendChild(pagesDoc.childNodes[0])\n\n  const charsDoc = parser.parseFromString(\n    formatStr(TEMP_CHARS, chars),\n    'text/xml',\n  )\n\n  chars.list.forEach((char) => {\n    const charDoc = parser.parseFromString(\n      formatStr(TEMP_CHAR, char),\n      'text/xml',\n    )\n    charsDoc.childNodes[0].appendChild(charDoc.childNodes[0])\n  })\n\n  xmlDOM.documentElement.appendChild(charsDoc.childNodes[0])\n\n  if (kernings.count) {\n    const kerningsDoc = parser.parseFromString(\n      formatStr(TEMP_KERNINGS, kernings),\n      'text/xml',\n    )\n\n    kernings.list.forEach((kerning) => {\n      const kerningDoc = parser.parseFromString(\n        formatStr(TEMP_KERNING, kerning),\n        'text/xml',\n      )\n      kerningsDoc.childNodes[0].appendChild(kerningDoc.childNodes[0])\n    })\n\n    xmlDOM.documentElement.appendChild(kerningsDoc.childNodes[0])\n  }\n\n  return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>${new XMLSerializer().serializeToString(\n    xmlDOM,\n  )}`\n}\n","import formatStr from 'src/utils/formatStr'\n\nimport { BMFont } from './toOutputInfo'\n\nconst TEMP_INFO = `Font.info = {\\n\\tface = \"$face$\",\\n\\tfile = \"$file$\",\\n\\tsize = $size$,\\n\\tbold = $bold$,\\n\\titalic = $italic$,\\n\\tcharset = $charset$\\n\\tunicode = $unicode$,\\n\\tstretchH = $stretchH$,\\n\\tsmooth = $smooth$,\\n\\taa = $aa$,\\n\\tpadding = {$padding$},\\n\\tspacing = $spacing$,\\n\\tcharsCount = $charsCount$,\\n\\tkerningsCounts = $kerningsCounts$\\n}\\n\\n`\nconst TEMP_COMMON = `Font.common = {\\n\\tlineHeight = $lineHeight$,\\n\\tbase = $base$,\\n\\tscaleW = $scaleW$,\\n\\tscaleH = $scaleH$,\\n\\tpages = $pages$,\\n\\tpacked = $packed$\\n}\\n\\n`\nconst TEMP_PAGE = `\\t{ id=$id$, file=\"$file$\" }`\nconst TEMP_CHARS = `Font.chars = {\\n`\nconst TEMP_CHAR = `\\t{\\n\\t\\tid = $id$,\\n\\t\\tx = $x$,\\n\\t\\ty = $y$,\\n\\t\\twidth = $width$,\\n\\t\\theight = $height$,\\n\\t\\txoffset = $xoffset$,\\n\\t\\tyoffset = $yoffset$,\\n\\t\\txadvance = $xadvance$,\\n\\t\\tpage = 0,\\n\\t\\tchnl = 15\\n\\t}`\nconst TEMP_KERNINGS = `Font.kerning = {\\n`\nconst TEMP_KERNING = `\\t{first = $first$, second = $second$, amount = $amount$}`\n\nexport default function getLuaString(bmfont: BMFont): string {\n  const { info, common, pages, chars, kernings } = bmfont\n\n  let str = ''\n\n  str += formatStr(TEMP_INFO, {\n    ...info,\n    charset: info.charset || '\"\"',\n    charsCount: chars.count,\n    kerningsCounts: kernings.count,\n    file: pages[0].file,\n  })\n  str += formatStr(TEMP_COMMON, common)\n\n  str += `Font.pages = {\\n`\n  str += pages.map((p) => formatStr(TEMP_PAGE, p)).join(',\\n')\n  str += '\\n}\\n\\n'\n\n  str += TEMP_CHARS\n  str += chars.list.map((char) => formatStr(TEMP_CHAR, char)).join(',\\n')\n  str += '\\n}\\n\\n'\n\n  str += TEMP_KERNINGS\n  str += kernings.list\n    .map((kerning) => formatStr(TEMP_KERNING, kerning))\n    .join(',\\n')\n  str += '\\n}'\n\n  return `local Font = {}\n\n${str.replace(/\\t/g, '    ')}\n\nreturn Font\n`\n}\n","import formatStr from 'src/utils/formatStr'\n\nimport { BMFont } from './toOutputInfo'\n\nconst TEMP_INFO = `info face=\"$face$\" size=$size$ bold=$bold$ italic=$italic$ charset=$charset$ unicode=$unicode$ stretchH=$stretchH$ smooth=$smooth$ aa=$aa$ padding=$padding$ spacing=$spacing$\\n`\nconst TEMP_COMMON = `common lineHeight=$lineHeight$ base=$base$ scaleW=$scaleW$ scaleH=$scaleH$ pages=$pages$ packed=$packed$\\n`\nconst TEMP_PAGE = `page id=$id$ file=\"$file$\"\\n`\nconst TEMP_CHARS = `chars count=$count$\\n`\nconst TEMP_CHAR = `char id=$id$ x=$x$ y=$y$ width=$width$ height=$height$ xoffset=$xoffset$ yoffset=$yoffset$ xadvance=$xadvance$ page=$page$ chnl=$chnl$\\n`\nconst TEMP_KERNINGS = `kernings count=$count$\\n`\nconst TEMP_KERNING = `kerning first=$first$ second=$second$ amount=$amount$\\n`\n\nexport default function getTextString(bmfont: BMFont): string {\n  const { info, common, pages, chars, kernings } = bmfont\n\n  let str = ''\n\n  str += formatStr(TEMP_INFO, { ...info, charset: info.charset || '\"\"' })\n\n  str += formatStr(TEMP_COMMON, common)\n\n  pages.forEach((p) => {\n    str += formatStr(TEMP_PAGE, p)\n  })\n\n  str += formatStr(TEMP_CHARS, chars)\n\n  chars.list.forEach((char) => {\n    str += formatStr(TEMP_CHAR, char)\n  })\n\n  if (kernings.count) {\n    str += formatStr(TEMP_KERNINGS, kernings)\n\n    kernings.list.forEach((kerning) => {\n      str += formatStr(TEMP_KERNING, kerning)\n    })\n  }\n\n  return str\n}\n","import { Project } from 'src/store'\n\ninterface BMFontInfo extends Record<string, unknown> {\n  face: string\n  size: number\n  bold: number\n  italic: number\n  charset: string\n  unicode: number\n  stretchH: number\n  smooth: number\n  aa: number\n  padding: number[]\n  spacing: number[]\n}\n\ninterface BMFontCommon extends Record<string, unknown> {\n  lineHeight: number\n  base: number\n  scaleW: number\n  scaleH: number\n  pages: number\n  packed: number\n}\n\ninterface BMFontPage extends Record<string, unknown> {\n  id: number\n  file: string\n}\n\nexport interface BMFontChar extends Record<string, unknown> {\n  letter: string\n  id: number\n  source: HTMLImageElement | HTMLCanvasElement | null\n  x: number\n  y: number\n  width: number\n  height: number\n  xoffset: number\n  yoffset: number\n  xadvance: number\n  page: number\n  chnl: number\n}\n\ninterface BMFontChars extends Record<string, unknown> {\n  count: number\n  list: BMFontChar[]\n}\n\nexport interface BMFontKerning extends Record<string, unknown> {\n  first: number\n  second: number\n  amount: number\n}\n\ninterface BMFontKernings extends Record<string, unknown> {\n  count: number\n  list: BMFontKerning[]\n}\n\nexport interface BMFont {\n  info: BMFontInfo\n  common: BMFontCommon\n  pages: BMFontPage[]\n  chars: BMFontChars\n  kernings: BMFontKernings\n}\n\n// http://www.angelcode.com/products/bmfont/doc/file_format.html\nexport default function toOutputInfo(project: Project): BMFont {\n  const {\n    name,\n    style,\n    layout,\n    globalAdjustMetric,\n    glyphList,\n    ui: { width, height },\n  } = project\n  const { opentype, size } = style.font\n  let fontScale = 1\n  if (opentype) {\n    fontScale = (1 / opentype.unitsPerEm) * size\n  }\n  const info: BMFontInfo = {\n    face: style.font.family,\n    size: style.font.size,\n    bold: 0,\n    italic: 0,\n    charset: '',\n    unicode: 1,\n    stretchH: 100,\n    smooth: 1,\n    aa: 1,\n    padding: new Array(4).fill(layout.padding),\n    spacing: new Array(2).fill(layout.spacing),\n  }\n\n  const common: BMFontCommon = {\n    lineHeight: style.font.size,\n    base: style.font.size,\n    scaleW: width,\n    scaleH: height,\n    pages: 1,\n    packed: 0,\n  }\n\n  const pages: BMFontPage[] = [\n    {\n      id: 0,\n      file: `${name}.png`,\n    },\n  ]\n\n  const chars: BMFontChars = {\n    count: glyphList.length,\n    list: [],\n  }\n\n  const kernings: BMFontKernings = {\n    count: 0,\n    list: [],\n  }\n\n  glyphList.forEach((glyph) => {\n    const isUnEmpty = !!(glyph.width && glyph.height)\n    chars.list.push({\n      letter: glyph.letter,\n      id: glyph.letter.charCodeAt(0),\n      source: glyph.source,\n      x: glyph.x,\n      y: glyph.y,\n      width: isUnEmpty ? glyph.width + layout.padding * 2 : 0,\n      height: isUnEmpty ? glyph.height + layout.padding * 2 : 0,\n      xoffset:\n        globalAdjustMetric.xOffset +\n        glyph.adjustMetric.xOffset -\n        (isUnEmpty ? glyph.trimOffsetLeft : 0),\n      yoffset:\n        globalAdjustMetric.yOffset +\n        glyph.adjustMetric.yOffset -\n        (isUnEmpty ? glyph.trimOffsetTop : 0),\n      xadvance:\n        Math.ceil(glyph.fontWidth) +\n        globalAdjustMetric.xAdvance +\n        glyph.adjustMetric.xAdvance,\n      page: 0,\n      chnl: 15,\n    })\n    if (opentype) {\n      glyphList.forEach(({ letter }) => {\n        const amount = Math.round(\n          opentype.getKerningValue(\n            opentype.charToGlyphIndex(glyph.letter),\n            opentype.charToGlyphIndex(letter),\n          ) *\n            fontScale +\n            (glyph.kerning.get(letter) || 0),\n        )\n        if (amount) {\n          kernings.list.push({\n            first: glyph.letter.charCodeAt(0),\n            second: letter.charCodeAt(0),\n            amount,\n          })\n        }\n      })\n    } else {\n      glyph.kerning.forEach((amount, letter) => {\n        if (amount)\n          kernings.list.push({\n            first: glyph.letter.charCodeAt(0),\n            second: letter.charCodeAt(0),\n            amount,\n          })\n      })\n    }\n  })\n  kernings.count = kernings.list.length\n\n  chars.list.sort((a, b) => a.id - b.id)\n\n  return {\n    info,\n    common,\n    pages,\n    chars,\n    kernings,\n  }\n}\n","/* eslint-disable */\nimport * as $protobuf from 'protobufjs/minimal'\n\n// Common aliases\nconst $Reader = $protobuf.Reader,\n  $Writer = $protobuf.Writer,\n  $util = $protobuf.util\n\n// Exported root namespace\nconst $root = $protobuf.roots['default'] || ($protobuf.roots['default'] = {})\n\nexport const Metric = ($root.Metric = (() => {\n  /**\n   * Properties of a Metric.\n   * @exports IMetric\n   * @interface IMetric\n   * @property {number|null} [xAdvance] Metric xAdvance\n   * @property {number|null} [xOffset] Metric xOffset\n   * @property {number|null} [yOffset] Metric yOffset\n   */\n\n  /**\n   * Constructs a new Metric.\n   * @exports Metric\n   * @classdesc Represents a Metric.\n   * @implements IMetric\n   * @constructor\n   * @param {IMetric=} [properties] Properties to set\n   */\n  function Metric(properties) {\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * Metric xAdvance.\n   * @member {number} xAdvance\n   * @memberof Metric\n   * @instance\n   */\n  Metric.prototype.xAdvance = 0\n\n  /**\n   * Metric xOffset.\n   * @member {number} xOffset\n   * @memberof Metric\n   * @instance\n   */\n  Metric.prototype.xOffset = 0\n\n  /**\n   * Metric yOffset.\n   * @member {number} yOffset\n   * @memberof Metric\n   * @instance\n   */\n  Metric.prototype.yOffset = 0\n\n  /**\n   * Creates a new Metric instance using the specified properties.\n   * @function create\n   * @memberof Metric\n   * @static\n   * @param {IMetric=} [properties] Properties to set\n   * @returns {Metric} Metric instance\n   */\n  Metric.create = function create(properties) {\n    return new Metric(properties)\n  }\n\n  /**\n   * Encodes the specified Metric message. Does not implicitly {@link Metric.verify|verify} messages.\n   * @function encode\n   * @memberof Metric\n   * @static\n   * @param {IMetric} message Metric message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Metric.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (\n      message.xAdvance != null &&\n      Object.hasOwnProperty.call(message, 'xAdvance')\n    )\n      writer.uint32(/* id 1, wireType 0 =*/ 8).sint32(message.xAdvance)\n    if (\n      message.xOffset != null &&\n      Object.hasOwnProperty.call(message, 'xOffset')\n    )\n      writer.uint32(/* id 2, wireType 0 =*/ 16).sint32(message.xOffset)\n    if (\n      message.yOffset != null &&\n      Object.hasOwnProperty.call(message, 'yOffset')\n    )\n      writer.uint32(/* id 3, wireType 0 =*/ 24).sint32(message.yOffset)\n    return writer\n  }\n\n  /**\n   * Encodes the specified Metric message, length delimited. Does not implicitly {@link Metric.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof Metric\n   * @static\n   * @param {IMetric} message Metric message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Metric.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a Metric message from the specified reader or buffer.\n   * @function decode\n   * @memberof Metric\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {Metric} Metric\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Metric.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.Metric()\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.xAdvance = reader.sint32()\n          break\n        case 2:\n          message.xOffset = reader.sint32()\n          break\n        case 3:\n          message.yOffset = reader.sint32()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a Metric message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof Metric\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {Metric} Metric\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Metric.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a Metric message.\n   * @function verify\n   * @memberof Metric\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  Metric.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.xAdvance != null && message.hasOwnProperty('xAdvance'))\n      if (!$util.isInteger(message.xAdvance))\n        return 'xAdvance: integer expected'\n    if (message.xOffset != null && message.hasOwnProperty('xOffset'))\n      if (!$util.isInteger(message.xOffset)) return 'xOffset: integer expected'\n    if (message.yOffset != null && message.hasOwnProperty('yOffset'))\n      if (!$util.isInteger(message.yOffset)) return 'yOffset: integer expected'\n    return null\n  }\n\n  /**\n   * Creates a Metric message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof Metric\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {Metric} Metric\n   */\n  Metric.fromObject = function fromObject(object) {\n    if (object instanceof $root.Metric) return object\n    let message = new $root.Metric()\n    if (object.xAdvance != null) message.xAdvance = object.xAdvance | 0\n    if (object.xOffset != null) message.xOffset = object.xOffset | 0\n    if (object.yOffset != null) message.yOffset = object.yOffset | 0\n    return message\n  }\n\n  /**\n   * Creates a plain object from a Metric message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof Metric\n   * @static\n   * @param {Metric} message Metric\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  Metric.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.defaults) {\n      object.xAdvance = 0\n      object.xOffset = 0\n      object.yOffset = 0\n    }\n    if (message.xAdvance != null && message.hasOwnProperty('xAdvance'))\n      object.xAdvance = message.xAdvance\n    if (message.xOffset != null && message.hasOwnProperty('xOffset'))\n      object.xOffset = message.xOffset\n    if (message.yOffset != null && message.hasOwnProperty('yOffset'))\n      object.yOffset = message.yOffset\n    return object\n  }\n\n  /**\n   * Converts this Metric to JSON.\n   * @function toJSON\n   * @memberof Metric\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  Metric.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return Metric\n})())\n\nexport const GradientColor = ($root.GradientColor = (() => {\n  /**\n   * Properties of a GradientColor.\n   * @exports IGradientColor\n   * @interface IGradientColor\n   * @property {number|null} [id] GradientColor id\n   * @property {number|null} [offset] GradientColor offset\n   * @property {string|null} [color] GradientColor color\n   */\n\n  /**\n   * Constructs a new GradientColor.\n   * @exports GradientColor\n   * @classdesc Represents a GradientColor.\n   * @implements IGradientColor\n   * @constructor\n   * @param {IGradientColor=} [properties] Properties to set\n   */\n  function GradientColor(properties) {\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * GradientColor id.\n   * @member {number} id\n   * @memberof GradientColor\n   * @instance\n   */\n  GradientColor.prototype.id = 0\n\n  /**\n   * GradientColor offset.\n   * @member {number} offset\n   * @memberof GradientColor\n   * @instance\n   */\n  GradientColor.prototype.offset = 0\n\n  /**\n   * GradientColor color.\n   * @member {string} color\n   * @memberof GradientColor\n   * @instance\n   */\n  GradientColor.prototype.color = ''\n\n  /**\n   * Creates a new GradientColor instance using the specified properties.\n   * @function create\n   * @memberof GradientColor\n   * @static\n   * @param {IGradientColor=} [properties] Properties to set\n   * @returns {GradientColor} GradientColor instance\n   */\n  GradientColor.create = function create(properties) {\n    return new GradientColor(properties)\n  }\n\n  /**\n   * Encodes the specified GradientColor message. Does not implicitly {@link GradientColor.verify|verify} messages.\n   * @function encode\n   * @memberof GradientColor\n   * @static\n   * @param {IGradientColor} message GradientColor message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  GradientColor.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (message.id != null && Object.hasOwnProperty.call(message, 'id'))\n      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.id)\n    if (message.offset != null && Object.hasOwnProperty.call(message, 'offset'))\n      writer.uint32(/* id 2, wireType 0 =*/ 16).sint32(message.offset)\n    if (message.color != null && Object.hasOwnProperty.call(message, 'color'))\n      writer.uint32(/* id 3, wireType 2 =*/ 26).string(message.color)\n    return writer\n  }\n\n  /**\n   * Encodes the specified GradientColor message, length delimited. Does not implicitly {@link GradientColor.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof GradientColor\n   * @static\n   * @param {IGradientColor} message GradientColor message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  GradientColor.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a GradientColor message from the specified reader or buffer.\n   * @function decode\n   * @memberof GradientColor\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {GradientColor} GradientColor\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  GradientColor.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.GradientColor()\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.id = reader.int32()\n          break\n        case 2:\n          message.offset = reader.sint32()\n          break\n        case 3:\n          message.color = reader.string()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a GradientColor message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof GradientColor\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {GradientColor} GradientColor\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  GradientColor.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a GradientColor message.\n   * @function verify\n   * @memberof GradientColor\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  GradientColor.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.id != null && message.hasOwnProperty('id'))\n      if (!$util.isInteger(message.id)) return 'id: integer expected'\n    if (message.offset != null && message.hasOwnProperty('offset'))\n      if (!$util.isInteger(message.offset)) return 'offset: integer expected'\n    if (message.color != null && message.hasOwnProperty('color'))\n      if (!$util.isString(message.color)) return 'color: string expected'\n    return null\n  }\n\n  /**\n   * Creates a GradientColor message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof GradientColor\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {GradientColor} GradientColor\n   */\n  GradientColor.fromObject = function fromObject(object) {\n    if (object instanceof $root.GradientColor) return object\n    let message = new $root.GradientColor()\n    if (object.id != null) message.id = object.id | 0\n    if (object.offset != null) message.offset = object.offset | 0\n    if (object.color != null) message.color = String(object.color)\n    return message\n  }\n\n  /**\n   * Creates a plain object from a GradientColor message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof GradientColor\n   * @static\n   * @param {GradientColor} message GradientColor\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  GradientColor.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.defaults) {\n      object.id = 0\n      object.offset = 0\n      object.color = ''\n    }\n    if (message.id != null && message.hasOwnProperty('id'))\n      object.id = message.id\n    if (message.offset != null && message.hasOwnProperty('offset'))\n      object.offset = message.offset\n    if (message.color != null && message.hasOwnProperty('color'))\n      object.color = message.color\n    return object\n  }\n\n  /**\n   * Converts this GradientColor to JSON.\n   * @function toJSON\n   * @memberof GradientColor\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  GradientColor.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return GradientColor\n})())\n\nexport const Gradient = ($root.Gradient = (() => {\n  /**\n   * Properties of a Gradient.\n   * @exports IGradient\n   * @interface IGradient\n   * @property {number|null} [type] Gradient type\n   * @property {number|null} [angle] Gradient angle\n   * @property {Array.<IGradientColor>|null} [palette] Gradient palette\n   */\n\n  /**\n   * Constructs a new Gradient.\n   * @exports Gradient\n   * @classdesc Represents a Gradient.\n   * @implements IGradient\n   * @constructor\n   * @param {IGradient=} [properties] Properties to set\n   */\n  function Gradient(properties) {\n    this.palette = []\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * Gradient type.\n   * @member {number} type\n   * @memberof Gradient\n   * @instance\n   */\n  Gradient.prototype.type = 0\n\n  /**\n   * Gradient angle.\n   * @member {number} angle\n   * @memberof Gradient\n   * @instance\n   */\n  Gradient.prototype.angle = 0\n\n  /**\n   * Gradient palette.\n   * @member {Array.<IGradientColor>} palette\n   * @memberof Gradient\n   * @instance\n   */\n  Gradient.prototype.palette = $util.emptyArray\n\n  /**\n   * Creates a new Gradient instance using the specified properties.\n   * @function create\n   * @memberof Gradient\n   * @static\n   * @param {IGradient=} [properties] Properties to set\n   * @returns {Gradient} Gradient instance\n   */\n  Gradient.create = function create(properties) {\n    return new Gradient(properties)\n  }\n\n  /**\n   * Encodes the specified Gradient message. Does not implicitly {@link Gradient.verify|verify} messages.\n   * @function encode\n   * @memberof Gradient\n   * @static\n   * @param {IGradient} message Gradient message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Gradient.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (message.type != null && Object.hasOwnProperty.call(message, 'type'))\n      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.type)\n    if (message.angle != null && Object.hasOwnProperty.call(message, 'angle'))\n      writer.uint32(/* id 2, wireType 5 =*/ 21).float(message.angle)\n    if (message.palette != null && message.palette.length)\n      for (let i = 0; i < message.palette.length; ++i)\n        $root.GradientColor.encode(\n          message.palette[i],\n          writer.uint32(/* id 3, wireType 2 =*/ 26).fork(),\n        ).ldelim()\n    return writer\n  }\n\n  /**\n   * Encodes the specified Gradient message, length delimited. Does not implicitly {@link Gradient.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof Gradient\n   * @static\n   * @param {IGradient} message Gradient message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Gradient.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a Gradient message from the specified reader or buffer.\n   * @function decode\n   * @memberof Gradient\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {Gradient} Gradient\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Gradient.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.Gradient()\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.int32()\n          break\n        case 2:\n          message.angle = reader.float()\n          break\n        case 3:\n          if (!(message.palette && message.palette.length)) message.palette = []\n          message.palette.push(\n            $root.GradientColor.decode(reader, reader.uint32()),\n          )\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a Gradient message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof Gradient\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {Gradient} Gradient\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Gradient.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a Gradient message.\n   * @function verify\n   * @memberof Gradient\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  Gradient.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.type != null && message.hasOwnProperty('type'))\n      if (!$util.isInteger(message.type)) return 'type: integer expected'\n    if (message.angle != null && message.hasOwnProperty('angle'))\n      if (typeof message.angle !== 'number') return 'angle: number expected'\n    if (message.palette != null && message.hasOwnProperty('palette')) {\n      if (!Array.isArray(message.palette)) return 'palette: array expected'\n      for (let i = 0; i < message.palette.length; ++i) {\n        let error = $root.GradientColor.verify(message.palette[i])\n        if (error) return 'palette.' + error\n      }\n    }\n    return null\n  }\n\n  /**\n   * Creates a Gradient message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof Gradient\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {Gradient} Gradient\n   */\n  Gradient.fromObject = function fromObject(object) {\n    if (object instanceof $root.Gradient) return object\n    let message = new $root.Gradient()\n    if (object.type != null) message.type = object.type | 0\n    if (object.angle != null) message.angle = Number(object.angle)\n    if (object.palette) {\n      if (!Array.isArray(object.palette))\n        throw TypeError('.Gradient.palette: array expected')\n      message.palette = []\n      for (let i = 0; i < object.palette.length; ++i) {\n        if (typeof object.palette[i] !== 'object')\n          throw TypeError('.Gradient.palette: object expected')\n        message.palette[i] = $root.GradientColor.fromObject(object.palette[i])\n      }\n    }\n    return message\n  }\n\n  /**\n   * Creates a plain object from a Gradient message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof Gradient\n   * @static\n   * @param {Gradient} message Gradient\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  Gradient.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.arrays || options.defaults) object.palette = []\n    if (options.defaults) {\n      object.type = 0\n      object.angle = 0\n    }\n    if (message.type != null && message.hasOwnProperty('type'))\n      object.type = message.type\n    if (message.angle != null && message.hasOwnProperty('angle'))\n      object.angle =\n        options.json && !isFinite(message.angle)\n          ? String(message.angle)\n          : message.angle\n    if (message.palette && message.palette.length) {\n      object.palette = []\n      for (let j = 0; j < message.palette.length; ++j)\n        object.palette[j] = $root.GradientColor.toObject(\n          message.palette[j],\n          options,\n        )\n    }\n    return object\n  }\n\n  /**\n   * Converts this Gradient to JSON.\n   * @function toJSON\n   * @memberof Gradient\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  Gradient.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return Gradient\n})())\n\nexport const PatternTexture = ($root.PatternTexture = (() => {\n  /**\n   * Properties of a PatternTexture.\n   * @exports IPatternTexture\n   * @interface IPatternTexture\n   * @property {Uint8Array|null} [buffer] PatternTexture buffer\n   * @property {number|null} [scale] PatternTexture scale\n   * @property {string|null} [repetition] PatternTexture repetition\n   */\n\n  /**\n   * Constructs a new PatternTexture.\n   * @exports PatternTexture\n   * @classdesc Represents a PatternTexture.\n   * @implements IPatternTexture\n   * @constructor\n   * @param {IPatternTexture=} [properties] Properties to set\n   */\n  function PatternTexture(properties) {\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * PatternTexture buffer.\n   * @member {Uint8Array} buffer\n   * @memberof PatternTexture\n   * @instance\n   */\n  PatternTexture.prototype.buffer = $util.newBuffer([])\n\n  /**\n   * PatternTexture scale.\n   * @member {number} scale\n   * @memberof PatternTexture\n   * @instance\n   */\n  PatternTexture.prototype.scale = 0\n\n  /**\n   * PatternTexture repetition.\n   * @member {string} repetition\n   * @memberof PatternTexture\n   * @instance\n   */\n  PatternTexture.prototype.repetition = ''\n\n  /**\n   * Creates a new PatternTexture instance using the specified properties.\n   * @function create\n   * @memberof PatternTexture\n   * @static\n   * @param {IPatternTexture=} [properties] Properties to set\n   * @returns {PatternTexture} PatternTexture instance\n   */\n  PatternTexture.create = function create(properties) {\n    return new PatternTexture(properties)\n  }\n\n  /**\n   * Encodes the specified PatternTexture message. Does not implicitly {@link PatternTexture.verify|verify} messages.\n   * @function encode\n   * @memberof PatternTexture\n   * @static\n   * @param {IPatternTexture} message PatternTexture message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  PatternTexture.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (message.buffer != null && Object.hasOwnProperty.call(message, 'buffer'))\n      writer.uint32(/* id 1, wireType 2 =*/ 10).bytes(message.buffer)\n    if (message.scale != null && Object.hasOwnProperty.call(message, 'scale'))\n      writer.uint32(/* id 2, wireType 1 =*/ 17).double(message.scale)\n    if (\n      message.repetition != null &&\n      Object.hasOwnProperty.call(message, 'repetition')\n    )\n      writer.uint32(/* id 3, wireType 2 =*/ 26).string(message.repetition)\n    return writer\n  }\n\n  /**\n   * Encodes the specified PatternTexture message, length delimited. Does not implicitly {@link PatternTexture.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof PatternTexture\n   * @static\n   * @param {IPatternTexture} message PatternTexture message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  PatternTexture.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a PatternTexture message from the specified reader or buffer.\n   * @function decode\n   * @memberof PatternTexture\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {PatternTexture} PatternTexture\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  PatternTexture.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.PatternTexture()\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.buffer = reader.bytes()\n          break\n        case 2:\n          message.scale = reader.double()\n          break\n        case 3:\n          message.repetition = reader.string()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a PatternTexture message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof PatternTexture\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {PatternTexture} PatternTexture\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  PatternTexture.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a PatternTexture message.\n   * @function verify\n   * @memberof PatternTexture\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  PatternTexture.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.buffer != null && message.hasOwnProperty('buffer'))\n      if (\n        !(\n          (message.buffer && typeof message.buffer.length === 'number') ||\n          $util.isString(message.buffer)\n        )\n      )\n        return 'buffer: buffer expected'\n    if (message.scale != null && message.hasOwnProperty('scale'))\n      if (typeof message.scale !== 'number') return 'scale: number expected'\n    if (message.repetition != null && message.hasOwnProperty('repetition'))\n      if (!$util.isString(message.repetition))\n        return 'repetition: string expected'\n    return null\n  }\n\n  /**\n   * Creates a PatternTexture message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof PatternTexture\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {PatternTexture} PatternTexture\n   */\n  PatternTexture.fromObject = function fromObject(object) {\n    if (object instanceof $root.PatternTexture) return object\n    let message = new $root.PatternTexture()\n    if (object.buffer != null)\n      if (typeof object.buffer === 'string')\n        $util.base64.decode(\n          object.buffer,\n          (message.buffer = $util.newBuffer(\n            $util.base64.length(object.buffer),\n          )),\n          0,\n        )\n      else if (object.buffer.length) message.buffer = object.buffer\n    if (object.scale != null) message.scale = Number(object.scale)\n    if (object.repetition != null)\n      message.repetition = String(object.repetition)\n    return message\n  }\n\n  /**\n   * Creates a plain object from a PatternTexture message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof PatternTexture\n   * @static\n   * @param {PatternTexture} message PatternTexture\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  PatternTexture.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.defaults) {\n      if (options.bytes === String) object.buffer = ''\n      else {\n        object.buffer = []\n        if (options.bytes !== Array)\n          object.buffer = $util.newBuffer(object.buffer)\n      }\n      object.scale = 0\n      object.repetition = ''\n    }\n    if (message.buffer != null && message.hasOwnProperty('buffer'))\n      object.buffer =\n        options.bytes === String\n          ? $util.base64.encode(message.buffer, 0, message.buffer.length)\n          : options.bytes === Array\n          ? Array.prototype.slice.call(message.buffer)\n          : message.buffer\n    if (message.scale != null && message.hasOwnProperty('scale'))\n      object.scale =\n        options.json && !isFinite(message.scale)\n          ? String(message.scale)\n          : message.scale\n    if (message.repetition != null && message.hasOwnProperty('repetition'))\n      object.repetition = message.repetition\n    return object\n  }\n\n  /**\n   * Converts this PatternTexture to JSON.\n   * @function toJSON\n   * @memberof PatternTexture\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  PatternTexture.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return PatternTexture\n})())\n\nexport const Fill = ($root.Fill = (() => {\n  /**\n   * Properties of a Fill.\n   * @exports IFill\n   * @interface IFill\n   * @property {number|null} [type] Fill type\n   * @property {string|null} [color] Fill color\n   * @property {IGradient|null} [gradient] Fill gradient\n   * @property {IPatternTexture|null} [patternTexture] Fill patternTexture\n   * @property {number|null} [width] Fill width\n   * @property {string|null} [lineCap] Fill lineCap\n   * @property {string|null} [lineJoin] Fill lineJoin\n   */\n\n  /**\n   * Constructs a new Fill.\n   * @exports Fill\n   * @classdesc Represents a Fill.\n   * @implements IFill\n   * @constructor\n   * @param {IFill=} [properties] Properties to set\n   */\n  function Fill(properties) {\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * Fill type.\n   * @member {number} type\n   * @memberof Fill\n   * @instance\n   */\n  Fill.prototype.type = 0\n\n  /**\n   * Fill color.\n   * @member {string} color\n   * @memberof Fill\n   * @instance\n   */\n  Fill.prototype.color = ''\n\n  /**\n   * Fill gradient.\n   * @member {IGradient|null|undefined} gradient\n   * @memberof Fill\n   * @instance\n   */\n  Fill.prototype.gradient = null\n\n  /**\n   * Fill patternTexture.\n   * @member {IPatternTexture|null|undefined} patternTexture\n   * @memberof Fill\n   * @instance\n   */\n  Fill.prototype.patternTexture = null\n\n  /**\n   * Fill width.\n   * @member {number} width\n   * @memberof Fill\n   * @instance\n   */\n  Fill.prototype.width = 0\n\n  /**\n   * Fill lineCap.\n   * @member {string} lineCap\n   * @memberof Fill\n   * @instance\n   */\n  Fill.prototype.lineCap = ''\n\n  /**\n   * Fill lineJoin.\n   * @member {string} lineJoin\n   * @memberof Fill\n   * @instance\n   */\n  Fill.prototype.lineJoin = ''\n\n  /**\n   * Creates a new Fill instance using the specified properties.\n   * @function create\n   * @memberof Fill\n   * @static\n   * @param {IFill=} [properties] Properties to set\n   * @returns {Fill} Fill instance\n   */\n  Fill.create = function create(properties) {\n    return new Fill(properties)\n  }\n\n  /**\n   * Encodes the specified Fill message. Does not implicitly {@link Fill.verify|verify} messages.\n   * @function encode\n   * @memberof Fill\n   * @static\n   * @param {IFill} message Fill message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Fill.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (message.type != null && Object.hasOwnProperty.call(message, 'type'))\n      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.type)\n    if (message.color != null && Object.hasOwnProperty.call(message, 'color'))\n      writer.uint32(/* id 2, wireType 2 =*/ 18).string(message.color)\n    if (\n      message.gradient != null &&\n      Object.hasOwnProperty.call(message, 'gradient')\n    )\n      $root.Gradient.encode(\n        message.gradient,\n        writer.uint32(/* id 3, wireType 2 =*/ 26).fork(),\n      ).ldelim()\n    if (\n      message.patternTexture != null &&\n      Object.hasOwnProperty.call(message, 'patternTexture')\n    )\n      $root.PatternTexture.encode(\n        message.patternTexture,\n        writer.uint32(/* id 4, wireType 2 =*/ 34).fork(),\n      ).ldelim()\n    if (message.width != null && Object.hasOwnProperty.call(message, 'width'))\n      writer.uint32(/* id 5, wireType 0 =*/ 40).int32(message.width)\n    if (\n      message.lineCap != null &&\n      Object.hasOwnProperty.call(message, 'lineCap')\n    )\n      writer.uint32(/* id 6, wireType 2 =*/ 50).string(message.lineCap)\n    if (\n      message.lineJoin != null &&\n      Object.hasOwnProperty.call(message, 'lineJoin')\n    )\n      writer.uint32(/* id 7, wireType 2 =*/ 58).string(message.lineJoin)\n    return writer\n  }\n\n  /**\n   * Encodes the specified Fill message, length delimited. Does not implicitly {@link Fill.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof Fill\n   * @static\n   * @param {IFill} message Fill message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Fill.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a Fill message from the specified reader or buffer.\n   * @function decode\n   * @memberof Fill\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {Fill} Fill\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Fill.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.Fill()\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.int32()\n          break\n        case 2:\n          message.color = reader.string()\n          break\n        case 3:\n          message.gradient = $root.Gradient.decode(reader, reader.uint32())\n          break\n        case 4:\n          message.patternTexture = $root.PatternTexture.decode(\n            reader,\n            reader.uint32(),\n          )\n          break\n        case 5:\n          message.width = reader.int32()\n          break\n        case 6:\n          message.lineCap = reader.string()\n          break\n        case 7:\n          message.lineJoin = reader.string()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a Fill message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof Fill\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {Fill} Fill\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Fill.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a Fill message.\n   * @function verify\n   * @memberof Fill\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  Fill.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.type != null && message.hasOwnProperty('type'))\n      if (!$util.isInteger(message.type)) return 'type: integer expected'\n    if (message.color != null && message.hasOwnProperty('color'))\n      if (!$util.isString(message.color)) return 'color: string expected'\n    if (message.gradient != null && message.hasOwnProperty('gradient')) {\n      let error = $root.Gradient.verify(message.gradient)\n      if (error) return 'gradient.' + error\n    }\n    if (\n      message.patternTexture != null &&\n      message.hasOwnProperty('patternTexture')\n    ) {\n      let error = $root.PatternTexture.verify(message.patternTexture)\n      if (error) return 'patternTexture.' + error\n    }\n    if (message.width != null && message.hasOwnProperty('width'))\n      if (!$util.isInteger(message.width)) return 'width: integer expected'\n    if (message.lineCap != null && message.hasOwnProperty('lineCap'))\n      if (!$util.isString(message.lineCap)) return 'lineCap: string expected'\n    if (message.lineJoin != null && message.hasOwnProperty('lineJoin'))\n      if (!$util.isString(message.lineJoin)) return 'lineJoin: string expected'\n    return null\n  }\n\n  /**\n   * Creates a Fill message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof Fill\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {Fill} Fill\n   */\n  Fill.fromObject = function fromObject(object) {\n    if (object instanceof $root.Fill) return object\n    let message = new $root.Fill()\n    if (object.type != null) message.type = object.type | 0\n    if (object.color != null) message.color = String(object.color)\n    if (object.gradient != null) {\n      if (typeof object.gradient !== 'object')\n        throw TypeError('.Fill.gradient: object expected')\n      message.gradient = $root.Gradient.fromObject(object.gradient)\n    }\n    if (object.patternTexture != null) {\n      if (typeof object.patternTexture !== 'object')\n        throw TypeError('.Fill.patternTexture: object expected')\n      message.patternTexture = $root.PatternTexture.fromObject(\n        object.patternTexture,\n      )\n    }\n    if (object.width != null) message.width = object.width | 0\n    if (object.lineCap != null) message.lineCap = String(object.lineCap)\n    if (object.lineJoin != null) message.lineJoin = String(object.lineJoin)\n    return message\n  }\n\n  /**\n   * Creates a plain object from a Fill message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof Fill\n   * @static\n   * @param {Fill} message Fill\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  Fill.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.defaults) {\n      object.type = 0\n      object.color = ''\n      object.gradient = null\n      object.patternTexture = null\n      object.width = 0\n      object.lineCap = ''\n      object.lineJoin = ''\n    }\n    if (message.type != null && message.hasOwnProperty('type'))\n      object.type = message.type\n    if (message.color != null && message.hasOwnProperty('color'))\n      object.color = message.color\n    if (message.gradient != null && message.hasOwnProperty('gradient'))\n      object.gradient = $root.Gradient.toObject(message.gradient, options)\n    if (\n      message.patternTexture != null &&\n      message.hasOwnProperty('patternTexture')\n    )\n      object.patternTexture = $root.PatternTexture.toObject(\n        message.patternTexture,\n        options,\n      )\n    if (message.width != null && message.hasOwnProperty('width'))\n      object.width = message.width\n    if (message.lineCap != null && message.hasOwnProperty('lineCap'))\n      object.lineCap = message.lineCap\n    if (message.lineJoin != null && message.hasOwnProperty('lineJoin'))\n      object.lineJoin = message.lineJoin\n    return object\n  }\n\n  /**\n   * Converts this Fill to JSON.\n   * @function toJSON\n   * @memberof Fill\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  Fill.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return Fill\n})())\n\nexport const Font = ($root.Font = (() => {\n  /**\n   * Properties of a Font.\n   * @exports IFont\n   * @interface IFont\n   * @property {Uint8Array|null} [font] Font font\n   * @property {string|null} [family] Font family\n   * @property {number|null} [size] Font size\n   * @property {number|null} [lineHeight] Font lineHeight\n   */\n\n  /**\n   * Constructs a new Font.\n   * @exports Font\n   * @classdesc Represents a Font.\n   * @implements IFont\n   * @constructor\n   * @param {IFont=} [properties] Properties to set\n   */\n  function Font(properties) {\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * Font font.\n   * @member {Uint8Array} font\n   * @memberof Font\n   * @instance\n   */\n  Font.prototype.font = $util.newBuffer([])\n\n  /**\n   * Font family.\n   * @member {string} family\n   * @memberof Font\n   * @instance\n   */\n  Font.prototype.family = ''\n\n  /**\n   * Font size.\n   * @member {number} size\n   * @memberof Font\n   * @instance\n   */\n  Font.prototype.size = 0\n\n  /**\n   * Font lineHeight.\n   * @member {number} lineHeight\n   * @memberof Font\n   * @instance\n   */\n  Font.prototype.lineHeight = 0\n\n  /**\n   * Creates a new Font instance using the specified properties.\n   * @function create\n   * @memberof Font\n   * @static\n   * @param {IFont=} [properties] Properties to set\n   * @returns {Font} Font instance\n   */\n  Font.create = function create(properties) {\n    return new Font(properties)\n  }\n\n  /**\n   * Encodes the specified Font message. Does not implicitly {@link Font.verify|verify} messages.\n   * @function encode\n   * @memberof Font\n   * @static\n   * @param {IFont} message Font message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Font.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (message.font != null && Object.hasOwnProperty.call(message, 'font'))\n      writer.uint32(/* id 1, wireType 2 =*/ 10).bytes(message.font)\n    if (message.family != null && Object.hasOwnProperty.call(message, 'family'))\n      writer.uint32(/* id 2, wireType 2 =*/ 18).string(message.family)\n    if (message.size != null && Object.hasOwnProperty.call(message, 'size'))\n      writer.uint32(/* id 3, wireType 0 =*/ 24).int32(message.size)\n    if (\n      message.lineHeight != null &&\n      Object.hasOwnProperty.call(message, 'lineHeight')\n    )\n      writer.uint32(/* id 4, wireType 0 =*/ 32).int32(message.lineHeight)\n    return writer\n  }\n\n  /**\n   * Encodes the specified Font message, length delimited. Does not implicitly {@link Font.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof Font\n   * @static\n   * @param {IFont} message Font message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Font.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a Font message from the specified reader or buffer.\n   * @function decode\n   * @memberof Font\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {Font} Font\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Font.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.Font()\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.font = reader.bytes()\n          break\n        case 2:\n          message.family = reader.string()\n          break\n        case 3:\n          message.size = reader.int32()\n          break\n        case 4:\n          message.lineHeight = reader.int32()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a Font message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof Font\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {Font} Font\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Font.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a Font message.\n   * @function verify\n   * @memberof Font\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  Font.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.font != null && message.hasOwnProperty('font'))\n      if (\n        !(\n          (message.font && typeof message.font.length === 'number') ||\n          $util.isString(message.font)\n        )\n      )\n        return 'font: buffer expected'\n    if (message.family != null && message.hasOwnProperty('family'))\n      if (!$util.isString(message.family)) return 'family: string expected'\n    if (message.size != null && message.hasOwnProperty('size'))\n      if (!$util.isInteger(message.size)) return 'size: integer expected'\n    if (message.lineHeight != null && message.hasOwnProperty('lineHeight'))\n      if (!$util.isInteger(message.lineHeight))\n        return 'lineHeight: integer expected'\n    return null\n  }\n\n  /**\n   * Creates a Font message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof Font\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {Font} Font\n   */\n  Font.fromObject = function fromObject(object) {\n    if (object instanceof $root.Font) return object\n    let message = new $root.Font()\n    if (object.font != null)\n      if (typeof object.font === 'string')\n        $util.base64.decode(\n          object.font,\n          (message.font = $util.newBuffer($util.base64.length(object.font))),\n          0,\n        )\n      else if (object.font.length) message.font = object.font\n    if (object.family != null) message.family = String(object.family)\n    if (object.size != null) message.size = object.size | 0\n    if (object.lineHeight != null) message.lineHeight = object.lineHeight | 0\n    return message\n  }\n\n  /**\n   * Creates a plain object from a Font message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof Font\n   * @static\n   * @param {Font} message Font\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  Font.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.defaults) {\n      if (options.bytes === String) object.font = ''\n      else {\n        object.font = []\n        if (options.bytes !== Array) object.font = $util.newBuffer(object.font)\n      }\n      object.family = ''\n      object.size = 0\n      object.lineHeight = 0\n    }\n    if (message.font != null && message.hasOwnProperty('font'))\n      object.font =\n        options.bytes === String\n          ? $util.base64.encode(message.font, 0, message.font.length)\n          : options.bytes === Array\n          ? Array.prototype.slice.call(message.font)\n          : message.font\n    if (message.family != null && message.hasOwnProperty('family'))\n      object.family = message.family\n    if (message.size != null && message.hasOwnProperty('size'))\n      object.size = message.size\n    if (message.lineHeight != null && message.hasOwnProperty('lineHeight'))\n      object.lineHeight = message.lineHeight\n    return object\n  }\n\n  /**\n   * Converts this Font to JSON.\n   * @function toJSON\n   * @memberof Font\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  Font.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return Font\n})())\n\nexport const GlyphFont = ($root.GlyphFont = (() => {\n  /**\n   * Properties of a GlyphFont.\n   * @exports IGlyphFont\n   * @interface IGlyphFont\n   * @property {string|null} [letter] GlyphFont letter\n   * @property {IMetric|null} [adjustMetric] GlyphFont adjustMetric\n   * @property {Object.<string,number>|null} [kerning] GlyphFont kerning\n   */\n\n  /**\n   * Constructs a new GlyphFont.\n   * @exports GlyphFont\n   * @classdesc Represents a GlyphFont.\n   * @implements IGlyphFont\n   * @constructor\n   * @param {IGlyphFont=} [properties] Properties to set\n   */\n  function GlyphFont(properties) {\n    this.kerning = {}\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * GlyphFont letter.\n   * @member {string} letter\n   * @memberof GlyphFont\n   * @instance\n   */\n  GlyphFont.prototype.letter = ''\n\n  /**\n   * GlyphFont adjustMetric.\n   * @member {IMetric|null|undefined} adjustMetric\n   * @memberof GlyphFont\n   * @instance\n   */\n  GlyphFont.prototype.adjustMetric = null\n\n  /**\n   * GlyphFont kerning.\n   * @member {Object.<string,number>} kerning\n   * @memberof GlyphFont\n   * @instance\n   */\n  GlyphFont.prototype.kerning = $util.emptyObject\n\n  /**\n   * Creates a new GlyphFont instance using the specified properties.\n   * @function create\n   * @memberof GlyphFont\n   * @static\n   * @param {IGlyphFont=} [properties] Properties to set\n   * @returns {GlyphFont} GlyphFont instance\n   */\n  GlyphFont.create = function create(properties) {\n    return new GlyphFont(properties)\n  }\n\n  /**\n   * Encodes the specified GlyphFont message. Does not implicitly {@link GlyphFont.verify|verify} messages.\n   * @function encode\n   * @memberof GlyphFont\n   * @static\n   * @param {IGlyphFont} message GlyphFont message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  GlyphFont.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (message.letter != null && Object.hasOwnProperty.call(message, 'letter'))\n      writer.uint32(/* id 1, wireType 2 =*/ 10).string(message.letter)\n    if (\n      message.adjustMetric != null &&\n      Object.hasOwnProperty.call(message, 'adjustMetric')\n    )\n      $root.Metric.encode(\n        message.adjustMetric,\n        writer.uint32(/* id 2, wireType 2 =*/ 18).fork(),\n      ).ldelim()\n    if (\n      message.kerning != null &&\n      Object.hasOwnProperty.call(message, 'kerning')\n    )\n      for (let keys = Object.keys(message.kerning), i = 0; i < keys.length; ++i)\n        writer\n          .uint32(/* id 3, wireType 2 =*/ 26)\n          .fork()\n          .uint32(/* id 1, wireType 2 =*/ 10)\n          .string(keys[i])\n          .uint32(/* id 2, wireType 0 =*/ 16)\n          .int32(message.kerning[keys[i]])\n          .ldelim()\n    return writer\n  }\n\n  /**\n   * Encodes the specified GlyphFont message, length delimited. Does not implicitly {@link GlyphFont.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof GlyphFont\n   * @static\n   * @param {IGlyphFont} message GlyphFont message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  GlyphFont.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a GlyphFont message from the specified reader or buffer.\n   * @function decode\n   * @memberof GlyphFont\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {GlyphFont} GlyphFont\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  GlyphFont.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.GlyphFont(),\n      key,\n      value\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.letter = reader.string()\n          break\n        case 2:\n          message.adjustMetric = $root.Metric.decode(reader, reader.uint32())\n          break\n        case 3:\n          if (message.kerning === $util.emptyObject) message.kerning = {}\n          let end2 = reader.uint32() + reader.pos\n          key = ''\n          value = 0\n          while (reader.pos < end2) {\n            let tag2 = reader.uint32()\n            switch (tag2 >>> 3) {\n              case 1:\n                key = reader.string()\n                break\n              case 2:\n                value = reader.int32()\n                break\n              default:\n                reader.skipType(tag2 & 7)\n                break\n            }\n          }\n          message.kerning[key] = value\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a GlyphFont message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof GlyphFont\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {GlyphFont} GlyphFont\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  GlyphFont.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a GlyphFont message.\n   * @function verify\n   * @memberof GlyphFont\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  GlyphFont.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.letter != null && message.hasOwnProperty('letter'))\n      if (!$util.isString(message.letter)) return 'letter: string expected'\n    if (\n      message.adjustMetric != null &&\n      message.hasOwnProperty('adjustMetric')\n    ) {\n      let error = $root.Metric.verify(message.adjustMetric)\n      if (error) return 'adjustMetric.' + error\n    }\n    if (message.kerning != null && message.hasOwnProperty('kerning')) {\n      if (!$util.isObject(message.kerning)) return 'kerning: object expected'\n      let key = Object.keys(message.kerning)\n      for (let i = 0; i < key.length; ++i)\n        if (!$util.isInteger(message.kerning[key[i]]))\n          return 'kerning: integer{k:string} expected'\n    }\n    return null\n  }\n\n  /**\n   * Creates a GlyphFont message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof GlyphFont\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {GlyphFont} GlyphFont\n   */\n  GlyphFont.fromObject = function fromObject(object) {\n    if (object instanceof $root.GlyphFont) return object\n    let message = new $root.GlyphFont()\n    if (object.letter != null) message.letter = String(object.letter)\n    if (object.adjustMetric != null) {\n      if (typeof object.adjustMetric !== 'object')\n        throw TypeError('.GlyphFont.adjustMetric: object expected')\n      message.adjustMetric = $root.Metric.fromObject(object.adjustMetric)\n    }\n    if (object.kerning) {\n      if (typeof object.kerning !== 'object')\n        throw TypeError('.GlyphFont.kerning: object expected')\n      message.kerning = {}\n      for (let keys = Object.keys(object.kerning), i = 0; i < keys.length; ++i)\n        message.kerning[keys[i]] = object.kerning[keys[i]] | 0\n    }\n    return message\n  }\n\n  /**\n   * Creates a plain object from a GlyphFont message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof GlyphFont\n   * @static\n   * @param {GlyphFont} message GlyphFont\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  GlyphFont.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.objects || options.defaults) object.kerning = {}\n    if (options.defaults) {\n      object.letter = ''\n      object.adjustMetric = null\n    }\n    if (message.letter != null && message.hasOwnProperty('letter'))\n      object.letter = message.letter\n    if (message.adjustMetric != null && message.hasOwnProperty('adjustMetric'))\n      object.adjustMetric = $root.Metric.toObject(message.adjustMetric, options)\n    let keys2\n    if (message.kerning && (keys2 = Object.keys(message.kerning)).length) {\n      object.kerning = {}\n      for (let j = 0; j < keys2.length; ++j)\n        object.kerning[keys2[j]] = message.kerning[keys2[j]]\n    }\n    return object\n  }\n\n  /**\n   * Converts this GlyphFont to JSON.\n   * @function toJSON\n   * @memberof GlyphFont\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  GlyphFont.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return GlyphFont\n})())\n\nexport const GlyphImage = ($root.GlyphImage = (() => {\n  /**\n   * Properties of a GlyphImage.\n   * @exports IGlyphImage\n   * @interface IGlyphImage\n   * @property {string|null} [letter] GlyphImage letter\n   * @property {IMetric|null} [adjustMetric] GlyphImage adjustMetric\n   * @property {Uint8Array|null} [buffer] GlyphImage buffer\n   * @property {string|null} [fileName] GlyphImage fileName\n   * @property {string|null} [fileType] GlyphImage fileType\n   * @property {boolean|null} [selected] GlyphImage selected\n   * @property {Object.<string,number>|null} [kerning] GlyphImage kerning\n   */\n\n  /**\n   * Constructs a new GlyphImage.\n   * @exports GlyphImage\n   * @classdesc Represents a GlyphImage.\n   * @implements IGlyphImage\n   * @constructor\n   * @param {IGlyphImage=} [properties] Properties to set\n   */\n  function GlyphImage(properties) {\n    this.kerning = {}\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * GlyphImage letter.\n   * @member {string} letter\n   * @memberof GlyphImage\n   * @instance\n   */\n  GlyphImage.prototype.letter = ''\n\n  /**\n   * GlyphImage adjustMetric.\n   * @member {IMetric|null|undefined} adjustMetric\n   * @memberof GlyphImage\n   * @instance\n   */\n  GlyphImage.prototype.adjustMetric = null\n\n  /**\n   * GlyphImage buffer.\n   * @member {Uint8Array} buffer\n   * @memberof GlyphImage\n   * @instance\n   */\n  GlyphImage.prototype.buffer = $util.newBuffer([])\n\n  /**\n   * GlyphImage fileName.\n   * @member {string} fileName\n   * @memberof GlyphImage\n   * @instance\n   */\n  GlyphImage.prototype.fileName = ''\n\n  /**\n   * GlyphImage fileType.\n   * @member {string} fileType\n   * @memberof GlyphImage\n   * @instance\n   */\n  GlyphImage.prototype.fileType = ''\n\n  /**\n   * GlyphImage selected.\n   * @member {boolean} selected\n   * @memberof GlyphImage\n   * @instance\n   */\n  GlyphImage.prototype.selected = false\n\n  /**\n   * GlyphImage kerning.\n   * @member {Object.<string,number>} kerning\n   * @memberof GlyphImage\n   * @instance\n   */\n  GlyphImage.prototype.kerning = $util.emptyObject\n\n  /**\n   * Creates a new GlyphImage instance using the specified properties.\n   * @function create\n   * @memberof GlyphImage\n   * @static\n   * @param {IGlyphImage=} [properties] Properties to set\n   * @returns {GlyphImage} GlyphImage instance\n   */\n  GlyphImage.create = function create(properties) {\n    return new GlyphImage(properties)\n  }\n\n  /**\n   * Encodes the specified GlyphImage message. Does not implicitly {@link GlyphImage.verify|verify} messages.\n   * @function encode\n   * @memberof GlyphImage\n   * @static\n   * @param {IGlyphImage} message GlyphImage message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  GlyphImage.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (message.letter != null && Object.hasOwnProperty.call(message, 'letter'))\n      writer.uint32(/* id 1, wireType 2 =*/ 10).string(message.letter)\n    if (\n      message.adjustMetric != null &&\n      Object.hasOwnProperty.call(message, 'adjustMetric')\n    )\n      $root.Metric.encode(\n        message.adjustMetric,\n        writer.uint32(/* id 2, wireType 2 =*/ 18).fork(),\n      ).ldelim()\n    if (message.buffer != null && Object.hasOwnProperty.call(message, 'buffer'))\n      writer.uint32(/* id 3, wireType 2 =*/ 26).bytes(message.buffer)\n    if (\n      message.fileName != null &&\n      Object.hasOwnProperty.call(message, 'fileName')\n    )\n      writer.uint32(/* id 4, wireType 2 =*/ 34).string(message.fileName)\n    if (\n      message.fileType != null &&\n      Object.hasOwnProperty.call(message, 'fileType')\n    )\n      writer.uint32(/* id 5, wireType 2 =*/ 42).string(message.fileType)\n    if (\n      message.selected != null &&\n      Object.hasOwnProperty.call(message, 'selected')\n    )\n      writer.uint32(/* id 6, wireType 0 =*/ 48).bool(message.selected)\n    if (\n      message.kerning != null &&\n      Object.hasOwnProperty.call(message, 'kerning')\n    )\n      for (let keys = Object.keys(message.kerning), i = 0; i < keys.length; ++i)\n        writer\n          .uint32(/* id 7, wireType 2 =*/ 58)\n          .fork()\n          .uint32(/* id 1, wireType 2 =*/ 10)\n          .string(keys[i])\n          .uint32(/* id 2, wireType 0 =*/ 16)\n          .int32(message.kerning[keys[i]])\n          .ldelim()\n    return writer\n  }\n\n  /**\n   * Encodes the specified GlyphImage message, length delimited. Does not implicitly {@link GlyphImage.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof GlyphImage\n   * @static\n   * @param {IGlyphImage} message GlyphImage message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  GlyphImage.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a GlyphImage message from the specified reader or buffer.\n   * @function decode\n   * @memberof GlyphImage\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {GlyphImage} GlyphImage\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  GlyphImage.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.GlyphImage(),\n      key,\n      value\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.letter = reader.string()\n          break\n        case 2:\n          message.adjustMetric = $root.Metric.decode(reader, reader.uint32())\n          break\n        case 3:\n          message.buffer = reader.bytes()\n          break\n        case 4:\n          message.fileName = reader.string()\n          break\n        case 5:\n          message.fileType = reader.string()\n          break\n        case 6:\n          message.selected = reader.bool()\n          break\n        case 7:\n          if (message.kerning === $util.emptyObject) message.kerning = {}\n          let end2 = reader.uint32() + reader.pos\n          key = ''\n          value = 0\n          while (reader.pos < end2) {\n            let tag2 = reader.uint32()\n            switch (tag2 >>> 3) {\n              case 1:\n                key = reader.string()\n                break\n              case 2:\n                value = reader.int32()\n                break\n              default:\n                reader.skipType(tag2 & 7)\n                break\n            }\n          }\n          message.kerning[key] = value\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a GlyphImage message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof GlyphImage\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {GlyphImage} GlyphImage\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  GlyphImage.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a GlyphImage message.\n   * @function verify\n   * @memberof GlyphImage\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  GlyphImage.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.letter != null && message.hasOwnProperty('letter'))\n      if (!$util.isString(message.letter)) return 'letter: string expected'\n    if (\n      message.adjustMetric != null &&\n      message.hasOwnProperty('adjustMetric')\n    ) {\n      let error = $root.Metric.verify(message.adjustMetric)\n      if (error) return 'adjustMetric.' + error\n    }\n    if (message.buffer != null && message.hasOwnProperty('buffer'))\n      if (\n        !(\n          (message.buffer && typeof message.buffer.length === 'number') ||\n          $util.isString(message.buffer)\n        )\n      )\n        return 'buffer: buffer expected'\n    if (message.fileName != null && message.hasOwnProperty('fileName'))\n      if (!$util.isString(message.fileName)) return 'fileName: string expected'\n    if (message.fileType != null && message.hasOwnProperty('fileType'))\n      if (!$util.isString(message.fileType)) return 'fileType: string expected'\n    if (message.selected != null && message.hasOwnProperty('selected'))\n      if (typeof message.selected !== 'boolean')\n        return 'selected: boolean expected'\n    if (message.kerning != null && message.hasOwnProperty('kerning')) {\n      if (!$util.isObject(message.kerning)) return 'kerning: object expected'\n      let key = Object.keys(message.kerning)\n      for (let i = 0; i < key.length; ++i)\n        if (!$util.isInteger(message.kerning[key[i]]))\n          return 'kerning: integer{k:string} expected'\n    }\n    return null\n  }\n\n  /**\n   * Creates a GlyphImage message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof GlyphImage\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {GlyphImage} GlyphImage\n   */\n  GlyphImage.fromObject = function fromObject(object) {\n    if (object instanceof $root.GlyphImage) return object\n    let message = new $root.GlyphImage()\n    if (object.letter != null) message.letter = String(object.letter)\n    if (object.adjustMetric != null) {\n      if (typeof object.adjustMetric !== 'object')\n        throw TypeError('.GlyphImage.adjustMetric: object expected')\n      message.adjustMetric = $root.Metric.fromObject(object.adjustMetric)\n    }\n    if (object.buffer != null)\n      if (typeof object.buffer === 'string')\n        $util.base64.decode(\n          object.buffer,\n          (message.buffer = $util.newBuffer(\n            $util.base64.length(object.buffer),\n          )),\n          0,\n        )\n      else if (object.buffer.length) message.buffer = object.buffer\n    if (object.fileName != null) message.fileName = String(object.fileName)\n    if (object.fileType != null) message.fileType = String(object.fileType)\n    if (object.selected != null) message.selected = Boolean(object.selected)\n    if (object.kerning) {\n      if (typeof object.kerning !== 'object')\n        throw TypeError('.GlyphImage.kerning: object expected')\n      message.kerning = {}\n      for (let keys = Object.keys(object.kerning), i = 0; i < keys.length; ++i)\n        message.kerning[keys[i]] = object.kerning[keys[i]] | 0\n    }\n    return message\n  }\n\n  /**\n   * Creates a plain object from a GlyphImage message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof GlyphImage\n   * @static\n   * @param {GlyphImage} message GlyphImage\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  GlyphImage.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.objects || options.defaults) object.kerning = {}\n    if (options.defaults) {\n      object.letter = ''\n      object.adjustMetric = null\n      if (options.bytes === String) object.buffer = ''\n      else {\n        object.buffer = []\n        if (options.bytes !== Array)\n          object.buffer = $util.newBuffer(object.buffer)\n      }\n      object.fileName = ''\n      object.fileType = ''\n      object.selected = false\n    }\n    if (message.letter != null && message.hasOwnProperty('letter'))\n      object.letter = message.letter\n    if (message.adjustMetric != null && message.hasOwnProperty('adjustMetric'))\n      object.adjustMetric = $root.Metric.toObject(message.adjustMetric, options)\n    if (message.buffer != null && message.hasOwnProperty('buffer'))\n      object.buffer =\n        options.bytes === String\n          ? $util.base64.encode(message.buffer, 0, message.buffer.length)\n          : options.bytes === Array\n          ? Array.prototype.slice.call(message.buffer)\n          : message.buffer\n    if (message.fileName != null && message.hasOwnProperty('fileName'))\n      object.fileName = message.fileName\n    if (message.fileType != null && message.hasOwnProperty('fileType'))\n      object.fileType = message.fileType\n    if (message.selected != null && message.hasOwnProperty('selected'))\n      object.selected = message.selected\n    let keys2\n    if (message.kerning && (keys2 = Object.keys(message.kerning)).length) {\n      object.kerning = {}\n      for (let j = 0; j < keys2.length; ++j)\n        object.kerning[keys2[j]] = message.kerning[keys2[j]]\n    }\n    return object\n  }\n\n  /**\n   * Converts this GlyphImage to JSON.\n   * @function toJSON\n   * @memberof GlyphImage\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  GlyphImage.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return GlyphImage\n})())\n\nexport const Layout = ($root.Layout = (() => {\n  /**\n   * Properties of a Layout.\n   * @exports ILayout\n   * @interface ILayout\n   * @property {number|null} [padding] Layout padding\n   * @property {number|null} [spacing] Layout spacing\n   * @property {boolean|null} [power] Layout power\n   */\n\n  /**\n   * Constructs a new Layout.\n   * @exports Layout\n   * @classdesc Represents a Layout.\n   * @implements ILayout\n   * @constructor\n   * @param {ILayout=} [properties] Properties to set\n   */\n  function Layout(properties) {\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * Layout padding.\n   * @member {number} padding\n   * @memberof Layout\n   * @instance\n   */\n  Layout.prototype.padding = 0\n\n  /**\n   * Layout spacing.\n   * @member {number} spacing\n   * @memberof Layout\n   * @instance\n   */\n  Layout.prototype.spacing = 0\n\n  /**\n   * Layout power.\n   * @member {boolean} power\n   * @memberof Layout\n   * @instance\n   */\n  Layout.prototype.power = false\n\n  /**\n   * Creates a new Layout instance using the specified properties.\n   * @function create\n   * @memberof Layout\n   * @static\n   * @param {ILayout=} [properties] Properties to set\n   * @returns {Layout} Layout instance\n   */\n  Layout.create = function create(properties) {\n    return new Layout(properties)\n  }\n\n  /**\n   * Encodes the specified Layout message. Does not implicitly {@link Layout.verify|verify} messages.\n   * @function encode\n   * @memberof Layout\n   * @static\n   * @param {ILayout} message Layout message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Layout.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (\n      message.padding != null &&\n      Object.hasOwnProperty.call(message, 'padding')\n    )\n      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.padding)\n    if (\n      message.spacing != null &&\n      Object.hasOwnProperty.call(message, 'spacing')\n    )\n      writer.uint32(/* id 2, wireType 0 =*/ 16).int32(message.spacing)\n    if (message.power != null && Object.hasOwnProperty.call(message, 'power'))\n      writer.uint32(/* id 3, wireType 0 =*/ 24).bool(message.power)\n    return writer\n  }\n\n  /**\n   * Encodes the specified Layout message, length delimited. Does not implicitly {@link Layout.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof Layout\n   * @static\n   * @param {ILayout} message Layout message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Layout.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a Layout message from the specified reader or buffer.\n   * @function decode\n   * @memberof Layout\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {Layout} Layout\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Layout.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.Layout()\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.padding = reader.int32()\n          break\n        case 2:\n          message.spacing = reader.int32()\n          break\n        case 3:\n          message.power = reader.bool()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a Layout message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof Layout\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {Layout} Layout\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Layout.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a Layout message.\n   * @function verify\n   * @memberof Layout\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  Layout.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.padding != null && message.hasOwnProperty('padding'))\n      if (!$util.isInteger(message.padding)) return 'padding: integer expected'\n    if (message.spacing != null && message.hasOwnProperty('spacing'))\n      if (!$util.isInteger(message.spacing)) return 'spacing: integer expected'\n    if (message.power != null && message.hasOwnProperty('power'))\n      if (typeof message.power !== 'boolean') return 'power: boolean expected'\n    return null\n  }\n\n  /**\n   * Creates a Layout message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof Layout\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {Layout} Layout\n   */\n  Layout.fromObject = function fromObject(object) {\n    if (object instanceof $root.Layout) return object\n    let message = new $root.Layout()\n    if (object.padding != null) message.padding = object.padding | 0\n    if (object.spacing != null) message.spacing = object.spacing | 0\n    if (object.power != null) message.power = Boolean(object.power)\n    return message\n  }\n\n  /**\n   * Creates a plain object from a Layout message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof Layout\n   * @static\n   * @param {Layout} message Layout\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  Layout.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.defaults) {\n      object.padding = 0\n      object.spacing = 0\n      object.power = false\n    }\n    if (message.padding != null && message.hasOwnProperty('padding'))\n      object.padding = message.padding\n    if (message.spacing != null && message.hasOwnProperty('spacing'))\n      object.spacing = message.spacing\n    if (message.power != null && message.hasOwnProperty('power'))\n      object.power = message.power\n    return object\n  }\n\n  /**\n   * Converts this Layout to JSON.\n   * @function toJSON\n   * @memberof Layout\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  Layout.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return Layout\n})())\n\nexport const Shadow = ($root.Shadow = (() => {\n  /**\n   * Properties of a Shadow.\n   * @exports IShadow\n   * @interface IShadow\n   * @property {string|null} [color] Shadow color\n   * @property {number|null} [blur] Shadow blur\n   * @property {number|null} [offsetX] Shadow offsetX\n   * @property {number|null} [offsetY] Shadow offsetY\n   */\n\n  /**\n   * Constructs a new Shadow.\n   * @exports Shadow\n   * @classdesc Represents a Shadow.\n   * @implements IShadow\n   * @constructor\n   * @param {IShadow=} [properties] Properties to set\n   */\n  function Shadow(properties) {\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * Shadow color.\n   * @member {string} color\n   * @memberof Shadow\n   * @instance\n   */\n  Shadow.prototype.color = ''\n\n  /**\n   * Shadow blur.\n   * @member {number} blur\n   * @memberof Shadow\n   * @instance\n   */\n  Shadow.prototype.blur = 0\n\n  /**\n   * Shadow offsetX.\n   * @member {number} offsetX\n   * @memberof Shadow\n   * @instance\n   */\n  Shadow.prototype.offsetX = 0\n\n  /**\n   * Shadow offsetY.\n   * @member {number} offsetY\n   * @memberof Shadow\n   * @instance\n   */\n  Shadow.prototype.offsetY = 0\n\n  /**\n   * Creates a new Shadow instance using the specified properties.\n   * @function create\n   * @memberof Shadow\n   * @static\n   * @param {IShadow=} [properties] Properties to set\n   * @returns {Shadow} Shadow instance\n   */\n  Shadow.create = function create(properties) {\n    return new Shadow(properties)\n  }\n\n  /**\n   * Encodes the specified Shadow message. Does not implicitly {@link Shadow.verify|verify} messages.\n   * @function encode\n   * @memberof Shadow\n   * @static\n   * @param {IShadow} message Shadow message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Shadow.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (message.color != null && Object.hasOwnProperty.call(message, 'color'))\n      writer.uint32(/* id 1, wireType 2 =*/ 10).string(message.color)\n    if (message.blur != null && Object.hasOwnProperty.call(message, 'blur'))\n      writer.uint32(/* id 2, wireType 0 =*/ 16).int32(message.blur)\n    if (\n      message.offsetX != null &&\n      Object.hasOwnProperty.call(message, 'offsetX')\n    )\n      writer.uint32(/* id 3, wireType 0 =*/ 24).sint32(message.offsetX)\n    if (\n      message.offsetY != null &&\n      Object.hasOwnProperty.call(message, 'offsetY')\n    )\n      writer.uint32(/* id 4, wireType 0 =*/ 32).sint32(message.offsetY)\n    return writer\n  }\n\n  /**\n   * Encodes the specified Shadow message, length delimited. Does not implicitly {@link Shadow.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof Shadow\n   * @static\n   * @param {IShadow} message Shadow message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Shadow.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a Shadow message from the specified reader or buffer.\n   * @function decode\n   * @memberof Shadow\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {Shadow} Shadow\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Shadow.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.Shadow()\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.color = reader.string()\n          break\n        case 2:\n          message.blur = reader.int32()\n          break\n        case 3:\n          message.offsetX = reader.sint32()\n          break\n        case 4:\n          message.offsetY = reader.sint32()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a Shadow message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof Shadow\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {Shadow} Shadow\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Shadow.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a Shadow message.\n   * @function verify\n   * @memberof Shadow\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  Shadow.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.color != null && message.hasOwnProperty('color'))\n      if (!$util.isString(message.color)) return 'color: string expected'\n    if (message.blur != null && message.hasOwnProperty('blur'))\n      if (!$util.isInteger(message.blur)) return 'blur: integer expected'\n    if (message.offsetX != null && message.hasOwnProperty('offsetX'))\n      if (!$util.isInteger(message.offsetX)) return 'offsetX: integer expected'\n    if (message.offsetY != null && message.hasOwnProperty('offsetY'))\n      if (!$util.isInteger(message.offsetY)) return 'offsetY: integer expected'\n    return null\n  }\n\n  /**\n   * Creates a Shadow message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof Shadow\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {Shadow} Shadow\n   */\n  Shadow.fromObject = function fromObject(object) {\n    if (object instanceof $root.Shadow) return object\n    let message = new $root.Shadow()\n    if (object.color != null) message.color = String(object.color)\n    if (object.blur != null) message.blur = object.blur | 0\n    if (object.offsetX != null) message.offsetX = object.offsetX | 0\n    if (object.offsetY != null) message.offsetY = object.offsetY | 0\n    return message\n  }\n\n  /**\n   * Creates a plain object from a Shadow message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof Shadow\n   * @static\n   * @param {Shadow} message Shadow\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  Shadow.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.defaults) {\n      object.color = ''\n      object.blur = 0\n      object.offsetX = 0\n      object.offsetY = 0\n    }\n    if (message.color != null && message.hasOwnProperty('color'))\n      object.color = message.color\n    if (message.blur != null && message.hasOwnProperty('blur'))\n      object.blur = message.blur\n    if (message.offsetX != null && message.hasOwnProperty('offsetX'))\n      object.offsetX = message.offsetX\n    if (message.offsetY != null && message.hasOwnProperty('offsetY'))\n      object.offsetY = message.offsetY\n    return object\n  }\n\n  /**\n   * Converts this Shadow to JSON.\n   * @function toJSON\n   * @memberof Shadow\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  Shadow.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return Shadow\n})())\n\nexport const Style = ($root.Style = (() => {\n  /**\n   * Properties of a Style.\n   * @exports IStyle\n   * @interface IStyle\n   * @property {IFont|null} [font] Style font\n   * @property {IFill|null} [fill] Style fill\n   * @property {boolean|null} [useStroke] Style useStroke\n   * @property {IFill|null} [stroke] Style stroke\n   * @property {boolean|null} [useShadow] Style useShadow\n   * @property {IShadow|null} [shadow] Style shadow\n   * @property {string|null} [bgColor] Style bgColor\n   */\n\n  /**\n   * Constructs a new Style.\n   * @exports Style\n   * @classdesc Represents a Style.\n   * @implements IStyle\n   * @constructor\n   * @param {IStyle=} [properties] Properties to set\n   */\n  function Style(properties) {\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * Style font.\n   * @member {IFont|null|undefined} font\n   * @memberof Style\n   * @instance\n   */\n  Style.prototype.font = null\n\n  /**\n   * Style fill.\n   * @member {IFill|null|undefined} fill\n   * @memberof Style\n   * @instance\n   */\n  Style.prototype.fill = null\n\n  /**\n   * Style useStroke.\n   * @member {boolean} useStroke\n   * @memberof Style\n   * @instance\n   */\n  Style.prototype.useStroke = false\n\n  /**\n   * Style stroke.\n   * @member {IFill|null|undefined} stroke\n   * @memberof Style\n   * @instance\n   */\n  Style.prototype.stroke = null\n\n  /**\n   * Style useShadow.\n   * @member {boolean} useShadow\n   * @memberof Style\n   * @instance\n   */\n  Style.prototype.useShadow = false\n\n  /**\n   * Style shadow.\n   * @member {IShadow|null|undefined} shadow\n   * @memberof Style\n   * @instance\n   */\n  Style.prototype.shadow = null\n\n  /**\n   * Style bgColor.\n   * @member {string} bgColor\n   * @memberof Style\n   * @instance\n   */\n  Style.prototype.bgColor = ''\n\n  /**\n   * Creates a new Style instance using the specified properties.\n   * @function create\n   * @memberof Style\n   * @static\n   * @param {IStyle=} [properties] Properties to set\n   * @returns {Style} Style instance\n   */\n  Style.create = function create(properties) {\n    return new Style(properties)\n  }\n\n  /**\n   * Encodes the specified Style message. Does not implicitly {@link Style.verify|verify} messages.\n   * @function encode\n   * @memberof Style\n   * @static\n   * @param {IStyle} message Style message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Style.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (message.font != null && Object.hasOwnProperty.call(message, 'font'))\n      $root.Font.encode(\n        message.font,\n        writer.uint32(/* id 1, wireType 2 =*/ 10).fork(),\n      ).ldelim()\n    if (message.fill != null && Object.hasOwnProperty.call(message, 'fill'))\n      $root.Fill.encode(\n        message.fill,\n        writer.uint32(/* id 2, wireType 2 =*/ 18).fork(),\n      ).ldelim()\n    if (\n      message.useStroke != null &&\n      Object.hasOwnProperty.call(message, 'useStroke')\n    )\n      writer.uint32(/* id 3, wireType 0 =*/ 24).bool(message.useStroke)\n    if (message.stroke != null && Object.hasOwnProperty.call(message, 'stroke'))\n      $root.Fill.encode(\n        message.stroke,\n        writer.uint32(/* id 4, wireType 2 =*/ 34).fork(),\n      ).ldelim()\n    if (\n      message.useShadow != null &&\n      Object.hasOwnProperty.call(message, 'useShadow')\n    )\n      writer.uint32(/* id 5, wireType 0 =*/ 40).bool(message.useShadow)\n    if (message.shadow != null && Object.hasOwnProperty.call(message, 'shadow'))\n      $root.Shadow.encode(\n        message.shadow,\n        writer.uint32(/* id 6, wireType 2 =*/ 50).fork(),\n      ).ldelim()\n    if (\n      message.bgColor != null &&\n      Object.hasOwnProperty.call(message, 'bgColor')\n    )\n      writer.uint32(/* id 7, wireType 2 =*/ 58).string(message.bgColor)\n    return writer\n  }\n\n  /**\n   * Encodes the specified Style message, length delimited. Does not implicitly {@link Style.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof Style\n   * @static\n   * @param {IStyle} message Style message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Style.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a Style message from the specified reader or buffer.\n   * @function decode\n   * @memberof Style\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {Style} Style\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Style.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.Style()\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.font = $root.Font.decode(reader, reader.uint32())\n          break\n        case 2:\n          message.fill = $root.Fill.decode(reader, reader.uint32())\n          break\n        case 3:\n          message.useStroke = reader.bool()\n          break\n        case 4:\n          message.stroke = $root.Fill.decode(reader, reader.uint32())\n          break\n        case 5:\n          message.useShadow = reader.bool()\n          break\n        case 6:\n          message.shadow = $root.Shadow.decode(reader, reader.uint32())\n          break\n        case 7:\n          message.bgColor = reader.string()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a Style message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof Style\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {Style} Style\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Style.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a Style message.\n   * @function verify\n   * @memberof Style\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  Style.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.font != null && message.hasOwnProperty('font')) {\n      let error = $root.Font.verify(message.font)\n      if (error) return 'font.' + error\n    }\n    if (message.fill != null && message.hasOwnProperty('fill')) {\n      let error = $root.Fill.verify(message.fill)\n      if (error) return 'fill.' + error\n    }\n    if (message.useStroke != null && message.hasOwnProperty('useStroke'))\n      if (typeof message.useStroke !== 'boolean')\n        return 'useStroke: boolean expected'\n    if (message.stroke != null && message.hasOwnProperty('stroke')) {\n      let error = $root.Fill.verify(message.stroke)\n      if (error) return 'stroke.' + error\n    }\n    if (message.useShadow != null && message.hasOwnProperty('useShadow'))\n      if (typeof message.useShadow !== 'boolean')\n        return 'useShadow: boolean expected'\n    if (message.shadow != null && message.hasOwnProperty('shadow')) {\n      let error = $root.Shadow.verify(message.shadow)\n      if (error) return 'shadow.' + error\n    }\n    if (message.bgColor != null && message.hasOwnProperty('bgColor'))\n      if (!$util.isString(message.bgColor)) return 'bgColor: string expected'\n    return null\n  }\n\n  /**\n   * Creates a Style message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof Style\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {Style} Style\n   */\n  Style.fromObject = function fromObject(object) {\n    if (object instanceof $root.Style) return object\n    let message = new $root.Style()\n    if (object.font != null) {\n      if (typeof object.font !== 'object')\n        throw TypeError('.Style.font: object expected')\n      message.font = $root.Font.fromObject(object.font)\n    }\n    if (object.fill != null) {\n      if (typeof object.fill !== 'object')\n        throw TypeError('.Style.fill: object expected')\n      message.fill = $root.Fill.fromObject(object.fill)\n    }\n    if (object.useStroke != null) message.useStroke = Boolean(object.useStroke)\n    if (object.stroke != null) {\n      if (typeof object.stroke !== 'object')\n        throw TypeError('.Style.stroke: object expected')\n      message.stroke = $root.Fill.fromObject(object.stroke)\n    }\n    if (object.useShadow != null) message.useShadow = Boolean(object.useShadow)\n    if (object.shadow != null) {\n      if (typeof object.shadow !== 'object')\n        throw TypeError('.Style.shadow: object expected')\n      message.shadow = $root.Shadow.fromObject(object.shadow)\n    }\n    if (object.bgColor != null) message.bgColor = String(object.bgColor)\n    return message\n  }\n\n  /**\n   * Creates a plain object from a Style message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof Style\n   * @static\n   * @param {Style} message Style\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  Style.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.defaults) {\n      object.font = null\n      object.fill = null\n      object.useStroke = false\n      object.stroke = null\n      object.useShadow = false\n      object.shadow = null\n      object.bgColor = ''\n    }\n    if (message.font != null && message.hasOwnProperty('font'))\n      object.font = $root.Font.toObject(message.font, options)\n    if (message.fill != null && message.hasOwnProperty('fill'))\n      object.fill = $root.Fill.toObject(message.fill, options)\n    if (message.useStroke != null && message.hasOwnProperty('useStroke'))\n      object.useStroke = message.useStroke\n    if (message.stroke != null && message.hasOwnProperty('stroke'))\n      object.stroke = $root.Fill.toObject(message.stroke, options)\n    if (message.useShadow != null && message.hasOwnProperty('useShadow'))\n      object.useShadow = message.useShadow\n    if (message.shadow != null && message.hasOwnProperty('shadow'))\n      object.shadow = $root.Shadow.toObject(message.shadow, options)\n    if (message.bgColor != null && message.hasOwnProperty('bgColor'))\n      object.bgColor = message.bgColor\n    return object\n  }\n\n  /**\n   * Converts this Style to JSON.\n   * @function toJSON\n   * @memberof Style\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  Style.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return Style\n})())\n\nexport const Ui = ($root.Ui = (() => {\n  /**\n   * Properties of an Ui.\n   * @exports IUi\n   * @interface IUi\n   * @property {string|null} [previewText] Ui previewText\n   */\n\n  /**\n   * Constructs a new Ui.\n   * @exports Ui\n   * @classdesc Represents an Ui.\n   * @implements IUi\n   * @constructor\n   * @param {IUi=} [properties] Properties to set\n   */\n  function Ui(properties) {\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * Ui previewText.\n   * @member {string} previewText\n   * @memberof Ui\n   * @instance\n   */\n  Ui.prototype.previewText = ''\n\n  /**\n   * Creates a new Ui instance using the specified properties.\n   * @function create\n   * @memberof Ui\n   * @static\n   * @param {IUi=} [properties] Properties to set\n   * @returns {Ui} Ui instance\n   */\n  Ui.create = function create(properties) {\n    return new Ui(properties)\n  }\n\n  /**\n   * Encodes the specified Ui message. Does not implicitly {@link Ui.verify|verify} messages.\n   * @function encode\n   * @memberof Ui\n   * @static\n   * @param {IUi} message Ui message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Ui.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (\n      message.previewText != null &&\n      Object.hasOwnProperty.call(message, 'previewText')\n    )\n      writer.uint32(/* id 1, wireType 2 =*/ 10).string(message.previewText)\n    return writer\n  }\n\n  /**\n   * Encodes the specified Ui message, length delimited. Does not implicitly {@link Ui.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof Ui\n   * @static\n   * @param {IUi} message Ui message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Ui.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes an Ui message from the specified reader or buffer.\n   * @function decode\n   * @memberof Ui\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {Ui} Ui\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Ui.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.Ui()\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.previewText = reader.string()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes an Ui message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof Ui\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {Ui} Ui\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Ui.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies an Ui message.\n   * @function verify\n   * @memberof Ui\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  Ui.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.previewText != null && message.hasOwnProperty('previewText'))\n      if (!$util.isString(message.previewText))\n        return 'previewText: string expected'\n    return null\n  }\n\n  /**\n   * Creates an Ui message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof Ui\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {Ui} Ui\n   */\n  Ui.fromObject = function fromObject(object) {\n    if (object instanceof $root.Ui) return object\n    let message = new $root.Ui()\n    if (object.previewText != null)\n      message.previewText = String(object.previewText)\n    return message\n  }\n\n  /**\n   * Creates a plain object from an Ui message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof Ui\n   * @static\n   * @param {Ui} message Ui\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  Ui.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.defaults) object.previewText = ''\n    if (message.previewText != null && message.hasOwnProperty('previewText'))\n      object.previewText = message.previewText\n    return object\n  }\n\n  /**\n   * Converts this Ui to JSON.\n   * @function toJSON\n   * @memberof Ui\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  Ui.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return Ui\n})())\n\nexport const Project = ($root.Project = (() => {\n  /**\n   * Properties of a Project.\n   * @exports IProject\n   * @interface IProject\n   * @property {number|Long|null} [id] Project id\n   * @property {string|null} [name] Project name\n   * @property {string|null} [text] Project text\n   * @property {Object.<string,IGlyphFont>|null} [glyphs] Project glyphs\n   * @property {Array.<IGlyphImage>|null} [glyphImages] Project glyphImages\n   * @property {IStyle|null} [style] Project style\n   * @property {ILayout|null} [layout] Project layout\n   * @property {IMetric|null} [globalAdjustMetric] Project globalAdjustMetric\n   * @property {IUi|null} [ui] Project ui\n   */\n\n  /**\n   * Constructs a new Project.\n   * @exports Project\n   * @classdesc Represents a Project.\n   * @implements IProject\n   * @constructor\n   * @param {IProject=} [properties] Properties to set\n   */\n  function Project(properties) {\n    this.glyphs = {}\n    this.glyphImages = []\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * Project id.\n   * @member {number|Long} id\n   * @memberof Project\n   * @instance\n   */\n  Project.prototype.id = $util.Long ? $util.Long.fromBits(0, 0, false) : 0\n\n  /**\n   * Project name.\n   * @member {string} name\n   * @memberof Project\n   * @instance\n   */\n  Project.prototype.name = ''\n\n  /**\n   * Project text.\n   * @member {string} text\n   * @memberof Project\n   * @instance\n   */\n  Project.prototype.text = ''\n\n  /**\n   * Project glyphs.\n   * @member {Object.<string,IGlyphFont>} glyphs\n   * @memberof Project\n   * @instance\n   */\n  Project.prototype.glyphs = $util.emptyObject\n\n  /**\n   * Project glyphImages.\n   * @member {Array.<IGlyphImage>} glyphImages\n   * @memberof Project\n   * @instance\n   */\n  Project.prototype.glyphImages = $util.emptyArray\n\n  /**\n   * Project style.\n   * @member {IStyle|null|undefined} style\n   * @memberof Project\n   * @instance\n   */\n  Project.prototype.style = null\n\n  /**\n   * Project layout.\n   * @member {ILayout|null|undefined} layout\n   * @memberof Project\n   * @instance\n   */\n  Project.prototype.layout = null\n\n  /**\n   * Project globalAdjustMetric.\n   * @member {IMetric|null|undefined} globalAdjustMetric\n   * @memberof Project\n   * @instance\n   */\n  Project.prototype.globalAdjustMetric = null\n\n  /**\n   * Project ui.\n   * @member {IUi|null|undefined} ui\n   * @memberof Project\n   * @instance\n   */\n  Project.prototype.ui = null\n\n  /**\n   * Creates a new Project instance using the specified properties.\n   * @function create\n   * @memberof Project\n   * @static\n   * @param {IProject=} [properties] Properties to set\n   * @returns {Project} Project instance\n   */\n  Project.create = function create(properties) {\n    return new Project(properties)\n  }\n\n  /**\n   * Encodes the specified Project message. Does not implicitly {@link Project.verify|verify} messages.\n   * @function encode\n   * @memberof Project\n   * @static\n   * @param {IProject} message Project message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Project.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (message.id != null && Object.hasOwnProperty.call(message, 'id'))\n      writer.uint32(/* id 1, wireType 0 =*/ 8).int64(message.id)\n    if (message.name != null && Object.hasOwnProperty.call(message, 'name'))\n      writer.uint32(/* id 2, wireType 2 =*/ 18).string(message.name)\n    if (message.text != null && Object.hasOwnProperty.call(message, 'text'))\n      writer.uint32(/* id 3, wireType 2 =*/ 26).string(message.text)\n    if (message.glyphs != null && Object.hasOwnProperty.call(message, 'glyphs'))\n      for (\n        let keys = Object.keys(message.glyphs), i = 0;\n        i < keys.length;\n        ++i\n      ) {\n        writer\n          .uint32(/* id 4, wireType 2 =*/ 34)\n          .fork()\n          .uint32(/* id 1, wireType 2 =*/ 10)\n          .string(keys[i])\n        $root.GlyphFont.encode(\n          message.glyphs[keys[i]],\n          writer.uint32(/* id 2, wireType 2 =*/ 18).fork(),\n        )\n          .ldelim()\n          .ldelim()\n      }\n    if (message.glyphImages != null && message.glyphImages.length)\n      for (let i = 0; i < message.glyphImages.length; ++i)\n        $root.GlyphImage.encode(\n          message.glyphImages[i],\n          writer.uint32(/* id 5, wireType 2 =*/ 42).fork(),\n        ).ldelim()\n    if (message.style != null && Object.hasOwnProperty.call(message, 'style'))\n      $root.Style.encode(\n        message.style,\n        writer.uint32(/* id 6, wireType 2 =*/ 50).fork(),\n      ).ldelim()\n    if (message.layout != null && Object.hasOwnProperty.call(message, 'layout'))\n      $root.Layout.encode(\n        message.layout,\n        writer.uint32(/* id 7, wireType 2 =*/ 58).fork(),\n      ).ldelim()\n    if (\n      message.globalAdjustMetric != null &&\n      Object.hasOwnProperty.call(message, 'globalAdjustMetric')\n    )\n      $root.Metric.encode(\n        message.globalAdjustMetric,\n        writer.uint32(/* id 8, wireType 2 =*/ 66).fork(),\n      ).ldelim()\n    if (message.ui != null && Object.hasOwnProperty.call(message, 'ui'))\n      $root.Ui.encode(\n        message.ui,\n        writer.uint32(/* id 9, wireType 2 =*/ 74).fork(),\n      ).ldelim()\n    return writer\n  }\n\n  /**\n   * Encodes the specified Project message, length delimited. Does not implicitly {@link Project.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof Project\n   * @static\n   * @param {IProject} message Project message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Project.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a Project message from the specified reader or buffer.\n   * @function decode\n   * @memberof Project\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {Project} Project\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Project.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.Project(),\n      key,\n      value\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.id = reader.int64()\n          break\n        case 2:\n          message.name = reader.string()\n          break\n        case 3:\n          message.text = reader.string()\n          break\n        case 4:\n          if (message.glyphs === $util.emptyObject) message.glyphs = {}\n          let end2 = reader.uint32() + reader.pos\n          key = ''\n          value = null\n          while (reader.pos < end2) {\n            let tag2 = reader.uint32()\n            switch (tag2 >>> 3) {\n              case 1:\n                key = reader.string()\n                break\n              case 2:\n                value = $root.GlyphFont.decode(reader, reader.uint32())\n                break\n              default:\n                reader.skipType(tag2 & 7)\n                break\n            }\n          }\n          message.glyphs[key] = value\n          break\n        case 5:\n          if (!(message.glyphImages && message.glyphImages.length))\n            message.glyphImages = []\n          message.glyphImages.push(\n            $root.GlyphImage.decode(reader, reader.uint32()),\n          )\n          break\n        case 6:\n          message.style = $root.Style.decode(reader, reader.uint32())\n          break\n        case 7:\n          message.layout = $root.Layout.decode(reader, reader.uint32())\n          break\n        case 8:\n          message.globalAdjustMetric = $root.Metric.decode(\n            reader,\n            reader.uint32(),\n          )\n          break\n        case 9:\n          message.ui = $root.Ui.decode(reader, reader.uint32())\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a Project message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof Project\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {Project} Project\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Project.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a Project message.\n   * @function verify\n   * @memberof Project\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  Project.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.id != null && message.hasOwnProperty('id'))\n      if (\n        !$util.isInteger(message.id) &&\n        !(\n          message.id &&\n          $util.isInteger(message.id.low) &&\n          $util.isInteger(message.id.high)\n        )\n      )\n        return 'id: integer|Long expected'\n    if (message.name != null && message.hasOwnProperty('name'))\n      if (!$util.isString(message.name)) return 'name: string expected'\n    if (message.text != null && message.hasOwnProperty('text'))\n      if (!$util.isString(message.text)) return 'text: string expected'\n    if (message.glyphs != null && message.hasOwnProperty('glyphs')) {\n      if (!$util.isObject(message.glyphs)) return 'glyphs: object expected'\n      let key = Object.keys(message.glyphs)\n      for (let i = 0; i < key.length; ++i) {\n        let error = $root.GlyphFont.verify(message.glyphs[key[i]])\n        if (error) return 'glyphs.' + error\n      }\n    }\n    if (message.glyphImages != null && message.hasOwnProperty('glyphImages')) {\n      if (!Array.isArray(message.glyphImages))\n        return 'glyphImages: array expected'\n      for (let i = 0; i < message.glyphImages.length; ++i) {\n        let error = $root.GlyphImage.verify(message.glyphImages[i])\n        if (error) return 'glyphImages.' + error\n      }\n    }\n    if (message.style != null && message.hasOwnProperty('style')) {\n      let error = $root.Style.verify(message.style)\n      if (error) return 'style.' + error\n    }\n    if (message.layout != null && message.hasOwnProperty('layout')) {\n      let error = $root.Layout.verify(message.layout)\n      if (error) return 'layout.' + error\n    }\n    if (\n      message.globalAdjustMetric != null &&\n      message.hasOwnProperty('globalAdjustMetric')\n    ) {\n      let error = $root.Metric.verify(message.globalAdjustMetric)\n      if (error) return 'globalAdjustMetric.' + error\n    }\n    if (message.ui != null && message.hasOwnProperty('ui')) {\n      let error = $root.Ui.verify(message.ui)\n      if (error) return 'ui.' + error\n    }\n    return null\n  }\n\n  /**\n   * Creates a Project message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof Project\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {Project} Project\n   */\n  Project.fromObject = function fromObject(object) {\n    if (object instanceof $root.Project) return object\n    let message = new $root.Project()\n    if (object.id != null)\n      if ($util.Long)\n        (message.id = $util.Long.fromValue(object.id)).unsigned = false\n      else if (typeof object.id === 'string')\n        message.id = parseInt(object.id, 10)\n      else if (typeof object.id === 'number') message.id = object.id\n      else if (typeof object.id === 'object')\n        message.id = new $util.LongBits(\n          object.id.low >>> 0,\n          object.id.high >>> 0,\n        ).toNumber()\n    if (object.name != null) message.name = String(object.name)\n    if (object.text != null) message.text = String(object.text)\n    if (object.glyphs) {\n      if (typeof object.glyphs !== 'object')\n        throw TypeError('.Project.glyphs: object expected')\n      message.glyphs = {}\n      for (let keys = Object.keys(object.glyphs), i = 0; i < keys.length; ++i) {\n        if (typeof object.glyphs[keys[i]] !== 'object')\n          throw TypeError('.Project.glyphs: object expected')\n        message.glyphs[keys[i]] = $root.GlyphFont.fromObject(\n          object.glyphs[keys[i]],\n        )\n      }\n    }\n    if (object.glyphImages) {\n      if (!Array.isArray(object.glyphImages))\n        throw TypeError('.Project.glyphImages: array expected')\n      message.glyphImages = []\n      for (let i = 0; i < object.glyphImages.length; ++i) {\n        if (typeof object.glyphImages[i] !== 'object')\n          throw TypeError('.Project.glyphImages: object expected')\n        message.glyphImages[i] = $root.GlyphImage.fromObject(\n          object.glyphImages[i],\n        )\n      }\n    }\n    if (object.style != null) {\n      if (typeof object.style !== 'object')\n        throw TypeError('.Project.style: object expected')\n      message.style = $root.Style.fromObject(object.style)\n    }\n    if (object.layout != null) {\n      if (typeof object.layout !== 'object')\n        throw TypeError('.Project.layout: object expected')\n      message.layout = $root.Layout.fromObject(object.layout)\n    }\n    if (object.globalAdjustMetric != null) {\n      if (typeof object.globalAdjustMetric !== 'object')\n        throw TypeError('.Project.globalAdjustMetric: object expected')\n      message.globalAdjustMetric = $root.Metric.fromObject(\n        object.globalAdjustMetric,\n      )\n    }\n    if (object.ui != null) {\n      if (typeof object.ui !== 'object')\n        throw TypeError('.Project.ui: object expected')\n      message.ui = $root.Ui.fromObject(object.ui)\n    }\n    return message\n  }\n\n  /**\n   * Creates a plain object from a Project message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof Project\n   * @static\n   * @param {Project} message Project\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  Project.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.arrays || options.defaults) object.glyphImages = []\n    if (options.objects || options.defaults) object.glyphs = {}\n    if (options.defaults) {\n      if ($util.Long) {\n        let long = new $util.Long(0, 0, false)\n        object.id =\n          options.longs === String\n            ? long.toString()\n            : options.longs === Number\n            ? long.toNumber()\n            : long\n      } else object.id = options.longs === String ? '0' : 0\n      object.name = ''\n      object.text = ''\n      object.style = null\n      object.layout = null\n      object.globalAdjustMetric = null\n      object.ui = null\n    }\n    if (message.id != null && message.hasOwnProperty('id'))\n      if (typeof message.id === 'number')\n        object.id = options.longs === String ? String(message.id) : message.id\n      else\n        object.id =\n          options.longs === String\n            ? $util.Long.prototype.toString.call(message.id)\n            : options.longs === Number\n            ? new $util.LongBits(\n                message.id.low >>> 0,\n                message.id.high >>> 0,\n              ).toNumber()\n            : message.id\n    if (message.name != null && message.hasOwnProperty('name'))\n      object.name = message.name\n    if (message.text != null && message.hasOwnProperty('text'))\n      object.text = message.text\n    let keys2\n    if (message.glyphs && (keys2 = Object.keys(message.glyphs)).length) {\n      object.glyphs = {}\n      for (let j = 0; j < keys2.length; ++j)\n        object.glyphs[keys2[j]] = $root.GlyphFont.toObject(\n          message.glyphs[keys2[j]],\n          options,\n        )\n    }\n    if (message.glyphImages && message.glyphImages.length) {\n      object.glyphImages = []\n      for (let j = 0; j < message.glyphImages.length; ++j)\n        object.glyphImages[j] = $root.GlyphImage.toObject(\n          message.glyphImages[j],\n          options,\n        )\n    }\n    if (message.style != null && message.hasOwnProperty('style'))\n      object.style = $root.Style.toObject(message.style, options)\n    if (message.layout != null && message.hasOwnProperty('layout'))\n      object.layout = $root.Layout.toObject(message.layout, options)\n    if (\n      message.globalAdjustMetric != null &&\n      message.hasOwnProperty('globalAdjustMetric')\n    )\n      object.globalAdjustMetric = $root.Metric.toObject(\n        message.globalAdjustMetric,\n        options,\n      )\n    if (message.ui != null && message.hasOwnProperty('ui'))\n      object.ui = $root.Ui.toObject(message.ui, options)\n    return object\n  }\n\n  /**\n   * Converts this Project to JSON.\n   * @function toJSON\n   * @memberof Project\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  Project.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return Project\n})())\n\nexport { $root as default }\n","export const PREFIX_STR = 'SnowBambooBMF'\nconst prefix = (): Uint8Array =>\n  new Uint8Array([...PREFIX_STR.split('').map((s) => s.charCodeAt(0)), 1, 0, 0])\n\nexport default prefix\n","import { Project, Font } from 'src/store'\nimport proto, { IProject } from 'src/proto'\n\nimport prefix from './prefix'\n\nfunction toOriginBuffer(protoProject: IProject): Project {\n  const project = { ...protoProject }\n  const map = new Map()\n\n  // font\n  if (project?.style?.font?.font) {\n    project.style.font = {\n      ...(project.style.font as Font),\n      font: project.style.font.font.slice().buffer as Uint8Array,\n    }\n  }\n\n  // images\n  if (project?.glyphImages) {\n    project.glyphImages.forEach((glyphImage) => {\n      if (glyphImage.buffer) {\n        glyphImage.buffer = glyphImage.buffer.slice().buffer as Uint8Array\n      }\n      if (glyphImage.kerning) {\n        const imgKerning = new Map()\n        Object.keys(glyphImage.kerning).forEach((key) => {\n          if (glyphImage && glyphImage.kerning && glyphImage.kerning[key])\n            imgKerning.set(key, glyphImage.kerning[key] || 0)\n        })\n      }\n    })\n\n    // project.glyphImages = new Set(project.glyphImages)\n  }\n\n  if (project?.glyphs) {\n    Object.keys(project.glyphs).forEach((k) => {\n      if (project && project.glyphs && project.glyphs[k]) {\n        const gl = project.glyphs[k]\n        const glyphKerning = new Map()\n        if (gl && gl.kerning) {\n          Object.keys(gl.kerning).forEach((key) => {\n            if (gl.kerning) glyphKerning.set(key, gl.kerning[key] || 0)\n          })\n        }\n        map.set(k, { ...gl, kerning: glyphKerning })\n      }\n    })\n  }\n\n  // fill\n  if (project?.style?.fill?.patternTexture?.buffer) {\n    project.style.fill.patternTexture.buffer = project.style.fill.patternTexture.buffer.slice()\n      .buffer as Uint8Array\n  }\n\n  // stroke\n  if (project?.style?.stroke?.patternTexture?.buffer) {\n    project.style.stroke.patternTexture.buffer = project.style.stroke.patternTexture.buffer.slice()\n      .buffer as Uint8Array\n  }\n\n  return ({\n    ...project,\n    glyphs: map,\n    glyphImages: new Set(project.glyphImages || []),\n  } as unknown) as Project\n}\n\nexport default function decodeProject(buffer: ArrayBuffer): Project {\n  if (buffer.byteLength < 17) throw new Error('error')\n  const perfixBuffer = prefix()\n  const u8 = new Uint8Array(buffer)\n  const filePrefix = u8.slice(0, perfixBuffer.byteLength)\n  let isSbf = true\n  perfixBuffer.forEach((e, i) => {\n    if (filePrefix[i] !== e) isSbf = false\n  })\n\n  if (!isSbf) throw new Error('unknow file')\n\n  const project = proto.Project.decode(u8.slice(filePrefix.byteLength))\n\n  return toOriginBuffer(project)\n}\n","import React, { useState, useEffect, FunctionComponent } from 'react'\nimport hotkeys from 'hotkeys-js'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport { useProject } from 'src/store/hooks'\nimport GridInput from 'src/app/components/GridInput/GridInput'\n\ninterface ExportButtonProps {\n  className?: string\n  onSave?: (config: { ext: string; type: string }) => void\n}\n\nconst ExportButton: FunctionComponent<ExportButtonProps> = (\n  props: ExportButtonProps,\n) => {\n  const { className, onSave } = props\n  const project = useProject()\n  const { name } = project\n  const [open, setOpen] = useState(false)\n  const [val, setVal] = useState(0)\n  const [list] = useState([\n    { id: 0, ext: 'fnt', type: 'xml' },\n    { id: 1, ext: 'xml', type: 'xml' },\n    { id: 2, ext: 'fnt', type: 'text' },\n    { id: 3, ext: 'text', type: 'text' },\n  ])\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>,\n  ) => {\n    setVal(e.target.value as number)\n  }\n  const handleSave = () => {\n    if (onSave)\n      onSave({\n        ext: list[val].ext,\n        type: list[val].type,\n      })\n    handleClose()\n  }\n\n  useEffect(() => {\n    hotkeys.unbind('ctrl+shift+s,command+shift+s')\n    hotkeys('ctrl+shift+s,command+shift+s', handleClickOpen)\n    return () => {\n      hotkeys.unbind('ctrl+shift+s,command+shift+s')\n    }\n  }, [])\n\n  return (\n    <>\n      <Button\n        className={className}\n        title='Export BitmapFont (⌘⇧ + S)'\n        onClick={handleClickOpen}\n      >\n        Export\n      </Button>\n      <Dialog onClose={handleClose} open={open} fullWidth maxWidth='xs'>\n        <DialogTitle>Export Config</DialogTitle>\n        <DialogContent dividers>\n          <GridInput before='Export Type:' childrenWidth={8}>\n            <Select displayEmpty value={val} onChange={handleChange}>\n              {list.map((item) => (\n                <MenuItem value={item.id} key={item.id}>\n                  {`${name}.${item.ext} (BMFont ${item.type.toUpperCase()})`}\n                </MenuItem>\n              ))}\n            </Select>\n          </GridInput>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleSave} color='default'>\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default ExportButton\n","import React, {\n  FunctionComponent,\n  useState,\n  useEffect,\n  useCallback,\n  useRef,\n} from 'react'\nimport { toJS } from 'mobx'\nimport hotkeys from 'hotkeys-js'\nimport { observer } from 'mobx-react'\nimport Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport Snackbar from '@material-ui/core/Snackbar'\n\nimport { useWorkspace } from 'src/store/hooks'\n\nimport readFile from 'src/utils/readFile'\n\nimport outputFile from 'src/file/outputFile'\nimport saveProject from 'src/file/saveProject'\nimport decodeProject from 'src/file/decodeProject'\n\nimport ExportButton from './ExportButton'\n\nconst useStyles = makeStyles(({ zIndex, spacing }) =>\n  createStyles({\n    root: {\n      position: 'relative',\n      zIndex: zIndex.appBar,\n    },\n    appName: {\n      fontSize: '1.25rem',\n      fontWeight: 'bolder',\n      marginRight: spacing(4),\n    },\n    appNameSup: {\n      fontWeight: 'lighter',\n      fontSize: '0.5em',\n      marginLeft: '0.5rem',\n    },\n    btn: {\n      textTransform: 'none',\n    },\n  }),\n)\n\nconst TitleBar: FunctionComponent<unknown> = () => {\n  const classes = useStyles()\n  const [toast, setToast] = useState<{\n    open: boolean\n    component: React.ReactNode | null\n  }>({ open: false, component: null })\n  const worckSpace = useWorkspace()\n  const labelRef = useRef<HTMLLabelElement>(null)\n  const { addProject } = worckSpace\n  const project = worckSpace.currentProject\n  const handleLoad = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    if (e.target?.files && e.target.files[0]) {\n      readFile(e.target.files[0]).then((buffer) => {\n        try {\n          if (buffer instanceof ArrayBuffer) addProject(decodeProject(buffer))\n        } catch (err) {\n          setToast({\n            open: true,\n            component: (\n              <Box display='flex' alignItems='center'>\n                <ErrorIcon />\n                {`${err.toString()}`}\n              </Box>\n            ),\n          })\n        }\n      })\n    }\n  }\n\n  const handleNewProject = useCallback(\n    (e: { preventDefault(): void }) => {\n      e.preventDefault()\n      addProject()\n      return false\n    },\n    [addProject],\n  )\n\n  const handleSaveProject = useCallback(\n    (e: { preventDefault(): void }) => {\n      e.preventDefault()\n      saveProject(toJS(project))\n      return false\n    },\n    [project],\n  )\n\n  const handleSaveBitmapFont = useCallback(\n    (config) => {\n      outputFile(project, config)\n    },\n    [project],\n  )\n\n  const handleOpenProject = useCallback((e: { preventDefault(): void }) => {\n    e.preventDefault()\n    if (labelRef.current) labelRef.current.click()\n    return false\n  }, [])\n\n  const handleToastClose = () => {\n    setToast((t) => {\n      return {\n        ...t,\n        open: false,\n      }\n    })\n  }\n\n  useEffect(() => {\n    hotkeys.unbind('alt+n,control+n')\n    hotkeys.unbind('ctrl+s')\n    hotkeys.unbind('ctrl+o,command+o')\n    hotkeys('alt+n,control+n', handleNewProject)\n    hotkeys('ctrl+s', handleSaveProject)\n    hotkeys('ctrl+o,command+o', handleOpenProject)\n    return () => {\n      hotkeys.unbind('alt+n,control+n')\n      hotkeys.unbind('ctrl+s')\n      hotkeys.unbind('ctrl+o,command+o')\n    }\n  }, [handleNewProject, handleOpenProject, handleSaveProject])\n\n  return (\n    <Box\n      className={classes.root}\n      bgcolor='background.titleBar'\n      paddingX={4}\n      display='flex'\n      alignItems='center'\n    >\n      {/* lowing modifiers: ⇧, shift, option, ⌥, alt, ctrl, control, command, and ⌘. */}\n      <Typography variant='h1' className={classes.appName}>\n        SnowB BMF\n        <sup className={classes.appNameSup}>BETA</sup>\n      </Typography>\n      <Box flex='auto' paddingX={4}>\n        <Button\n          className={classes.btn}\n          title='New Project (ALT + N)'\n          onClick={handleNewProject}\n        >\n          New\n        </Button>\n        <Button\n          className={classes.btn}\n          title='Open Project (⌘ + O)'\n          component='label'\n          ref={labelRef}\n        >\n          Open\n          <input type='file' onChange={handleLoad} accept='.sbf' hidden />\n        </Button>\n        <Button\n          className={classes.btn}\n          title='Save Project (⌘ + S)'\n          onClick={handleSaveProject}\n        >\n          Save\n        </Button>\n        <ExportButton className={classes.btn} onSave={handleSaveBitmapFont} />\n      </Box>\n      <IconButton\n        size='small'\n        component='a'\n        href='https://github.com/SilenceLeo/snowb-bmf'\n        target='_blank'\n        title='GitHub'\n      >\n        <GitHubIcon />\n      </IconButton>\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={toast.open}\n        onClose={handleToastClose}\n        message={toast.component}\n      />\n    </Box>\n  )\n}\nexport default observer(TitleBar)\n","import { saveAs } from 'file-saver'\nimport { Project } from 'src/store'\nimport proto, { IProject } from 'src/proto'\n\nimport prefix from './prefix'\n\nexport default function saveProject(project: Project): void {\n  // font\n  if (project.style.font.font) {\n    project.style.font.font = new Uint8Array(project.style.font.font)\n  }\n\n  // images\n  project.glyphImages.forEach((glyphImage) => {\n    if (glyphImage.buffer) glyphImage.buffer = new Uint8Array(glyphImage.buffer)\n  })\n\n  // fill\n  if (project.style.fill.patternTexture.buffer) {\n    project.style.fill.patternTexture.buffer = new Uint8Array(\n      project.style.fill.patternTexture.buffer,\n    )\n  }\n\n  // stroke\n  if (project.style.stroke.patternTexture.buffer) {\n    project.style.stroke.patternTexture.buffer = new Uint8Array(\n      project.style.stroke.patternTexture.buffer,\n    )\n  }\n\n  const protoProject = proto.Project.create((project as unknown) as IProject)\n  const projectBuffer = proto.Project.encode(protoProject).finish()\n  const perfixBuffer = prefix()\n\n  const buffer = new Uint8Array(\n    perfixBuffer.byteLength + projectBuffer.byteLength,\n  )\n  buffer.set(perfixBuffer, 0)\n  buffer.set(projectBuffer, perfixBuffer.byteLength)\n\n  saveAs(new Blob([buffer]), `${project.name}.sbf`)\n}\n","import JSZip from 'jszip'\nimport { saveAs } from 'file-saver'\nimport { Project } from 'src/store'\nimport getXmlString from './getXmlString'\nimport getLuaString from './getLuaString'\nimport getTextString from './getTextString'\nimport toOutputInfo from './toOutputInfo'\n\ninterface OutputConfig {\n  type: 'xml' | 'text' | 'lua'\n  ext: 'fnt' | 'xml'\n}\n\nexport default function outputFile(\n  project: Project,\n  config = {\n    type: 'xml',\n    ext: 'fnt',\n  },\n): void {\n  const zip = new JSZip()\n  const { packCanvas, name } = project\n  const bmfont = toOutputInfo(project)\n  let text = ''\n\n  switch (config.type) {\n    case 'text':\n      text = getTextString(bmfont)\n      break\n    case 'lua':\n      text = getLuaString(bmfont)\n      break\n    default:\n      text = getXmlString(bmfont)\n      break\n  }\n\n  zip.file(`${name}.${config.ext}`, text)\n  if (packCanvas) {\n    packCanvas.toBlob((blob) => {\n      if (blob) zip.file(`${name}.png`, blob)\n      zip\n        .generateAsync({ type: 'blob' })\n        .then((content) => saveAs(content, `${name}.zip`))\n    })\n  }\n}\n","import React, { FunctionComponent } from 'react'\nimport { SketchPicker, ColorResult } from 'react-color'\nimport { useTheme, makeStyles, createStyles } from '@material-ui/core/styles'\nimport Popper, { PopperPlacementType } from '@material-ui/core/Popper'\n\nexport interface ChildrenProps {\n  open: boolean\n  color: string\n  placement: PopperPlacementType\n  anchorEl: HTMLDivElement | null\n  onChange(color: string): void\n}\n\nconst usePickerStyle = () => {\n  const theme = useTheme()\n  const { palette } = theme\n\n  if (palette.type === 'light') return {}\n\n  return {\n    default: {\n      picker: {\n        background: palette.background.titleBar,\n        shadow: theme.shadows[24],\n      },\n      alpha: {\n        background: '#fff',\n      },\n      color: {\n        background: '#fff',\n      },\n    },\n  }\n}\n\nconst useStyles = makeStyles(({ palette }) =>\n  createStyles({\n    picker: {\n      '& *': {\n        color: `${palette.text.primary} !important`,\n        borderColor: `${palette.divider} !important`,\n      },\n      '& input': {\n        background: 'none',\n        color: `${palette.text.primary} !important`,\n        boxShadow: `none !important`,\n        border: `1px solid ${palette.divider} !important`,\n      },\n    },\n  }),\n)\n\nconst WrappedSketchPicker: FunctionComponent<Partial<ChildrenProps>> = (\n  props: Partial<ChildrenProps>,\n) => {\n  const { open, anchorEl, color, onChange, placement } = props\n  const classes = useStyles()\n  const pickerStyle = usePickerStyle()\n  return (\n    <Popper\n      open={!!open}\n      anchorEl={anchorEl}\n      placement={placement || 'bottom'}\n      style={{ zIndex: 999999 }}\n    >\n      <SketchPicker\n        color={color}\n        styles={pickerStyle}\n        className={classes.picker}\n        onChange={({ rgb }: ColorResult) => {\n          if (onChange)\n            onChange(\n              `rgba(${rgb.r},${rgb.g},${rgb.b},${\n                typeof rgb.a === 'undefined' ? 1 : rgb.a\n              })`,\n            )\n        }}\n      />\n    </Popper>\n  )\n}\n\nexport default WrappedSketchPicker\n","import React, { FunctionComponent, useRef, useState } from 'react'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener'\n\nimport WrappedSketchPicker from '../WrappedSketchPicker'\n\nexport interface ColorInputProps {\n  color?: string\n  onChange?: (color: string) => void\n}\n\nconst useStyles = makeStyles(({ palette, bgPixel }: Theme) =>\n  createStyles({\n    root: {\n      overflow: 'hidden',\n    },\n    swatch: {\n      ...bgPixel,\n      display: 'inline-block',\n      cursor: 'pointer',\n    },\n    color: {\n      width: '46px',\n      height: '24px',\n      border: `5px solid ${palette.primary.main}`,\n      backgroundColor: (props: ColorInputProps) => props.color || '',\n    },\n  }),\n)\n\nconst ColorInput: FunctionComponent<ColorInputProps> = (\n  props: ColorInputProps,\n) => {\n  const { color, onChange } = props\n  const classes = useStyles(props)\n  const anchorEl = useRef(null)\n  const [open, setOpen] = useState(false)\n\n  return (\n    <ClickAwayListener\n      mouseEvent='onMouseDown'\n      onClickAway={() => setOpen(false)}\n    >\n      <div aria-hidden className={classes.swatch} ref={anchorEl}>\n        <div\n          aria-hidden\n          className={classes.color}\n          onClick={() => setOpen(!open)}\n        />\n        <WrappedSketchPicker\n          open={open}\n          anchorEl={anchorEl.current}\n          color={color || '#000000'}\n          onChange={onChange}\n        />\n      </div>\n    </ClickAwayListener>\n  )\n}\n\nexport default ColorInput\n","import React, { FunctionComponent } from 'react'\n\nimport GridInput from 'src/app/components/GridInput'\nimport ColorInput from 'src/app/components/ColorInput'\n\ninterface FormColorProps {\n  color: string\n  onChange(color: string): void\n}\n\nconst FormColor: FunctionComponent<FormColorProps> = (\n  props: FormColorProps,\n) => {\n  const { color, onChange } = props\n\n  return (\n    <GridInput before='Color:' childrenWidth={3}>\n      <ColorInput color={color} onChange={onChange} />\n    </GridInput>\n  )\n}\n\nexport default FormColor\n","import React, {\n  FunctionComponent,\n  DetailedHTMLProps,\n  HTMLAttributes,\n} from 'react'\nimport clsx from 'clsx'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\n\ninterface ColorStopPorps\n  extends DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement> {\n  left?: string | number\n  top?: string | number\n  color: string\n  isActive: boolean\n}\n\nconst useStyles = makeStyles(({ bgPixel, palette }: Theme) =>\n  createStyles({\n    root: {\n      ...bgPixel,\n      width: '12px',\n      height: '12px',\n      border: `solid ${palette.primary.main}`,\n      borderWidth: '0 1px 1px',\n      position: 'absolute',\n      cursor: 'pointer',\n      marginLeft: '-6px',\n      left: (props) => props.left || 0,\n      zIndex: (props) => (props.isActive ? 2 : 1),\n      '&:before,&:after': {\n        position: 'absolute',\n        content: '\"\"',\n        width: 0,\n        height: 0,\n        borderStyle: 'solid',\n        left: '0',\n      },\n      '&:before': {\n        top: '-6px',\n        left: '-1px',\n        borderWidth: '0 6px 6px 6px',\n        borderColor: `transparent transparent ${palette.primary.dark} transparent`,\n      },\n      '&:after': {\n        top: '-5px',\n        borderWidth: '0 5px 5px 5px',\n        borderColor: (props) => {\n          const activeColor =\n            palette.type === 'dark'\n              ? palette.common.white\n              : palette.common.black\n\n          return `transparent transparent ${\n            props.isActive ? activeColor : palette.grey[600]\n          } transparent`\n        },\n      },\n    },\n    color: {\n      width: '100%',\n      height: '100%',\n      pointerEvents: 'none',\n      backgroundColor: ({ color }: ColorStopPorps) => color || 'transparent',\n    },\n  }),\n)\n\nconst ColorStop: FunctionComponent<ColorStopPorps> = (\n  props: ColorStopPorps,\n) => {\n  const { left, top, color, isActive, className, ...divProps } = props\n  const classes = useStyles({ left, top, color, isActive })\n\n  return (\n    <div className={clsx(classes.root, className)} {...divProps}>\n      <div className={classes.color} />\n    </div>\n  )\n}\n\nexport default ColorStop\n","import React, {\n  FunctionComponent,\n  useCallback,\n  useRef,\n  MutableRefObject,\n  useState,\n  useEffect,\n} from 'react'\nimport clsx from 'clsx'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport ColorStop from './ColorStop'\n\nexport interface AddPaletteItem {\n  offset: number\n  color: string\n}\n\nexport interface PaletteItem extends AddPaletteItem {\n  id: number\n  offset: number\n  color: string\n}\n\ninterface ColorStopsHolderProps {\n  className?: string\n  palette: PaletteItem[]\n  activeId?: number\n  onAdd(offset: number): void\n  onUpdate(paletteItem: Partial<AddPaletteItem>, isDelete?: boolean): void\n  onSelect(id?: number): void\n}\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      width: '100%',\n      height: '17px',\n      position: 'relative',\n      cursor: 'crosshair',\n    },\n  }),\n)\n\nconst ColorStopsHolder: FunctionComponent<ColorStopsHolderProps> = (\n  props: ColorStopsHolderProps,\n) => {\n  const { className, palette, activeId, onAdd, onUpdate, onSelect } = props\n  const classes = useStyles(props)\n  const [width, setWidth] = useState(0)\n  const [startPoint, setStartPoint] = useState({ x: 0, y: 0, offset: 0 })\n  const [isDragging, setIsDragging] = useState(false)\n  const rootRef: MutableRefObject<HTMLDivElement | null> = useRef(null)\n\n  useEffect(() => {\n    if (rootRef.current) {\n      setWidth(rootRef.current.clientWidth)\n    }\n  }, [rootRef])\n\n  const handleAddPalette = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n  ) => {\n    const target = rootRef.current\n    if (!target || e.buttons !== 1) return\n    const { left } = target.getBoundingClientRect()\n    const offset = (e.clientX - left) / width\n    onAdd(offset)\n    setIsDragging(true)\n    setStartPoint({ x: e.clientX, y: e.clientY, offset })\n  }\n\n  const handleMouseDown = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    paletteItem: PaletteItem,\n  ) => {\n    if (e.buttons !== 1) return\n    e.preventDefault()\n    e.stopPropagation()\n    setStartPoint({ x: e.clientX, y: e.clientY, offset: paletteItem.offset })\n    setIsDragging(true)\n    onSelect(paletteItem.id)\n  }\n\n  const handleMouseMove = useCallback(\n    (e: MouseEvent) => {\n      if (!isDragging || !activeId) return\n      if (e.buttons !== 1) {\n        setIsDragging(false)\n        return\n      }\n      const idx = palette.findIndex(\n        (paletteItem) => paletteItem.id === activeId,\n      )\n\n      if (idx < 0) return\n      const newPalette = [...palette]\n\n      if (Math.abs(e.clientY - startPoint.y) > 50) {\n        onUpdate(newPalette[idx], true)\n        return\n      }\n\n      const paletteItem = newPalette[idx]\n      const offset = Math.min(\n        Math.max((e.clientX - startPoint.x) / width + startPoint.offset, 0),\n        1,\n      )\n      newPalette[idx] = { ...paletteItem, offset }\n      onUpdate({ offset })\n    },\n    [\n      activeId,\n      isDragging,\n      onUpdate,\n      palette,\n      startPoint.offset,\n      startPoint.x,\n      startPoint.y,\n      width,\n    ],\n  )\n\n  const handleMouseUp = useCallback((e: MouseEvent) => {\n    e.stopPropagation()\n    e.preventDefault()\n    setIsDragging(false)\n  }, [])\n\n  useEffect(() => {\n    if (isDragging) {\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    } else {\n      window.removeEventListener('mousemove', handleMouseMove)\n      window.removeEventListener('mouseup', handleMouseUp)\n    }\n\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove)\n      window.removeEventListener('mouseup', handleMouseUp)\n    }\n  }, [handleMouseMove, handleMouseUp, isDragging])\n\n  return (\n    <div\n      aria-hidden\n      ref={rootRef}\n      className={clsx(classes.root, className)}\n      onMouseDown={handleAddPalette}\n    >\n      {palette.map((paletteItem) => (\n        <ColorStop\n          key={paletteItem.id}\n          left={width * paletteItem.offset}\n          color={paletteItem.color}\n          isActive={paletteItem.id === activeId}\n          onMouseDown={(e) => handleMouseDown(e, paletteItem)}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default ColorStopsHolder\n","import React, { FunctionComponent, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nexport interface PaletteItem {\n  id: number | string\n  offset: number\n  color: string\n}\n\ninterface PaletteProps {\n  width?: number | string\n  height?: number | string\n  palette: PaletteItem[]\n}\n\nconst useStyles = makeStyles(({ bgPixel }) => ({\n  root: {\n    ...bgPixel,\n    width: (props: PaletteProps) => props.width || '100%',\n    height: (props: PaletteProps) => props.height || '100%',\n    border: '1px solid #ccc',\n  },\n  svg: {\n    width: '100%',\n    height: '100%',\n    verticalAlign: 'top',\n  },\n}))\n\nconst Palette: FunctionComponent<PaletteProps> = (\n  props: PaletteProps,\n): JSX.Element => {\n  const classes = useStyles(props)\n  const { palette } = props\n  const [id] = useState(`palette_${Math.random().toString().substr(2, 9)}`)\n  const sortedPalette = [...palette].sort(\n    ({ offset: offset1 }, { offset: offset2 }) => offset1 - offset2,\n  )\n\n  return (\n    <div className={classes.root}>\n      <svg className={classes.svg}>\n        <defs>\n          <linearGradient id={id} x1='0' y1='0.5' x2='1' y2='0.5'>\n            {sortedPalette.map((item) => (\n              <stop\n                key={item.id}\n                offset={item.offset}\n                style={{ stopColor: item.color }}\n              />\n            ))}\n          </linearGradient>\n        </defs>\n        <rect x='0' y='0' width='100%' height='100%' fill={`url(#${id})`} />\n      </svg>\n    </div>\n  )\n}\n\nexport default Palette\n","import React, { FunctionComponent, useRef, useState, useEffect } from 'react'\nimport Color from 'color'\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener'\n\nimport ColorStopsHolder, {\n  AddPaletteItem,\n  PaletteItem,\n} from './ColorStopsHolder'\nimport Palette from '../Palette'\n\nexport interface GradientBuilderProps {\n  children?: JSX.Element\n  palette: PaletteItem[]\n  onAdd: (addPaletteItem: AddPaletteItem) => void\n  onUpdate: (palette: PaletteItem[]) => void\n}\n\nexport interface ChildrenProps {\n  open: boolean\n  anchorEl: HTMLDivElement | null\n  color: string\n  onChange(color: string): void\n}\n\nconst GradientBuilder: FunctionComponent<GradientBuilderProps> = (\n  props: GradientBuilderProps,\n) => {\n  const { children, palette, onUpdate, onAdd } = props\n  const rootEl: React.MutableRefObject<HTMLDivElement | null> = useRef(null)\n  const [oldPalette, setOldPalette] = useState([...palette])\n  const [activeId, setActiveId] = useState<number>(0)\n  const [activeColor, setActiveColor] = useState<string>('')\n  const [isAdd, setIsAdd] = useState(false)\n\n  useEffect(() => {\n    if (isAdd) {\n      const newIds = palette.map(({ id }) => id)\n      const oldIds = oldPalette.map(({ id }) => id)\n      const diff = Array.from(new Set([...newIds, ...oldIds])).filter(\n        (id) => !oldIds.includes(id),\n      )\n      if (diff.length > 0) {\n        setActiveId(diff[0])\n      }\n      setIsAdd(() => false)\n    }\n  }, [palette, isAdd, oldPalette])\n\n  useEffect(() => {\n    setOldPalette([...palette])\n  }, [palette])\n\n  useEffect(() => {\n    if (activeId) {\n      const paletteItem = palette.find((item) => item.id === activeId)\n      if (paletteItem) {\n        setActiveColor(paletteItem.color)\n      }\n    }\n  }, [activeId, palette])\n\n  const handleAdd = (offset: number) => {\n    const list = [...palette]\n    const current = { offset, color: '#000' }\n    let left: PaletteItem | undefined\n    let right: PaletteItem | undefined\n    setActiveId(0)\n\n    list.forEach((item) => {\n      if (\n        item.offset < current.offset &&\n        (!left || left.offset < item.offset)\n      ) {\n        left = item\n      } else if (!right || right.offset > item.offset) {\n        right = item\n      }\n    })\n\n    if (left && right) {\n      const offsetSpace =\n        (current.offset - left.offset) / (right.offset - left.offset)\n      const leftColor = Color(left.color)\n      const rightColor = Color(right.color)\n\n      const r =\n        (rightColor.red() - leftColor.red()) * offsetSpace + leftColor.red()\n      const g =\n        (rightColor.green() - leftColor.green()) * offsetSpace +\n        leftColor.green()\n      const b =\n        (rightColor.blue() - leftColor.blue()) * offsetSpace + leftColor.blue()\n      const a =\n        (rightColor.alpha() - leftColor.alpha()) * offsetSpace +\n        leftColor.alpha()\n      current.color = `rgba(${Math.round(r)},${Math.round(g)},${Math.round(\n        b,\n      )},${Math.round(a)})`\n    } else if (left || right) {\n      current.color = ((left || right) as PaletteItem).color\n    }\n\n    onAdd(current)\n    setIsAdd(true)\n  }\n\n  const handleUpdate = (item: Partial<AddPaletteItem>, isDelete = false) => {\n    if (!activeId) return\n\n    const newPalette = [...palette]\n    const idx = newPalette.findIndex(\n      (paletteItem) => paletteItem.id === activeId,\n    )\n    if (isDelete) {\n      onUpdate([...newPalette.slice(0, idx), ...newPalette.slice(idx + 1)])\n      setActiveId(0)\n    } else {\n      const updateItem = { ...newPalette[idx], ...item }\n      onUpdate([\n        ...newPalette.slice(0, idx),\n        updateItem,\n        ...newPalette.slice(idx + 1),\n      ])\n    }\n  }\n\n  return (\n    <ClickAwayListener\n      mouseEvent='onMouseDown'\n      onClickAway={() => setActiveId(0)}\n    >\n      <div ref={rootEl}>\n        <Palette palette={palette} height='35px' />\n        <ColorStopsHolder\n          palette={palette}\n          activeId={activeId}\n          onAdd={handleAdd}\n          onUpdate={handleUpdate}\n          onSelect={(id) => setActiveId(id || 0)}\n        />\n        {children\n          ? React.cloneElement(children, {\n              open: !!activeId || isAdd,\n              anchorEl: rootEl.current,\n              color: activeColor,\n              onChange: (color: string) =>\n                handleUpdate({\n                  color,\n                }),\n            })\n          : null}\n      </div>\n    </ClickAwayListener>\n  )\n}\nexport default GradientBuilder\n","import React, {\n  useState,\n  useRef,\n  useEffect,\n  FunctionComponent,\n  useCallback,\n} from 'react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nexport interface AnglePickerProps {\n  width?: number\n  angle: number\n  onChange(angle: number): void\n}\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      width: (props: AnglePickerProps) =>\n        props.width ? `${props.width}px` : '36px',\n      height: (props) => (props.width ? `${props.width}px` : '36px'),\n      position: 'relative',\n      cursor: 'crosshair',\n      overflow: 'hidden',\n      borderRadius: '100%',\n      background: '#FFF',\n    },\n    point: {\n      width: '6px',\n      height: '6px',\n      borderRadius: '100%',\n      position: 'relative',\n      left: '50%',\n      top: '50%',\n      marginTop: '-2px',\n      background: '#000',\n      pointerEvents: 'none',\n      transformOrigin: `0 50%`,\n      transform: (props) =>\n        `rotate(${props.angle || 0}deg) translate(${\n          (props.width || 36) / 2 - 8\n        }px, 0)`,\n    },\n  }),\n)\n\nconst AnglePicker: FunctionComponent<AnglePickerProps> = (\n  props: AnglePickerProps,\n) => {\n  const { onChange } = props\n  const rootRef = useRef<HTMLDivElement>(null)\n  const [isDragging, setIsDragging] = useState(false)\n  const classes = useStyles(props)\n\n  const handleMouseMove = useCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent> | MouseEvent) => {\n      if (!rootRef.current) return\n\n      const { clientX, clientY } = e\n      const bounds = rootRef.current.getBoundingClientRect()\n      const radians = Math.atan2(\n        clientY - (bounds.y + bounds.height / 2),\n        clientX - (bounds.x + bounds.width / 2),\n      )\n      onChange(Math.round(radians * (180 / Math.PI)))\n    },\n    [onChange],\n  )\n\n  const handleMouseUp = useCallback((e: MouseEvent) => {\n    e.stopPropagation()\n    e.preventDefault()\n    setIsDragging(false)\n  }, [])\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!rootRef.current) return\n    setIsDragging(true)\n    handleMouseMove(e)\n  }\n\n  useEffect(() => {\n    if (isDragging) {\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    } else {\n      window.removeEventListener('mousemove', handleMouseMove)\n      window.removeEventListener('mouseup', handleMouseUp)\n    }\n\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove)\n      window.removeEventListener('mouseup', handleMouseUp)\n    }\n  }, [handleMouseMove, handleMouseUp, isDragging])\n\n  return (\n    <div\n      aria-hidden\n      className={classes.root}\n      ref={rootRef}\n      onMouseDown={handleMouseDown}\n    >\n      <div className={classes.point} />\n    </div>\n  )\n}\n\nexport default AnglePicker\n","import React, { FunctionComponent } from 'react'\nimport Input from '@material-ui/core/Input'\n\nimport GridInput from 'src/app/components/GridInput'\nimport AnglePicker, { AnglePickerProps } from 'src/app/components/AnglePicker'\n\nconst FormAngle: FunctionComponent<AnglePickerProps> = (\n  props: AnglePickerProps,\n) => {\n  const { angle, onChange } = props\n\n  return (\n    <GridInput\n      before='Angle:'\n      after={<AnglePicker width={24} angle={angle} onChange={onChange} />}\n    >\n      <Input\n        value={angle}\n        fullWidth\n        type='number'\n        onChange={(e) => onChange(Number(e.target.value))}\n      />\n    </GridInput>\n  )\n}\n\nexport default FormAngle\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Box from '@material-ui/core/Box'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\nimport GradientPicker from 'src/app/components/GradientPicker'\nimport WrappedSketchPicker from 'src/app/components/WrappedSketchPicker'\nimport { Gradient, GradientType } from 'src/store'\nimport GridInput from 'src/app/components/GridInput'\n\nimport FormAngle from '../FormAngle'\n\ninterface FormGradient {\n  gradient: Gradient\n}\n\nconst FormGradient: FunctionComponent<FormGradient> = (props: FormGradient) => {\n  const {\n    gradient: {\n      type,\n      angle,\n      palette,\n      addColor,\n      updatePalette,\n      setAngle,\n      setType,\n    },\n  } = props\n\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <FormAngle angle={angle} onChange={setAngle} />\n      </Box>\n\n      <Box paddingX={2} marginY={4}>\n        <GridInput before='Type:' component='div' childrenWidth={8}>\n          <RadioGroup\n            row\n            name='type'\n            value={type}\n            onChange={(e) => setType(Number(e.target.value))}\n            style={{ flexWrap: 'nowrap' }}\n          >\n            <FormControlLabel\n              value={GradientType.LINEAR}\n              control={<Radio size='small' color='default' />}\n              label='Linear'\n            />\n            <FormControlLabel\n              value={GradientType.RADIAL}\n              control={<Radio size='small' color='default' />}\n              label='Radial'\n            />\n          </RadioGroup>\n        </GridInput>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <GradientPicker\n          palette={palette}\n          onAdd={(e) => addColor(e.offset, e.color)}\n          onUpdate={updatePalette}\n        >\n          <WrappedSketchPicker />\n        </GradientPicker>\n      </Box>\n    </>\n  )\n}\n\nexport default observer(FormGradient)\n","import React, { FunctionComponent } from 'react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\n\nimport readFile from 'src/utils/readFile'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      width: theme.spacing(12),\n      height: theme.spacing(12),\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      position: 'relative',\n      border: `1px solid ${theme.palette.primary.main}`,\n      cursor: 'pointer',\n      ...theme.bgPixel,\n    },\n    image: {\n      maxWidth: '100%',\n      maxHeight: '100%',\n      pointerEvents: 'none',\n    },\n  }),\n)\n\ninterface FileSelectorProps {\n  src: string\n  onChange(image: ArrayBuffer): void\n}\n\nconst FileSelector: FunctionComponent<FileSelectorProps> = (\n  props: FileSelectorProps,\n) => {\n  const { src, onChange } = props\n  const classes = useStyles()\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    if (!e.target.files) return\n    if (e.target.files.length > 0) {\n      readFile(e.target.files[0]).then((buffer) => {\n        if (buffer instanceof ArrayBuffer) onChange(buffer)\n      })\n    }\n  }\n\n  return (\n    <Box component='label' className={classes.root}>\n      <input\n        hidden\n        type='file'\n        multiple\n        accept='image/*'\n        onChange={handleChange}\n      />\n      <img className={classes.image} src={src} alt='' />\n    </Box>\n  )\n}\n\nexport default FileSelector\n","import React, { FunctionComponent } from 'react'\n\nimport GridInput from 'src/app/components/GridInput'\nimport Box from '@material-ui/core/Box'\nimport Input from '@material-ui/core/Input'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport { PatternTexture, Repetition } from 'src/store'\n\nimport FileSelector from './FileSelector'\n\ninterface FormImageProps {\n  patternTexture: PatternTexture\n  scale: number\n  src: string\n  onChangeImage(buffer: ArrayBuffer): void\n  onChangeScale(scale: number): void\n}\n\nconst FormImage: FunctionComponent<FormImageProps> = (\n  props: FormImageProps,\n) => {\n  const { patternTexture } = props\n  const {\n    src,\n    scale,\n    repetition,\n    setRepetition,\n    setScale,\n    setImage,\n  } = patternTexture\n\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <GridInput\n          component='div'\n          before='Scale:'\n          after={<FileSelector src={src} onChange={setImage} />}\n        >\n          <Input\n            value={scale}\n            fullWidth\n            type='number'\n            inputProps={{ min: 0.01, step: 0.1 }}\n            onChange={(e) => setScale(Number(e.target.value))}\n          />\n        </GridInput>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <GridInput before='Repeat:'>\n          <Select\n            value={repetition}\n            onChange={(e) => setRepetition(e.target.value as Repetition)}\n            displayEmpty\n            fullWidth\n          >\n            <MenuItem value='repeat'>Repeat</MenuItem>\n            <MenuItem value='repeat-x'>Repeat-x</MenuItem>\n            <MenuItem value='repeat-y'>Repeat-y</MenuItem>\n            <MenuItem value='no-repeat'>No Repeat</MenuItem>\n          </Select>\n        </GridInput>\n      </Box>\n    </>\n  )\n}\n\nexport default FormImage\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Box from '@material-ui/core/Box'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\nimport { FontStyleConfig, FillType } from 'src/store'\n\nimport FormColor from '../FormColor'\nimport FormGradient from '../FormGradient'\nimport FormImage from '../FormImage'\n\ninterface FormFillProps {\n  config: FontStyleConfig\n}\n\nconst FormFill: FunctionComponent<FormFillProps> = (props: FormFillProps) => {\n  const {\n    config: { type, color, gradient, patternTexture, setType, setColor },\n  } = props\n\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <RadioGroup\n          row\n          name='type'\n          value={type}\n          onChange={(e) => setType(Number(e.target.value))}\n        >\n          <FormControlLabel\n            value={FillType.SOLID}\n            control={<Radio size='small' color='default' />}\n            label='Solid'\n          />\n          <FormControlLabel\n            value={FillType.GRADIENT}\n            control={<Radio size='small' color='default' />}\n            label='Gradient'\n          />\n          <FormControlLabel\n            value={FillType.IMAGE}\n            control={<Radio size='small' color='default' />}\n            label='Image'\n          />\n        </RadioGroup>\n      </Box>\n      {type === 0 ? (\n        <Box paddingX={2} marginY={4}>\n          <FormColor color={color} onChange={setColor} />\n        </Box>\n      ) : null}\n      {type === 1 ? <FormGradient gradient={gradient} /> : null}\n      {type === 2 ? (\n        <FormImage\n          patternTexture={patternTexture}\n          src={patternTexture.src}\n          scale={patternTexture.scale}\n          onChangeImage={patternTexture.setImage}\n          onChangeScale={patternTexture.setScale}\n        />\n      ) : null}\n    </>\n  )\n}\n\nexport default observer(FormFill)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\n\nimport { useFill } from 'src/store/hooks'\nimport FormFill from '../../../common/FormFill'\n\nconst Fill: FunctionComponent<unknown> = () => {\n  const fill = useFill()\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <Typography>Fill</Typography>\n      </Box>\n      <FormFill config={fill} />\n    </>\n  )\n}\n\nexport default observer(Fill)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Input from '@material-ui/core/Input'\nimport Switch from '@material-ui/core/Switch'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\n\nimport { useStyle } from 'src/store/hooks'\nimport GridInput from 'src/app/components/GridInput'\n\nimport FormFill from 'src/app/layout/common/FormFill'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    disabled: {\n      opacity: 0.3,\n      pointerEvents: 'none',\n    },\n    title: {\n      flex: 1,\n    },\n  }),\n)\n\nconst Stroke: FunctionComponent<unknown> = () => {\n  const classes = useStyles()\n  const { stroke, useStroke, setUseStroke } = useStyle()\n  const { setWidth, lineJoin, setLineJoin, lineCap, setLineCap } = stroke\n\n  return (\n    <>\n      <Box\n        component='label'\n        display='flex'\n        alignItems='center'\n        paddingX={2}\n        marginY={4}\n      >\n        <Typography component='div' className={classes.title}>\n          Stroke\n        </Typography>\n        Off\n        <Switch\n          size='small'\n          checked={useStroke}\n          onChange={(e) => setUseStroke(e.target.checked)}\n        />\n        On\n      </Box>\n      <div className={useStroke ? '' : classes.disabled}>\n        <Box paddingX={2} marginY={4}>\n          <GridInput before='Width:' after='px'>\n            <Input\n              value={stroke?.width || 0}\n              fullWidth\n              type='number'\n              inputProps={{ min: 0 }}\n              onChange={(e) => setWidth(Number(e.target.value))}\n            />\n          </GridInput>\n        </Box>\n\n        <Box paddingX={2} marginY={4}>\n          <GridInput before='Line Cap:' component='div' childrenWidth={8}>\n            <ButtonGroup size='small' color='primary'>\n              <Button\n                onClick={() => setLineCap('butt')}\n                variant={lineCap === 'butt' ? 'contained' : 'outlined'}\n              >\n                Butt\n              </Button>\n              <Button\n                onClick={() => setLineCap('round')}\n                variant={lineCap === 'round' ? 'contained' : 'outlined'}\n              >\n                Round\n              </Button>\n              <Button\n                onClick={() => setLineCap('square')}\n                variant={lineCap === 'square' ? 'contained' : 'outlined'}\n              >\n                Square\n              </Button>\n            </ButtonGroup>\n          </GridInput>\n        </Box>\n\n        <Box paddingX={2} marginY={4}>\n          <GridInput before='Line Join:' component='div' childrenWidth={8}>\n            <ButtonGroup size='small' color='primary'>\n              <Button\n                onClick={() => setLineJoin('miter')}\n                variant={lineJoin === 'miter' ? 'contained' : 'outlined'}\n              >\n                Miter\n              </Button>\n              <Button\n                onClick={() => setLineJoin('round')}\n                variant={lineJoin === 'round' ? 'contained' : 'outlined'}\n              >\n                Round\n              </Button>\n              <Button\n                onClick={() => setLineJoin('bevel')}\n                variant={lineJoin === 'bevel' ? 'contained' : 'outlined'}\n              >\n                Bevel\n              </Button>\n            </ButtonGroup>\n          </GridInput>\n        </Box>\n        <FormFill config={stroke} />\n      </div>\n    </>\n  )\n}\n\nexport default observer(Stroke)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport Input from '@material-ui/core/Input'\nimport Switch from '@material-ui/core/Switch'\n\nimport { useStyle } from 'src/store/hooks'\nimport GridInput from 'src/app/components/GridInput'\nimport FormColor from '../../../common/FormColor'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    disabled: {\n      opacity: 0.3,\n      pointerEvents: 'none',\n    },\n    title: {\n      flex: 1,\n    },\n  }),\n)\n\nconst Shadow: FunctionComponent<unknown> = () => {\n  const { shadow, useShadow, setUseShadow } = useStyle()\n  const { setOffsetX, setOffsetY, setBlur, setColor } = shadow\n  const classes = useStyles()\n\n  return (\n    <>\n      <Box\n        component='label'\n        display='flex'\n        alignItems='center'\n        paddingX={2}\n        marginY={4}\n      >\n        <Typography component='div' className={classes.title}>\n          Shadow\n        </Typography>\n        Off\n        <Switch\n          size='small'\n          checked={useShadow}\n          onChange={(e) => setUseShadow(e.target.checked)}\n        />\n        On\n      </Box>\n      <div className={useShadow ? '' : classes.disabled}>\n        <Box paddingX={2} marginY={4}>\n          <GridInput before='Offset X:' after='px'>\n            <Input\n              value={shadow?.offsetX || 0}\n              fullWidth\n              type='number'\n              disabled={!useShadow}\n              onChange={(e) => setOffsetX(Number(e.target.value))}\n            />\n          </GridInput>\n        </Box>\n        <Box paddingX={2} marginY={4}>\n          <GridInput before='Offset Y:' after='px'>\n            <Input\n              value={shadow?.offsetY || 0}\n              fullWidth\n              type='number'\n              disabled={!useShadow}\n              onChange={(e) => setOffsetY(Number(e.target.value))}\n            />\n          </GridInput>\n        </Box>\n        <Box paddingX={2} marginY={4}>\n          <GridInput before='Blur:' after='px'>\n            <Input\n              value={shadow?.blur || 0}\n              fullWidth\n              type='number'\n              disabled={!useShadow}\n              inputProps={{ style: { textAlign: 'right' }, min: 0 }}\n              onChange={(e) => setBlur(Number(e.target.value))}\n            />\n          </GridInput>\n        </Box>\n        <Box paddingX={2} marginY={4}>\n          <FormColor color={shadow?.color || ''} onChange={setColor} />\n        </Box>\n      </div>\n    </>\n  )\n}\nexport default observer(Shadow)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\n\nimport { useStyle } from 'src/store/hooks'\nimport FormColor from '../../../common/FormColor'\n\nconst BackgroundColor: FunctionComponent<unknown> = () => {\n  const { bgColor, setBgColor } = useStyle()\n\n  return (\n    <>\n      <Box\n        component='label'\n        display='flex'\n        alignItems='center'\n        paddingX={2}\n        marginY={4}\n      >\n        <Typography>Background Color</Typography>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <FormColor color={bgColor || ''} onChange={setBgColor} />\n      </Box>\n    </>\n  )\n}\n\nexport default observer(BackgroundColor)\n","import React, { FunctionComponent } from 'react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Divider from '@material-ui/core/Divider'\nimport Typography from '@material-ui/core/Typography'\n\nimport Fill from './modules/Fill'\nimport Stroke from './modules/Stroke'\nimport Shadow from './modules/Shadow'\nimport BackgroundColor from './modules/BackgroundColor'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      overflow: 'hidden',\n      width: '256px',\n    },\n  }),\n)\n\nconst RightBar: FunctionComponent<unknown> = () => {\n  const classes = useStyles()\n\n  return (\n    <Box\n      bgcolor='background.sidebar'\n      display='flex'\n      flexDirection='column'\n      overflow='hidden'\n      className={classes.root}\n    >\n      <Box bgcolor='background.sidebar' boxShadow={2} padding={2}>\n        <Typography variant='subtitle2'>Style Config</Typography>\n      </Box>\n      <Box flex={1} height={0} overflow='hidden auto'>\n        <Fill />\n        <Divider />\n        <Stroke />\n        <Divider />\n        <Shadow />\n        <Divider />\n        <BackgroundColor />\n      </Box>\n    </Box>\n  )\n}\n\nexport default RightBar\n","import { useEffect, useCallback, RefObject, DependencyList } from 'react'\n\ninterface DeltaInfo {\n  deltaScale: number\n  deltaX: number\n  deltaY: number\n}\n\ninterface WheelCallback {\n  (deltaInfo: DeltaInfo): void\n}\n\nfunction useWheel(\n  ref: RefObject<HTMLElement>,\n  onWheel: WheelCallback,\n  deps: DependencyList = [],\n): void {\n  const callback = useCallback(onWheel, deps)\n  const handleWheel = useCallback(\n    (e: WheelEvent) => {\n      e.preventDefault()\n      e.stopPropagation()\n      const { ctrlKey, altKey, deltaX, deltaY } = e\n      if (ctrlKey) {\n        let d = -0.01\n        if (Math.abs(deltaY) > 50) d *= 0.1\n        callback({ deltaScale: deltaY * d, deltaX: 0, deltaY: 0 })\n      } else {\n        let x = -deltaX\n        let y = -deltaY\n        if (deltaX === 0 && altKey && Math.abs(deltaY) > 50) {\n          x = -deltaY\n          y = 0\n        }\n        callback({\n          deltaX: x,\n          deltaY: y,\n          deltaScale: 0,\n        })\n      }\n    },\n    [callback],\n  )\n\n  useEffect(() => {\n    if (!ref.current) return undefined\n\n    const dom = ref.current\n\n    dom.addEventListener('wheel', handleWheel, {\n      passive: false,\n    })\n\n    return () => dom.removeEventListener('wheel', handleWheel)\n  }, [ref, handleWheel])\n}\nexport default useWheel\n","import {\n  useState,\n  useEffect,\n  useMemo,\n  useCallback,\n  DependencyList,\n} from 'react'\n\ninterface OffsetInfo {\n  offsetX: number\n  offsetY: number\n}\n\ninterface WheelCallback {\n  (offsetInfo: OffsetInfo): void\n}\n\nconst point = {\n  x: 0,\n  y: 0,\n}\n\nfunction useSpaceDrag<T extends HTMLElement>(\n  onMove: WheelCallback,\n  deps: DependencyList = [],\n): [0 | 1 | 2, (e: React.MouseEvent<T, MouseEvent>) => void] {\n  const [moveState, setMoveState] = useState({\n    ks: false,\n    ms: false,\n  })\n\n  const dragStatus = useMemo(() => {\n    if (moveState.ks && moveState.ms) return 2\n    if (moveState.ks) return 1\n    return 0\n  }, [moveState.ks, moveState.ms])\n\n  const moveCallback = useCallback(onMove, deps)\n\n  const handleKeyEvent = useCallback(\n    (e: KeyboardEvent) => {\n      const state = e.keyCode === 32 && e.type === 'keydown'\n      if (moveState.ks === state) return\n      setMoveState((s) => {\n        return {\n          ...s,\n          ks: e.keyCode === 32 && e.type === 'keydown',\n        }\n      })\n    },\n    [moveState.ks],\n  )\n\n  const handleMouseDown = (e: React.MouseEvent<T, MouseEvent>) => {\n    if (!moveState.ks) return\n    const { clientX, clientY } = e\n    point.x = clientX\n    point.y = clientY\n    setMoveState((s) => {\n      return {\n        ...s,\n        ms: true,\n      }\n    })\n  }\n\n  const handleMove = useCallback(\n    (e: MouseEvent) => {\n      const { clientX, clientY } = e\n      const { x, y } = point\n\n      if (clientX - x === 0 && clientY - y === 0) return\n\n      moveCallback({\n        offsetX: clientX - x,\n        offsetY: clientY - y,\n      })\n\n      point.x = clientX\n      point.y = clientY\n    },\n    [moveCallback],\n  )\n\n  const handleEnd = useCallback(() => {\n    setMoveState((s) => {\n      return {\n        ...s,\n        ms: false,\n      }\n    })\n  }, [])\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyEvent)\n    window.addEventListener('keyup', handleKeyEvent)\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyEvent)\n      window.removeEventListener('keyup', handleKeyEvent)\n    }\n  }, [handleKeyEvent])\n\n  useEffect(() => {\n    if (moveState.ks && moveState.ms) {\n      window.addEventListener('mousemove', handleMove)\n      window.addEventListener('mouseup', handleEnd)\n    } else {\n      window.removeEventListener('mousemove', handleMove)\n      window.removeEventListener('mouseup', handleEnd)\n    }\n\n    return () => {\n      window.removeEventListener('mousemove', handleMove)\n      window.removeEventListener('mouseup', handleEnd)\n    }\n  }, [handleEnd, handleMove, moveState.ks, moveState.ms])\n\n  return [dragStatus, handleMouseDown]\n}\nexport default useSpaceDrag\n","import React, { useRef, useEffect, FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport { useProject } from 'src/store/hooks'\nimport useWheel from 'src/app/hooks/useWheel'\nimport useSpaceDrag from 'src/app/hooks/useSpaceDrag'\n\ninterface StyleProps {\n  width: number\n  height: number\n  scale: number\n  offsetX: number\n  offsetY: number\n  dragState: number\n}\n\nconst useStyles = makeStyles(({ bgPixel }) =>\n  createStyles({\n    root: {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden',\n      cursor: (props: StyleProps) => {\n        if (props.dragState === 2) return 'grabbing'\n        if (props.dragState === 1) return 'grab'\n        return 'default'\n      },\n    },\n    canvas: {\n      ...bgPixel,\n      transformOrigin: '50% 50%',\n      position: 'absolute',\n      left: '50%',\n      top: '50%',\n      width: (props: StyleProps) => `${props.width}px`,\n      height: (props: StyleProps) => `${props.height}px`,\n      marginLeft: (props: StyleProps) => `${props.width / -2}px`,\n      marginTop: (props: StyleProps) => `${props.height / -2}px`,\n      transform: (props: StyleProps) =>\n        `scale(${props.scale}) translate(${props.offsetX}px,${props.offsetY}px)`,\n    },\n  }),\n)\n\nconst PackCanvas: FunctionComponent<unknown> = () => {\n  const {\n    isPacking,\n    ui,\n    layout: { padding },\n    glyphList,\n    style: { bgColor },\n    packCanvas,\n    setCanvas,\n  } = useProject()\n  const { width, height, scale, offsetX, offsetY } = ui\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const domRef = useRef<HTMLDivElement>(null)\n  const [dragState, handleMouseDown] = useSpaceDrag(\n    (offsetInfo) => {\n      const { offsetX: ix, offsetY: iy } = offsetInfo\n      const { scale: os, offsetX: ox, offsetY: oy, setTransform } = ui\n      setTransform({\n        offsetX: ox + ix / os,\n        offsetY: oy + iy / os,\n      })\n    },\n    [ui],\n  )\n\n  const classes = useStyles({\n    width,\n    height,\n    scale,\n    offsetX,\n    offsetY,\n    dragState,\n  })\n\n  useWheel(\n    domRef,\n    (info) => {\n      const { offsetX: ox, offsetY: oy, scale: os, setTransform } = ui\n      const s = os + info.deltaScale\n      const x = ox + info.deltaX / s\n      const y = oy + info.deltaY / s\n      setTransform({\n        offsetX: x,\n        offsetY: y,\n        scale: s,\n      })\n    },\n    [ui],\n  )\n\n  useEffect(() => {\n    if (canvasRef.current && canvasRef.current !== packCanvas)\n      setCanvas(canvasRef.current)\n  }, [canvasRef, packCanvas, setCanvas])\n\n  useEffect(() => {\n    if (!glyphList || isPacking || !width || !height) return\n    const canvas = canvasRef.current\n    if (!canvas) return\n\n    canvas.width = width\n    canvas.height = height\n\n    const ctx = canvas.getContext('2d')\n    if (!ctx) return\n\n    if (bgColor) {\n      ctx.fillStyle = bgColor\n      ctx.fillRect(0, 0, canvas.width, canvas.height)\n    }\n\n    glyphList.forEach((glyph) => {\n      if (\n        glyph.source &&\n        glyph.source.width !== 0 &&\n        glyph.source.height !== 0\n      ) {\n        ctx.drawImage(\n          glyph.source as HTMLCanvasElement,\n          glyph.x + (padding || 0),\n          glyph.y + (padding || 0),\n        )\n      }\n    })\n  }, [bgColor, glyphList, isPacking, height, width, padding])\n\n  return (\n    <div\n      aria-hidden\n      ref={domRef}\n      className={classes.root}\n      onMouseDown={handleMouseDown}\n    >\n      <canvas ref={canvasRef} className={classes.canvas} />\n    </div>\n  )\n}\n\nexport default observer(PackCanvas)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport clsx from 'clsx'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport { useProjectUi } from 'src/store/hooks'\n\nimport { PreviewObject } from './getPreviewCanvas'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    letter: {\n      position: 'absolute',\n      '&:hover,&$select': {\n        background: 'rgba(0,0,0,0.2)',\n        outline: '1px solid #000',\n      },\n    },\n    select: {\n      '& + $next': {\n        background: 'rgba(0,0,0,0.1)',\n        outline: '1px dashed #666',\n      },\n    },\n    next: {},\n  }),\n)\n\ninterface LetterListProps {\n  data: PreviewObject\n}\n\nconst LetterList: FunctionComponent<LetterListProps> = (\n  props: LetterListProps,\n) => {\n  const {\n    data: { xOffset, yOffset, list },\n  } = props\n  const classes = useStyles()\n  const ui = useProjectUi()\n  const handleSelect = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    letter: string,\n    next: string,\n  ) => {\n    // setSelectLetter\n    e.stopPropagation()\n    ui.setSelectLetter(letter, next)\n  }\n  return (\n    <>\n      {list.map((item, idx) => {\n        const key = `${item.letter}${idx}`\n        return (\n          <div\n            aria-hidden\n            className={clsx(classes.letter, {\n              [classes.select]: item.letter === ui.selectLetter,\n              [classes.next]: item.letter === ui.selectNextLetter,\n            })}\n            style={{\n              width: item.width,\n              height: item.height,\n              left: `${item.x - xOffset}px`,\n              top: `${item.y - yOffset}px`,\n            }}\n            key={key}\n            onClick={(e) => handleSelect(e, item.letter, item.next)}\n          />\n        )\n      })}\n    </>\n  )\n}\n\nexport default observer(LetterList)\n","import React, { useRef, useState, useEffect, FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport { useProject } from 'src/store/hooks'\nimport useWheel from 'src/app/hooks/useWheel'\nimport useSpaceDrag from 'src/app/hooks/useSpaceDrag'\nimport toOutputInfo, { BMFontChar } from 'src/file/toOutputInfo'\n\nimport getPreviewCanvas, { PreviewObject } from './getPreviewCanvas'\nimport LetterList from './LetterList'\n\ninterface StyleProps {\n  width: number\n  height: number\n  scale: number\n  offsetX: number\n  offsetY: number\n  dragState: number\n}\n\nconst useStyles = makeStyles(({ bgPixel }) =>\n  createStyles({\n    root: {\n      position: 'relative',\n      flex: 1,\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden',\n      ...bgPixel,\n      cursor: (props: StyleProps) => {\n        if (props.dragState === 2) return 'grabbing'\n        if (props.dragState === 1) return 'grab'\n        return 'default'\n      },\n    },\n    wrap: {\n      transformOrigin: '50% 50%',\n      position: 'absolute',\n      left: '50%',\n      top: '50%',\n      width: (props: StyleProps) => `${props.width}px`,\n      height: (props: StyleProps) => `${props.height}px`,\n      marginLeft: (props: StyleProps) => `${props.width / -2}px`,\n      marginTop: (props: StyleProps) => `${props.height / -2}px`,\n      transform: (props: StyleProps) =>\n        `scale(${props.scale}) translate(${props.offsetX}px,${props.offsetY}px)`,\n    },\n    canvas: {\n      width: '100%',\n      height: '100%',\n    },\n  }),\n)\n\nconst PreviewCanvas: FunctionComponent<unknown> = () => {\n  const project = useProject()\n  const [data, setData] = useState<PreviewObject | null>(null)\n  const {\n    ui,\n    style: {\n      font: {\n        size,\n        lineHeight,\n        middle,\n        hanging,\n        top,\n        alphabetic,\n        ideographic,\n        bottom,\n        minBaseLine,\n        maxBaseLine,\n      },\n    },\n    isPacking,\n  } = project\n  const { previewScale, previewOffsetX, previewOffsetY } = ui\n\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const domRef = useRef<HTMLDivElement>(null)\n  const [dragState, handleMouseDown] = useSpaceDrag(\n    (offsetInfo) => {\n      const { offsetX: ix, offsetY: iy } = offsetInfo\n      const {\n        previewScale: os,\n        previewOffsetX: ox,\n        previewOffsetY: oy,\n        setPreviewTransform,\n      } = ui\n      setPreviewTransform({\n        previewOffsetX: ox + ix / os,\n        previewOffsetY: oy + iy / os,\n      })\n    },\n    [ui],\n  )\n  const classes = useStyles({\n    width: data ? data.width : 0,\n    height: data ? data.height : 0,\n    scale: previewScale,\n    offsetX: previewOffsetX,\n    offsetY: previewOffsetY,\n    dragState,\n  })\n\n  useWheel(\n    domRef,\n    (info) => {\n      const {\n        previewOffsetX: ox,\n        previewOffsetY: oy,\n        previewScale: os,\n        setPreviewTransform,\n      } = ui\n      const s = os + info.deltaScale\n      const x = ox + info.deltaX / s\n      const y = oy + info.deltaY / s\n      setPreviewTransform({\n        previewOffsetX: x,\n        previewOffsetY: y,\n        previewScale: s,\n      })\n    },\n    [ui],\n  )\n\n  useEffect(() => {\n    if (!canvasRef.current || isPacking || !data) return\n\n    const canvas = canvasRef.current\n    const ctx = canvas.getContext('2d')\n    if (!ctx) return\n    const lh = size * lineHeight\n\n    canvas.width = data.width\n    canvas.height = data.height\n    data.list.forEach((item) => {\n      if (!item.source || item.source.width === 0 || item.source.height === 0)\n        return\n      ctx.drawImage(item.source, item.x - data.xOffset, item.y - data.yOffset)\n    })\n\n    for (let index = 0; index < data.lines; index += 1) {\n      ;[middle, hanging, top, alphabetic, ideographic, bottom].forEach(\n        (baseLine) => {\n          const basey = Math.round(baseLine - minBaseLine + index * lh)\n          ctx.beginPath()\n          ctx.moveTo(-data.xOffset, basey + 0.5 - data.yOffset)\n          ctx.lineTo(data.width, basey + 0.5 - data.yOffset)\n          if (baseLine === minBaseLine || baseLine === maxBaseLine) {\n            ctx.strokeStyle = 'rgba(0,0,0,1)'\n            ctx.setLineDash([])\n          } else {\n            ctx.strokeStyle = 'rgba(0,0,0,0.5)'\n            ctx.setLineDash([10, 3, 2, 3])\n          }\n          ctx.stroke()\n        },\n      )\n      ctx.beginPath()\n      ctx.moveTo(-data.xOffset + 0.5, index * lh - data.yOffset)\n      ctx.lineTo(\n        -data.xOffset + 0.5,\n        index * lh - data.yOffset + maxBaseLine - minBaseLine,\n      )\n      ctx.strokeStyle = 'rgba(0,0,0,1)'\n      ctx.setLineDash([])\n      ctx.stroke()\n    }\n  }, [\n    alphabetic,\n    bottom,\n    data,\n    hanging,\n    ideographic,\n    isPacking,\n    lineHeight,\n    maxBaseLine,\n    middle,\n    minBaseLine,\n    size,\n    top,\n  ])\n\n  useEffect(() => {\n    if (!canvasRef.current || isPacking) return\n\n    const canvas = canvasRef.current\n    const ctx = canvas.getContext('2d')\n    if (!ctx) return\n\n    const { chars, kernings } = toOutputInfo(project)\n    const kerningMap: Map<number, Map<number, number>> = new Map()\n    kernings.list.forEach(({ first, second, amount }) => {\n      if (!kerningMap.has(first)) kerningMap.set(first, new Map())\n      const k = kerningMap.get(first)\n      k?.set(second, amount)\n    })\n    const charMap: Map<string, BMFontChar> = new Map()\n    chars.list.forEach((char) => {\n      charMap.set(char.letter, char)\n    })\n    const lh = size * lineHeight\n    const obj = getPreviewCanvas(\n      ui.previewText,\n      charMap,\n      kerningMap,\n      lh,\n      maxBaseLine - minBaseLine,\n    )\n    setData(() => obj)\n  }, [\n    isPacking,\n    lineHeight,\n    maxBaseLine,\n    minBaseLine,\n    project,\n    size,\n    ui.previewText,\n  ])\n\n  return (\n    <div\n      aria-hidden\n      ref={domRef}\n      className={classes.root}\n      onMouseDown={handleMouseDown}\n      onClick={() => ui.setSelectLetter('', '')}\n    >\n      <div className={classes.wrap}>\n        <canvas ref={canvasRef} className={classes.canvas} />\n        {data ? <LetterList data={data} /> : null}\n      </div>\n    </div>\n  )\n}\n\nexport default observer(PreviewCanvas)\n","import { BMFontChar } from 'src/file/toOutputInfo'\n\ninterface PreviewItem {\n  x: number\n  y: number\n  width: number\n  height: number\n  source: HTMLImageElement | HTMLCanvasElement | null\n  letter: string\n  next: string\n}\n\nexport interface PreviewObject {\n  xOffset: number\n  yOffset: number\n  width: number\n  height: number\n  list: PreviewItem[]\n  lines: number\n}\n\nexport default function getPreviewCanvas(\n  text: string,\n  chars: Map<string, BMFontChar>,\n  kernings: Map<number, Map<number, number>>,\n  lineHeight: number,\n  fontHeight: number,\n): PreviewObject {\n  // const letters = Array.from(new Set(text.replace(/\\r\\n|\\r|\\n/g, '').split('')))\n  const list: PreviewItem[] = []\n  const lines = text.split(/\\r\\n|\\r|\\n/)\n  let minX = 0\n  let minY = 0\n  let maxX = 0\n  let maxY = 0\n  let y = 0\n  let x = 0\n\n  lines.forEach((str, index) => {\n    y = lineHeight * index\n    x = 0\n    const arr = Array.from(str)\n    arr.forEach((letter, idx) => {\n      const char = chars.get(letter)\n      if (!char) return\n      const next = arr[idx + 1]\n      const lk = kernings.get(letter.charCodeAt(0))\n      let kering = 0\n      if (next && lk && lk.has(next.charCodeAt(0))) {\n        kering = lk.get(next.charCodeAt(0)) || 0\n      }\n      const obj = {\n        x: x + char.xoffset,\n        y: y + char.yoffset,\n        width: char.width || char.xadvance,\n        height: char.height || fontHeight,\n        source: char.source,\n        letter: char.letter,\n        next,\n      }\n      x += char.xadvance + kering\n      minX = Math.min(obj.x, minX)\n      minY = Math.min(obj.y, minY)\n      maxX = Math.max(obj.x + obj.width, maxX)\n      maxY = Math.max(obj.y + char.height, maxY)\n      list.push(obj)\n    })\n  })\n\n  return {\n    lines: lines.length,\n    list,\n    xOffset: minX,\n    yOffset: minY,\n    width: maxX - minX,\n    height: Math.max(maxY - minY, lines.length * lineHeight - minY),\n  }\n}\n","import React, { useState, FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\n\nimport Box from '@material-ui/core/Box'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\n\nimport { useProjectUi } from 'src/store/hooks'\n\nconst Preview: FunctionComponent<unknown> = () => {\n  const { previewText, setPreviewText } = useProjectUi()\n  const [isIME, setIsIME] = useState(false)\n  const [inputText, setInputText] = useState(previewText)\n\n  const handleInput = (event: React.ChangeEvent<HTMLTextAreaElement>): void => {\n    const { value } = event.target\n    if (isIME) {\n      setInputText(value)\n    } else {\n      setInputText(value)\n      if (value !== previewText) setPreviewText(value)\n    }\n  }\n\n  const handleCompositionEnd = (): void => {\n    setIsIME(false)\n    setInputText(inputText)\n    if (inputText !== previewText) setPreviewText(inputText)\n  }\n\n  return (\n    <Box>\n      <Box paddingX={2} marginY={4}>\n        <Typography>Glyphs</Typography>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <TextField\n          margin='none'\n          value={isIME ? inputText : previewText}\n          fullWidth\n          multiline\n          rows={7}\n          variant='outlined'\n          inputProps={{ spellCheck: false }}\n          onChange={handleInput}\n          onCompositionStart={() => setIsIME(true)}\n          onCompositionEnd={handleCompositionEnd}\n        />\n      </Box>\n    </Box>\n  )\n}\n\nexport default observer(Preview)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\n\nimport { useProject } from 'src/store/hooks'\n\nimport FormAdjustMetric from 'src/app/layout/common/FormAdjustMetric'\n\nconst GlobalMetric: FunctionComponent<unknown> = () => {\n  const project = useProject()\n  const { glyphList, ui } = project\n  const glyph = glyphList.find((gl) => gl.letter === ui.selectLetter)\n  if (!glyph) return null\n  const { adjustMetric, letter } = glyph\n  const {\n    xAdvance,\n    xOffset,\n    yOffset,\n    setXAdvance,\n    setXOffset,\n    setYOffset,\n  } = adjustMetric\n\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <Typography>{`\"${letter}\" Adjustment`}</Typography>\n      </Box>\n      <FormAdjustMetric\n        xAdvance={xAdvance}\n        xOffset={xOffset}\n        yOffset={yOffset}\n        setXAdvance={setXAdvance}\n        setXOffset={setXOffset}\n        setYOffset={setYOffset}\n      />\n    </>\n  )\n}\n\nexport default observer(GlobalMetric)\n","import React, { useState, useEffect, FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport { deepObserve } from 'mobx-utils'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport Input from '@material-ui/core/Input'\nimport GridInput from 'src/app/components/GridInput'\n\nimport { useProject } from 'src/store/hooks'\nimport { GlyphFont, GlyphImage } from 'src/store'\n\nconst GlobalMetric: FunctionComponent<unknown> = () => {\n  const {\n    glyphList,\n    ui,\n    style: {\n      font: { opentype, size },\n    },\n  } = useProject()\n  const [offset, setOffset] = useState(0)\n  const [glyph, setGlyph] = useState<GlyphFont | GlyphImage | undefined>()\n  const [kerning, setKerning] = useState(0)\n\n  useEffect(() => {\n    setGlyph(glyphList.find((gl) => gl.letter === ui.selectLetter))\n  }, [glyphList, ui.selectLetter])\n\n  useEffect(() => {\n    if (glyph && ui.selectNextLetter && opentype) {\n      const fontScale = (1 / opentype.unitsPerEm) * size\n      setOffset(\n        Math.round(\n          opentype.getKerningValue(\n            opentype.charToGlyphIndex(glyph.letter),\n            opentype.charToGlyphIndex(ui.selectNextLetter),\n          ) * fontScale,\n        ),\n      )\n    }\n  }, [glyph, opentype, size, ui.selectNextLetter])\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ) => {\n    if (glyph)\n      glyph.steKerning(ui.selectNextLetter, Number(e.target.value) - offset)\n  }\n\n  useEffect(() => {\n    let disposer\n\n    if (glyph) {\n      setKerning(glyph.kerning.get(ui.selectNextLetter) || 0)\n      disposer = deepObserve(glyph.kerning, () => {\n        setKerning(glyph.kerning.get(ui.selectNextLetter) || 0)\n      })\n    }\n\n    return disposer\n  }, [glyph, ui.selectNextLetter])\n\n  if (!glyph || !ui.selectNextLetter) return null\n\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <Typography>{`\"${glyph.letter}\" - \"${ui.selectNextLetter}\" Kerning`}</Typography>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <GridInput before='Amount:' after='px'>\n          <Input\n            value={kerning + offset}\n            fullWidth\n            type='number'\n            onChange={handleChange}\n          />\n        </GridInput>\n      </Box>\n    </>\n  )\n}\n\nexport default observer(GlobalMetric)\n","import React, { FunctionComponent } from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport PreviewCanvas from './PreviewCanvas'\nimport PreviewText from './PreviewText'\nimport PreviewMertic from './PreviewMertic'\nimport PreviewKerning from './PreviewKerning'\n\nconst Preview: FunctionComponent<unknown> = () => {\n  return (\n    <>\n      <PreviewCanvas />\n      <Grid container alignItems='flex-start'>\n        <Grid item xs={4}>\n          <PreviewText />\n        </Grid>\n        <Grid item xs={4}>\n          <PreviewMertic />\n        </Grid>\n        <Grid item xs={4}>\n          <PreviewKerning />\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nexport default Preview\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport { useProjectUi } from 'src/store/hooks'\n\nimport PackCanvas from '../PackCanvas'\nimport Preview from '../Preview'\n\nconst useStyles = makeStyles(({ palette }) =>\n  createStyles({\n    root: {\n      backgroundColor: palette.background.default,\n      position: 'relative',\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'column',\n    },\n  }),\n)\n\nconst MainView: FunctionComponent<unknown> = () => {\n  const { showPreview } = useProjectUi()\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      {showPreview ? <Preview /> : <PackCanvas />}\n    </div>\n  )\n}\n\nexport default observer(MainView)\n","import React, { useRef, useState, useEffect, FunctionComponent } from 'react'\n// import { observer } from 'mobx-react'\nimport clsx from 'clsx'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n// import Input from '@material-ui/core/Input'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst useStyles = makeStyles(({ palette }) =>\n  createStyles({\n    root: {\n      minHeight: 'auto',\n      minWidth: '80px',\n      maxWidth: 'none',\n      height: '34px',\n      lineHeight: '16px',\n      padding: '10px',\n      color: 'rgba(255,255,255,0.5)',\n      backgroundColor: 'rgb(45, 45, 45)',\n      borderRight: `1px solid ${palette.background.default}`,\n      textTransform: 'none',\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      cursor: 'pointer',\n      '&:hover': {\n        '& $icon': {\n          opacity: 1,\n        },\n      },\n      '&:last-child': {\n        borderRight: '0 none',\n      },\n    },\n    selected: {\n      background: palette.background.default,\n      color: '#fff',\n      '& $icon': {\n        opacity: 1,\n      },\n    },\n    name: {\n      whiteSpace: 'nowrap',\n      position: 'relative',\n      background: 'inherit',\n    },\n    editor: {\n      color: 'rgba(0,0,0,0)',\n    },\n    input: {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      left: 0,\n      fontSize: 'inherit',\n      padding: 0,\n      border: '0 none',\n      appearance: 'none',\n      color: 'inherit',\n      background: 'inherit',\n    },\n    icon: {\n      width: '16px',\n      height: '16px',\n      marginLeft: '10px',\n      opacity: 0,\n    },\n  }),\n)\n\ninterface ProjectTabProps {\n  name: string\n  value: number\n  selected?: boolean\n  useRemove?: boolean\n  onRemove?: (\n    e: React.MouseEvent<SVGSVGElement, MouseEvent>,\n    value: number,\n  ) => void\n  onChange?: (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    value: number,\n  ) => void\n  onClick?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\n  onRename?: (name: string, value: number) => void\n}\n\nconst ProjectTab: FunctionComponent<ProjectTabProps> = (\n  props: ProjectTabProps,\n) => {\n  const {\n    name,\n    useRemove,\n    selected,\n    value,\n    onChange,\n    onClick,\n    onRemove,\n    onRename,\n  } = props\n  const [editor, setEditor] = useState(false)\n  const [sname, setSName] = useState(name)\n  const editorRef = useRef<HTMLInputElement>(null)\n  const classes = useStyles()\n\n  const handleRemove = (e: React.MouseEvent<SVGSVGElement, MouseEvent>) => {\n    e.stopPropagation()\n    if (onRemove) onRemove(e, value)\n  }\n\n  const handleSelect = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n  ): void => {\n    e.stopPropagation()\n    if (onChange) onChange(e, value)\n    if (onClick) onClick(e)\n  }\n\n  const handleDoubleClick = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n  ): void => {\n    e.stopPropagation()\n    if (editorRef.current) {\n      setEditor(true)\n    }\n  }\n\n  const handleEditorEnd = (e: { preventDefault?(): void }) => {\n    if (e.preventDefault) e.preventDefault()\n    setEditor(false)\n  }\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.keyCode === 13 && editorRef.current) {\n      editorRef.current.blur()\n    }\n  }\n\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSName(e.target.value)\n  }\n\n  useEffect(() => {\n    if (editor && editorRef.current) editorRef.current.focus()\n    if (!editor && onRename) onRename(sname, value)\n  }, [editor, onRename, sname, value])\n\n  useEffect(() => {\n    setSName(name)\n  }, [name])\n\n  return (\n    <div\n      aria-hidden\n      className={clsx(classes.root, {\n        [classes.selected]: selected,\n      })}\n      onClick={handleSelect}\n      onDoubleClick={handleDoubleClick}\n      title='Double click rename'\n    >\n      <span aria-hidden className={classes.name}>\n        {editor ? sname : name}\n        <input\n          className={classes.input}\n          hidden={!editor}\n          ref={editorRef}\n          value={editor ? sname : name}\n          type='text'\n          onKeyDown={handleKeyDown}\n          onBlur={handleEditorEnd}\n          //   onInput={handleInput}\n          onChange={handleInput}\n        />\n      </span>\n      {useRemove ? (\n        <CloseIcon\n          className={classes.icon}\n          onClick={handleRemove}\n          onDoubleClick={handleRemove}\n        />\n      ) : null}\n    </div>\n  )\n}\n\nexport default ProjectTab\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport Tabs from '@material-ui/core/Tabs'\nimport { useWorkspace } from 'src/store/hooks'\nimport ProjectTab from './ProjectTab'\n\nconst useStyles = makeStyles(({ palette, shadows }) =>\n  createStyles({\n    root: {\n      minHeight: 'auto',\n      width: '100%',\n      boxShadow: shadows[2],\n      background: palette.background.sidebar,\n      position: 'relative',\n      zIndex: 1,\n    },\n  }),\n)\n\nconst ProjectTabs: FunctionComponent<unknown> = () => {\n  const classes = useStyles()\n  const workSpace = useWorkspace()\n  const {\n    addProject,\n    selectProject,\n    removeProject,\n    setProjectName,\n    namedList,\n    activeId,\n  } = workSpace\n\n  const handleChange = (e: unknown, value: number): void => {\n    selectProject(value)\n  }\n\n  const handleRemove = (\n    e: React.MouseEvent<SVGSVGElement, MouseEvent>,\n    value?: number,\n  ): void => {\n    if (typeof value !== 'undefined') removeProject(value)\n  }\n\n  const handleDoubleClick = (): void => {\n    addProject()\n  }\n\n  return (\n    <Tabs\n      classes={classes}\n      value={activeId}\n      onChange={handleChange}\n      indicatorColor='primary'\n      textColor='primary'\n      variant='scrollable'\n      scrollButtons='off'\n      selectionFollowsFocus\n      TabIndicatorProps={{ hidden: true }}\n      onDoubleClick={handleDoubleClick}\n    >\n      {namedList.map((item) => {\n        return (\n          <ProjectTab\n            useRemove={namedList.length > 1}\n            name={item.name}\n            value={item.id}\n            key={item.id}\n            onRename={setProjectName}\n            onRemove={handleRemove}\n          />\n        )\n      })}\n    </Tabs>\n  )\n}\n\nexport default observer(ProjectTabs)\n","import React, { FunctionComponent, useState, useRef } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Paper from '@material-ui/core/Paper'\nimport Button from '@material-ui/core/Button'\nimport Popper from '@material-ui/core/Popper'\nimport Slider from '@material-ui/core/Slider'\nimport Switch from '@material-ui/core/Switch'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport MenuList from '@material-ui/core/MenuList'\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener'\n\nimport { useProjectUi } from 'src/store/hooks'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    slider: {\n      width: '200px',\n    },\n  }),\n)\n\nconst ControlerBar: FunctionComponent<unknown> = () => {\n  const {\n    scale,\n    setTransform,\n    previewScale,\n    setPreviewTransform,\n    showPreview,\n    setShowPreview,\n  } = useProjectUi()\n  const classes = useStyles()\n  const [open, setOpen] = useState(false)\n  const anchorRef = useRef<HTMLButtonElement>(null)\n  const [list] = useState([0.25, 0.5, 0.75, 1, 1.25, 1.5, 5, 10])\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen)\n  }\n\n  const handleClose = (event: React.MouseEvent<EventTarget>) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return\n    }\n\n    setOpen(false)\n  }\n\n  const handleChange = (event: unknown, val: number | number[]) => {\n    if (showPreview) {\n      setPreviewTransform({ previewScale: val as number })\n    } else {\n      setTransform({ scale: val as number })\n    }\n  }\n\n  const handleSelect = (val: number) => {\n    // setTransform({ scale: val })\n    handleChange(null, val)\n    setOpen(false)\n  }\n\n  return (\n    <Box paddingX={2} display='flex' justifyContent='space-between'>\n      <Box component='label' display='flex' alignItems='center'>\n        Preview\n        <Switch\n          size='small'\n          color='primary'\n          checked={showPreview}\n          onChange={(e) => setShowPreview(e.target.checked)}\n        />\n      </Box>\n      <Slider\n        className={classes.slider}\n        value={showPreview ? previewScale : scale}\n        min={0.01}\n        max={10}\n        step={0.01}\n        onChange={handleChange}\n      />\n      <Button ref={anchorRef} onClick={handleToggle}>\n        {`${Math.round((showPreview ? previewScale : scale) * 1000) / 10}%`}\n      </Button>\n      <Popper open={open} anchorEl={anchorRef.current} placement='top-end'>\n        <Paper>\n          <ClickAwayListener onClickAway={handleClose}>\n            <MenuList>\n              {list.map((n) => (\n                <MenuItem key={n} onClick={() => handleSelect(n)}>\n                  {`${n * 100}%`}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </ClickAwayListener>\n        </Paper>\n      </Popper>\n    </Box>\n  )\n}\n\nexport default observer(ControlerBar)\n","import React, { useState, FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\n\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport InputBase from '@material-ui/core/InputBase'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nimport { GlyphImage } from 'src/store'\nimport { useProject } from 'src/store/hooks'\n\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      width: theme.spacing(24),\n      height: theme.spacing(24),\n      margin: theme.spacing(2),\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      position: 'relative',\n    },\n    image: {\n      maxWidth: '100%',\n      maxHeight: '100%',\n      pointerEvents: 'none',\n    },\n    actions: {\n      width: '100%',\n      height: '100%',\n      position: 'absolute',\n      left: 0,\n      top: 0,\n    },\n    inputLabel: {\n      width: '100%',\n      height: '100%',\n      '& input': {\n        textAlign: 'center',\n      },\n    },\n  }),\n)\n\ninterface ImageGlyphProps {\n  glyph: GlyphImage\n  selected?: boolean\n}\n\nconst ImageGlyph: FunctionComponent<ImageGlyphProps> = (\n  props: ImageGlyphProps,\n) => {\n  const classes = useStyles()\n  const { removeImage } = useProject()\n  const [isIME, setIsIME] = useState(false)\n  const { glyph } = props\n  const [inputValue, setInputValue] = useState(glyph.letter)\n  const { changeSelect, selected, setGlyph } = glyph\n\n  const handleChangeGlyph = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const { value } = e.target\n    if (!isIME) {\n      setGlyph(value)\n    } else {\n      setInputValue(value.slice(0, 1))\n      setGlyph(value.slice(0, 1))\n    }\n  }\n\n  const handleCompositionEnd = (): void => {\n    setIsIME(false)\n    setInputValue((iv) => iv.slice(0, 1))\n    setGlyph(inputValue.slice(0, 1))\n  }\n\n  return (\n    <Paper variant='outlined' className={classes.root}>\n      <img className={classes.image} src={glyph.src} alt={glyph.fileName} />\n      <Grid container direction='column' className={classes.actions}>\n        <Grid item container justify='space-between' alignItems='center'>\n          <Checkbox\n            checked={selected}\n            size='small'\n            color='default'\n            onChange={(e) => changeSelect(e.target.checked)}\n          />\n          <IconButton\n            color='primary'\n            size='small'\n            onClick={() => removeImage(glyph)}\n          >\n            <DeleteIcon fontSize='small' />\n          </IconButton>\n        </Grid>\n        <Grid\n          item\n          xs\n          component='label'\n          className={classes.inputLabel}\n          container\n          alignItems='flex-end'\n        >\n          <InputBase\n            fullWidth\n            value={isIME ? inputValue : glyph.letter}\n            onFocus={(e) => e.target.select()}\n            onInput={handleChangeGlyph}\n            onCompositionEnd={handleCompositionEnd}\n            onCompositionStart={() => setIsIME(true)}\n          />\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n}\n\nexport default observer(ImageGlyph)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles, createStyles } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\n\nimport { useProject } from 'src/store/hooks'\n\nimport ImageGlyph from './ImageGlyph'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      width: '100%',\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n  }),\n)\n\nconst ImageGlyphList: FunctionComponent<unknown> = () => {\n  const { glyphImages } = useProject()\n  const classes = useStyles()\n  return (\n    <Box className={classes.root}>\n      {Array.from(glyphImages).map((glyph) => {\n        return <ImageGlyph glyph={glyph} key={glyph.src} />\n      })}\n    </Box>\n  )\n}\n\nexport default observer(ImageGlyphList)\n","import React, { FunctionComponent, useState, useEffect } from 'react'\nimport { observer } from 'mobx-react'\nimport clsx from 'clsx'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport Box from '@material-ui/core/Box'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport Accordion from '@material-ui/core/Accordion'\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\nimport Typography from '@material-ui/core/Typography'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport FullscreenIcon from '@material-ui/icons/Fullscreen'\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit'\nimport IconButton from '@material-ui/core/IconButton'\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary'\n\nimport { FileInfo } from 'src/store'\nimport { useProject } from 'src/store/hooks'\n\nimport readFile from 'src/utils/readFile'\n\nimport ImageGlyphList from './ImageGlyphList'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      display: 'flex',\n      position: 'relative',\n    },\n    fixed: {\n      position: 'fixed',\n      left: 0,\n      top: 0,\n      zIndex: 999999,\n      width: '100%',\n      height: '100%',\n      '& $panel': {\n        maxHeight: 'none',\n      },\n    },\n    panel: {\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      maxHeight: '305px',\n    },\n    continer: {\n      flex: 1,\n      overflow: 'hidden',\n      overflowY: 'auto',\n    },\n    listWrap: {\n      minHeight: '224px',\n      height: '100%',\n      width: '100%',\n      overflow: 'hidden',\n      overflowY: 'auto',\n    },\n  }),\n)\n\nconst LayerBox: FunctionComponent<unknown> = () => {\n  const classes = useStyles()\n  const { addImages } = useProject()\n  const [isFullscreen, setFullscreen] = useState(false)\n  const [open, setOpen] = useState(false)\n  // const [isDroping, setIsDroping] = useState(false)\n\n  const handleLoadFile = (files: FileList) => {\n    const list = Array.from(files).filter((file) => /^image\\//.test(file.type))\n    if (!list.length) return\n    Promise.all(\n      list.map((file) =>\n        readFile(file).then((buffer) => {\n          if (!buffer || typeof buffer === 'string') return null\n\n          const matched = file.name.match(/(\\S)\\.[a-zA-Z0-9]+$/i)\n          return {\n            letter: matched ? matched[1] : '',\n            fileName: file.name,\n            fileType: file.type,\n            buffer,\n          }\n        }),\n      ),\n    ).then((fileList) => {\n      addImages(fileList.filter((f) => f) as FileInfo[])\n    })\n  }\n\n  const handleDrop = (e: React.DragEvent<HTMLElement>): void => {\n    e.preventDefault()\n    handleLoadFile(e.dataTransfer.files)\n  }\n\n  const hanfleToggleFullScreen = (\n    e?: React.MouseEvent<HTMLDivElement, MouseEvent>,\n  ) => {\n    if (e) e.stopPropagation()\n    setFullscreen((f) => !f)\n  }\n\n  const handleToggleOpen = () => {\n    setOpen((o) => isFullscreen || !o)\n  }\n  const handleFilesChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    if (!e.target.files) return\n    const { files } = e.target\n    handleLoadFile(files)\n  }\n\n  const handleKeyDown = (e: KeyboardEvent) => {\n    const target = e.target as HTMLElement\n    if (e.keyCode === 27) {\n      if (!target || target.tagName !== 'INPUT') setFullscreen(false)\n      else if (target) target.blur()\n    }\n  }\n\n  useEffect(() => {\n    if (isFullscreen) window.addEventListener('keydown', handleKeyDown)\n    else window.removeEventListener('keydown', handleKeyDown)\n    return () => window.removeEventListener('keydown', handleKeyDown)\n  }, [isFullscreen])\n\n  return (\n    <Box\n      onDragEnter={(e) => e.preventDefault()}\n      onDragOver={(e) => e.preventDefault()}\n      // onDragLeave={handleDrop}\n      onDrop={handleDrop}\n      className={clsx(classes.root, {\n        [classes.fixed]: isFullscreen,\n      })}\n    >\n      <Accordion\n        className={classes.panel}\n        expanded={isFullscreen || open}\n        onChange={handleToggleOpen}\n        TransitionProps={{\n          style:\n            isFullscreen || open\n              ? { flex: 1, overflow: 'hidden', overflowY: 'auto' }\n              : {},\n        }}\n      >\n        <AccordionSummary\n          expandIcon={isFullscreen ? undefined : <ExpandMoreIcon />}\n        >\n          <Grid container alignItems='center'>\n            <Grid item>\n              <Typography>Image Glyph List</Typography>\n            </Grid>\n            <Grid item xs container justify='center'>\n              <Button\n                component='label'\n                color='primary'\n                size='small'\n                variant='contained'\n                startIcon={<PhotoLibraryIcon />}\n              >\n                Select Images\n                <input\n                  hidden\n                  type='file'\n                  multiple\n                  accept='image/*'\n                  onChange={handleFilesChange}\n                />\n              </Button>\n            </Grid>\n            <Grid item>\n              <IconButton component='div' onClick={hanfleToggleFullScreen}>\n                {isFullscreen ? <FullscreenExitIcon /> : <FullscreenIcon />}\n              </IconButton>\n            </Grid>\n          </Grid>\n        </AccordionSummary>\n        <AccordionDetails className={classes.continer}>\n          <Box className={classes.listWrap}>\n            <ImageGlyphList />\n          </Box>\n        </AccordionDetails>\n      </Accordion>\n    </Box>\n  )\n}\nexport default observer(LayerBox)\n","import React, { FunctionComponent } from 'react'\nimport Box from '@material-ui/core/Box'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport MainView from './modules/MainView'\nimport ProjectTabs from './modules/ProjectTabs'\nimport ControlerBar from './modules/ControlerBar'\nimport ImageGlyphList from './modules/ImageGlyphList'\n\nconst useStyles = makeStyles(({ palette, shadows }) =>\n  createStyles({\n    root: {\n      position: 'relative',\n      flex: 1,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      width: 0,\n    },\n    tabsRoot: {\n      minHeight: 'auto',\n      width: '100%',\n      boxShadow: shadows[2],\n      background: palette.background.sidebar,\n      position: 'relative',\n      zIndex: 1,\n    },\n    tabRoot: {\n      minHeight: 'auto',\n      minWidth: 'auto',\n      maxWidth: 'none',\n      height: '34px',\n      color: 'rgba(255,255,255,0.5)',\n      borderRight: `1px solid ${palette.background.default}`,\n      textTransform: 'none',\n    },\n    tabSelected: {\n      background: palette.background.default,\n    },\n    tabWrapper: {\n      color: '#FFF',\n    },\n  }),\n)\n\nconst WorkSpace: FunctionComponent<unknown> = () => {\n  const classes = useStyles()\n\n  return (\n    <Box className={classes.root}>\n      <ProjectTabs />\n      <MainView />\n      <ControlerBar />\n      <ImageGlyphList />\n    </Box>\n  )\n}\n\nexport default WorkSpace\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Box from '@material-ui/core/Box'\nimport Backdrop from '@material-ui/core/Backdrop'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport useStores from 'src/store/hooks'\n\nimport LeftBar from '../LeftBar'\nimport TitleBar from '../TitleBar'\nimport RightBar from '../RightBar'\nimport WorkSpace from '../WorkSpace'\n\nconst useStyles = makeStyles(({ zIndex }) =>\n  createStyles({\n    root: {\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    content: {\n      display: 'flex',\n      flex: 1,\n      position: 'relative',\n      height: '0',\n      overflow: 'hidden',\n    },\n    loadingBackdrop: {\n      zIndex: zIndex.drawer + 1,\n      color: '#fff',\n    },\n  }),\n)\n\nconst Wrap: FunctionComponent<unknown> = () => {\n  const classes = useStyles()\n  const { ui } = useStores()\n\n  return (\n    <Box className={classes.root}>\n      <TitleBar />\n      <Box className={classes.content}>\n        <LeftBar />\n        <WorkSpace />\n        <RightBar />\n      </Box>\n      <Backdrop className={classes.loadingBackdrop} open={!!ui.globalLoader}>\n        <CircularProgress color='inherit' />\n      </Backdrop>\n    </Box>\n  )\n}\n\nexport default observer(Wrap)\n","import React from 'react'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { Provider } from 'mobx-react'\nimport 'mobx-react/batchingForReactDom'\n\nimport createStore from 'src/store'\nimport theme from './theme'\n\nimport Wrap from './layout/Wrap'\n\nfunction App(): JSX.Element {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Provider {...createStore()}>\n        <Wrap />\n      </Provider>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = (): void => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = (): void => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nexport function unregister(): void {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister()\nserviceWorker.register()\n"],"sourceRoot":""}