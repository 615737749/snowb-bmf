{"version":3,"sources":["store/ui.ts","workers/RectanglePacker.worker.ts","utils/is.ts","utils/getTextBaselines.ts","utils/use.ts","store/base/ui.ts","utils/fontStyleStringify.ts","utils/updateFontFace.ts","store/base/gradient.ts","store/base/font.ts","store/base/patternTexture.ts","store/base/fill.ts","utils/base64ToArrayBuffer.ts","utils/getTextSize.ts","store/base/stroke.ts","store/base/shadow.ts","store/base/style.ts","store/base/layout.ts","store/base/metric.ts","utils/trimImageData.ts","utils/getPointOnCircle.ts","utils/getCanvasStyle.ts","utils/getGlyphInfo.ts","store/base/glyphBase.ts","store/base/glyphFont.ts","store/base/glyphImage.ts","utils/getTrimImageInfo.ts","store/project.ts","store/workspace.ts","store/index.ts","app/theme/props.ts","app/theme/overrides.ts","app/theme/index.ts","store/hooks.ts","utils/readFile.ts","app/layout/LeftBar/modules/Font/FontFamily.tsx","app/components/GridInput/GridInput.tsx","app/layout/LeftBar/modules/Font/FontSize.tsx","app/layout/LeftBar/modules/Font/LineHeight.tsx","app/layout/LeftBar/modules/Font/Font.tsx","app/layout/LeftBar/modules/Glyphs/Glyphs.tsx","app/layout/LeftBar/modules/PackConfig/Padding.tsx","app/layout/LeftBar/modules/PackConfig/Spacing.tsx","app/layout/LeftBar/modules/PackConfig/PackConfig.tsx","app/layout/common/FormAdjustMetric/FormAdjustMetric.tsx","app/layout/LeftBar/modules/GlobalMetric/GlobalMetric.tsx","app/layout/LeftBar/LeftBar.tsx","utils/formatStr.ts","file/getXmlString.ts","file/getLuaString.ts","file/getTextString.ts","file/toOutputInfo.ts","proto/project.js","file/prefix.ts","file/decodeProject.ts","app/layout/TitleBar/ExportButton.tsx","app/layout/TitleBar/TitleBar.tsx","file/saveProject.ts","file/outputFile.ts","app/components/WrappedSketchPicker/WrappedSketchPicker.tsx","app/components/ColorInput/ColorInput.tsx","app/layout/common/FormColor/FormColor.tsx","app/components/GradientPicker/ColorStop.tsx","app/components/GradientPicker/ColorStopsHolder.tsx","app/components/Palette/Palette.tsx","app/components/GradientPicker/GradientBuilder.tsx","app/components/AnglePicker/AnglePicker.tsx","app/layout/common/FormAngle/FormAngle.tsx","app/layout/common/FormGradient/FormGradient.tsx","app/layout/common/FormImage/FileSelector.tsx","app/layout/common/FormImage/FormImage.tsx","app/layout/common/FormFill/FormFill.tsx","app/layout/RightBar/modules/Fill/Fill.tsx","app/layout/RightBar/modules/Stroke/Stroke.tsx","app/layout/RightBar/modules/Shadow/Shadow.tsx","app/layout/RightBar/modules/BackgroundColor/BackgroundColor.tsx","app/layout/RightBar/RightBar.tsx","app/hooks/useWheel.ts","app/hooks/useSpaceDrag.ts","app/layout/WorkSpace/modules/PackCanvas/PackCanvas.tsx","app/layout/WorkSpace/modules/Preview/LetterList.tsx","app/layout/WorkSpace/modules/Preview/PreviewCanvas.tsx","app/layout/WorkSpace/modules/Preview/getPreviewCanvas.ts","app/layout/WorkSpace/modules/Preview/PreviewText.tsx","app/layout/WorkSpace/modules/Preview/PreviewMertic.tsx","app/layout/WorkSpace/modules/Preview/PreviewKerning.tsx","app/layout/WorkSpace/modules/Preview/Preview.tsx","app/layout/WorkSpace/modules/MainView/MainView.tsx","app/layout/WorkSpace/modules/ProjectTabs/ProjectTab.tsx","app/layout/WorkSpace/modules/ProjectTabs/ProjectTabs.tsx","app/layout/WorkSpace/modules/ControlerBar/ControlerBar.tsx","app/layout/WorkSpace/modules/ImageGlyphList/ImageGlyph.tsx","app/layout/WorkSpace/modules/ImageGlyphList/ImageGlyphList.tsx","app/layout/WorkSpace/modules/ImageGlyphList/LayerBox.tsx","app/layout/WorkSpace/WorkSpace.tsx","app/layout/Wrap/UpdateToast.tsx","app/layout/Wrap/Wrap.tsx","app/App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["Ui","action","bound","num","this","globalLoader","observable","Worker_fn","Worker","canvas","is","n","Number","isNaN","use","a","b","ui","previewText","offsetX","Math","min","max","width","offsetY","height","scale","trans","reOffset","text","showPreview","previewScale","previewOffsetX","previewOffsetY","letter","next","selectLetter","selectNextLetter","defaultConfig","fontSize","fontFamily","fontStyleStringify","fontStyleConfig","config","arr","fontStyle","push","fontVariant","fontWeight","lineHeight","join","fontTargeCache","loadDiv","GradientType","Font","ref","font","size","byteLength","setFont","updateBaseines","middle","hanging","top","alphabetic","ideographic","bottom","bls","styleConig","document","createElement","ctx","getContext","Error","textBaseline","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","getTextBaselines","family","buffer","opentype","parse","lowMemory","e","Promise","resolve","names","fontName","postScriptName","Object","keys","url","URL","createObjectURL","Blob","name","cssNode","createTextNode","appendChild","textNode","head","style","position","left","opacity","pointerEvents","body","setTimeout","updateFontFace","then","runInAction","computed","Gradient","shallow","gradient","type","angle","palette","forEach","item","id","nextId","addColor","offset","color","map","ids","length","FillType","PatternTexture","pt","repetition","setImage","src","img","Image","onload","image","base64","binaryString","atob","len","bytes","Uint8Array","i","charCodeAt","base64ToArrayBuffer","Fill","fill","patternTexture","Stroke","stroke","lineCap","lineJoin","Shadow","shadow","blur","Style","useShadow","useStroke","bgColor","Layout","layout","padding","spacing","power","Metric","metric","xAdvance","xOffset","yOffset","trimImageData","imageData","threshold","data","topTrim","bottomTrim","leftTrim","rightTrim","topStatus","bottomStatus","leftStatus","rightStatus","h","ceil","w","j","trimOffsetLeft","trimOffsetTop","getPointOnCircle","x","y","r","cos","PI","sin","getCanvasStyle","cx","cy","startPoint","endPoint","createLinearGradient","createRadialGradient","addColorStop","createPattern","naturalWidth","naturalHeight","textureCtx","drawImage","getGlyphInfo","trimInfo","textAlign","testA","actualBoundingBoxLeft","parseInt","fontWidth","fontHeight","trimOffsetRight","trimOffsetBottom","testB","actualBoundingBoxRight","getTextSize","lineWidth","addX","addY","styleX","styleY","abs","strokeStyle","strokeText","fillStyle","fillText","cvs","newCtx","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","imgData","getImageData","styleTrimInfo","putImageData","GlyphBase","glyph","adjustMetric","kerning","set","Map","GlyphFont","galyphFont","textStyle","setGlyphInfo","glyphInfo","source","GlyphImage","glyphImage","fileName","fileType","initImage","getTrimImageInfo","isSelect","selected","Project","project","worker","packStart","packTimer","idleId","Date","now","globalAdjustMetric","glyphs","value","key","glyphImages","console","log","has","addGlyphs","addAutoRun","pack","terminate","isPacking","RectanglePacker","packList","rectangleList","sort","addEventListener","messageEvent","imgList","maxWidth","maxHeight","rectangle","find","gi","get","setSize","postMessage","filter","cancel","tasks","runTasks","request","deadline","tr","timeRemaining","start","shift","window","clearTimeout","isName","obj","deepObserve","throttlePack","change","packStyle","str","oldText","replace","currentList","Array","from","Set","split","oldList","diffList","concat","t","includes","delete","list","all","idx","indexOf","splice","packCanvas","glyphList","isUnEmpty","Workspace","activeId","projectList","namedList","p","named","match","setName","configure","enforceActions","computedRequiresReaction","props","MuiButton","MuiButtonBase","disableRipple","MuiFilledInput","margin","MuiFormControl","MuiFormHelperText","MuiIconButton","MuiInputBase","MuiInputLabel","MuiListItem","dense","MuiOutlinedInput","MuiFab","MuiTable","MuiTextField","MuiToolbar","variant","overrides","MuiCssBaseline","html","marginLeft","background","input","theme","createMuiTheme","primary","main","secondary","paper","default","activityBar","titleBar","sidebar","common","black","white","hover","bgPixel","backgroundColor","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","typography","transitions","create","shape","borderRadius","responsiveFontSizes","useStores","useContext","MobXProviderContext","useWorkspace","workspace","useLayout","currentProject","useProject","useStyle","useFont","useProjectUi","readFile","file","arrayBuffer","reader","FileReader","readAsArrayBuffer","target","result","observer","useState","loading","setLoading","Button","component","fullWidth","startIcon","CircularProgress","disabled","hidden","onChange","event","files","arrBuf","ArrayBuffer","catch","alert","message","accept","GridInput","before","children","after","childrenWidth","Grid","container","wrap","justify","alignItems","xs","Typography","noWrap","align","Input","inputProps","setLineHeight","step","Box","paddingX","marginY","setText","isIME","setIsIME","inputText","setInputText","TextField","multiline","rows","spellCheck","onCompositionStart","onCompositionEnd","setPadding","setSpacing","PackConfig","FormAdjustMetric","setXAdvance","setXOffset","setYOffset","getHandle","handleSet","useStyles","makeStyles","createStyles","root","overflow","LeftBar","classes","bgcolor","display","flexDirection","className","boxShadow","flex","Divider","formatStr","matchs","returns","storeToXml","bmfont","info","pages","chars","kernings","parser","DOMParser","xmlDOM","implementation","createDocument","infoDoc","parseFromString","documentElement","childNodes","commonDoc","pagesDoc","charsDoc","char","charDoc","count","kerningsDoc","kerningDoc","XMLSerializer","serializeToString","getLuaString","charset","charsCount","kerningsCounts","getTextString","toOutputInfo","fontScale","unitsPerEm","face","bold","italic","unicode","stretchH","smooth","aa","base","scaleW","scaleH","packed","xoffset","yoffset","xadvance","page","chnl","amount","round","getKerningValue","charToGlyphIndex","first","second","$Reader","$protobuf","$Writer","$util","$root","prefix","properties","prototype","encode","writer","hasOwnProperty","call","uint32","sint32","encodeDelimited","ldelim","decode","end","undefined","pos","tag","skipType","decodeDelimited","verify","isInteger","fromObject","object","toObject","options","defaults","toJSON","constructor","toJSONOptions","GradientColor","int32","string","isString","String","emptyArray","float","fork","isArray","error","TypeError","arrays","json","isFinite","newBuffer","double","slice","emptyObject","end2","tag2","isObject","keys2","objects","bool","Boolean","Long","fromBits","int64","low","high","fromValue","unsigned","LongBits","toNumber","long","longs","toString","s","decodeProject","perfixBuffer","u8","filePrefix","isSbf","protoProject","imgKerning","k","gl","glyphKerning","toOriginBuffer","proto","ExportButton","onSave","open","setOpen","val","setVal","ext","handleClickOpen","handleClose","useEffect","hotkeys","unbind","title","onClick","Dialog","onClose","DialogTitle","DialogContent","dividers","Select","displayEmpty","MenuItem","toUpperCase","DialogActions","autoFocus","zIndex","appBar","appName","marginRight","appNameSup","btn","textTransform","toast","setToast","worckSpace","labelRef","useRef","addProject","handleNewProject","useCallback","preventDefault","handleSaveProject","projectBuffer","finish","saveAs","saveProject","toJS","handleSaveBitmapFont","zip","JSZip","getXmlString","toBlob","blob","generateAsync","content","outputFile","handleOpenProject","current","click","err","IconButton","href","Snackbar","anchorOrigin","vertical","horizontal","picker","borderColor","divider","border","WrappedSketchPicker","anchorEl","placement","pickerStyle","useTheme","shadows","alpha","usePickerStyle","Popper","styles","rgb","g","swatch","cursor","ColorInput","ClickAwayListener","mouseEvent","onClickAway","aria-hidden","FormColor","borderWidth","isActive","borderStyle","dark","activeColor","grey","ColorStop","divProps","clsx","ColorStopsHolder","onAdd","onUpdate","onSelect","setWidth","setStartPoint","isDragging","setIsDragging","rootRef","clientWidth","handleMouseMove","buttons","findIndex","paletteItem","newPalette","clientY","clientX","handleMouseUp","stopPropagation","removeEventListener","onMouseDown","getBoundingClientRect","handleMouseDown","svg","verticalAlign","Palette","random","substr","sortedPalette","x1","y1","x2","y2","stopColor","GradientBuilder","rootEl","oldPalette","setOldPalette","setActiveId","setActiveColor","isAdd","setIsAdd","newIds","oldIds","diff","handleUpdate","isDelete","updateItem","right","offsetSpace","leftColor","Color","rightColor","red","green","blue","React","cloneElement","point","marginTop","transformOrigin","transform","AnglePicker","bounds","radians","atan2","FormAngle","updatePalette","setAngle","setType","RadioGroup","row","flexWrap","FormControlLabel","LINEAR","control","Radio","label","RADIAL","justifyContent","FileSelector","multiple","alt","FormImage","setRepetition","setScale","setColor","SOLID","GRADIENT","IMAGE","setUseStroke","setLineJoin","setLineCap","Switch","checked","ButtonGroup","setUseShadow","setOffsetX","setOffsetY","setBlur","setBgColor","RightBar","useWheel","onWheel","deps","callback","handleWheel","ctrlKey","altKey","deltaX","deltaY","d","deltaScale","dom","passive","useSpaceDrag","onMove","ks","ms","moveState","setMoveState","dragStatus","useMemo","moveCallback","handleKeyEvent","state","keyCode","handleMove","handleEnd","dragState","imageRendering","setCanvas","canvasRef","domRef","offsetInfo","ix","iy","os","ox","oy","setTransform","fillRect","outline","select","setSelectLetter","handleSelect","setData","minBaseLine","maxBaseLine","setPreviewTransform","lh","index","baseLine","basey","beginPath","moveTo","lineTo","setLineDash","lines","kerningMap","charMap","minX","minY","maxX","maxY","lk","kering","getPreviewCanvas","setPreviewText","setOffset","setGlyph","setKerning","disposer","steKerning","Preview","PreviewText","PreviewMertic","PreviewKerning","minHeight","minWidth","borderRight","whiteSpace","editor","appearance","icon","ProjectTab","useRemove","onRemove","onRename","setEditor","sname","setSName","editorRef","handleRemove","focus","onDoubleClick","onKeyDown","onBlur","workSpace","selectProject","removeProject","setProjectName","Tabs","indicatorColor","textColor","scrollButtons","selectionFollowsFocus","TabIndicatorProps","slider","setShowPreview","anchorRef","handleChange","Slider","prevOpen","Paper","contains","MenuList","actions","inputLabel","removeImage","inputValue","setInputValue","changeSelect","direction","Checkbox","InputBase","onFocus","onInput","iv","fixed","panel","continer","overflowY","listWrap","addImages","isFullscreen","setFullscreen","handleLoadFile","test","matched","fileList","f","handleKeyDown","tagName","onDragEnter","onDragOver","onDrop","dataTransfer","Accordion","expanded","o","TransitionProps","AccordionSummary","expandIcon","AccordionDetails","tabsRoot","tabRoot","tabSelected","tabWrapper","WorkSpace","close","ConsecutiveSnackbars","setWorker","reason","updateVersion","newWorker","Fragment","channel","MessageChannel","port1","onmessage","location","reload","port2","aria-label","loadingBackdrop","drawer","Backdrop","App","ThemeProvider","CssBaseline","isLocalhost","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onSuccess","ReactDOM","render","getElementById","process","origin","fetch","headers","response","contentType","status","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration","waiting"],"mappings":"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","file":"static/js/main.250572bb.chunk.js","sourcesContent":["import { action, observable } from 'mobx'\n\nclass Ui {\n  @observable globalLoader = 0\n\n  @action.bound showGlobalLoader(num = 1): void {\n    this.globalLoader += num\n  }\n\n  @action.bound hideGlobalLoader(num = -1): void {\n    this.globalLoader += num\n  }\n}\n\nexport default Ui\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/RectanglePacker.516e747e685ab76563da.worker.js\");\n}\n","type UseType<T, U> = T extends U ? true : false\n\ntype IsNumber<T> = UseType<T, number>\n\nconst num = <T>(n: T): IsNumber<T> => {\n  return (typeof n === 'number' && !Number.isNaN(n)) as IsNumber<T>\n}\n\nconst is = {\n  num,\n}\n\nexport default is\n","import fontStyleStringify from './fontStyleStringify'\n\ninterface StyleConig {\n  fontFamily: string\n  fontSize: number\n}\ninterface Baselines {\n  middle: number\n  hanging: number\n  top: number\n  alphabetic: number\n  ideographic: number\n  bottom: number\n}\n\nlet canvas: HTMLCanvasElement\n\nexport default function getTextBaselines(\n  text: string,\n  styleConig: StyleConig,\n): Baselines {\n  if (!canvas) canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n  if (!ctx) throw new Error('Get context 2d failed.')\n  const font = fontStyleStringify(styleConig)\n\n  // clear before settings\n  canvas.width = 1\n  canvas.height = 1\n\n  ctx.font = font\n\n  ctx.textBaseline = 'middle'\n  const middle = ctx.measureText(text)\n  ctx.textBaseline = 'hanging'\n  const hanging = ctx.measureText(text)\n  ctx.textBaseline = 'top'\n  const top = ctx.measureText(text)\n  ctx.textBaseline = 'alphabetic'\n  const alphabetic = ctx.measureText(text)\n  ctx.textBaseline = 'ideographic'\n  const ideographic = ctx.measureText(text)\n  ctx.textBaseline = 'bottom'\n  const bottom = ctx.measureText(text)\n\n  return {\n    middle: 0,\n    hanging: hanging.actualBoundingBoxAscent - middle.actualBoundingBoxAscent,\n    top: top.actualBoundingBoxAscent - middle.actualBoundingBoxAscent,\n    alphabetic:\n      middle.actualBoundingBoxDescent - alphabetic.actualBoundingBoxDescent,\n    ideographic:\n      middle.actualBoundingBoxDescent - ideographic.actualBoundingBoxDescent,\n    bottom: middle.actualBoundingBoxDescent - bottom.actualBoundingBoxDescent,\n  }\n}\n","import is from './is'\n\nconst num = <T extends unknown>(a: T, b: number): number => {\n  if (is.num(a)) return a as number\n  return b\n}\n\nconst use = {\n  num,\n}\n\nexport default use\n","import { action, observable } from 'mobx'\nimport use from 'src/utils/use'\n\nclass Ui {\n  @observable scale = 1\n\n  @observable offsetX = 0\n\n  @observable offsetY = 0\n\n  @observable width = 0\n\n  @observable height = 0\n\n  @observable previewText = 'Hello World!\\nHello Snow Bamboo!' // /\\r\\n|\\r|\\n/\n\n  @observable selectLetter = ''\n\n  @observable selectNextLetter = ''\n\n  @observable showPreview = false\n\n  @observable previewScale = 1\n\n  @observable previewOffsetX = 0\n\n  @observable previewOffsetY = 0\n\n  constructor(ui: Partial<Ui> = {}) {\n    if (ui.previewText) {\n      this.previewText = ui.previewText\n    }\n  }\n\n  reOffset() {\n    this.offsetX = Math.min(\n      Math.max(this.width / -2, this.offsetX),\n      this.width / 2,\n    )\n    this.offsetY = Math.min(\n      Math.max(this.height / -2, this.offsetY),\n      this.height / 2,\n    )\n    this.scale = Math.max(this.scale, 0.01)\n  }\n\n  @action.bound setTransform(trans: Partial<Ui>): void {\n    this.scale = use.num(trans.scale, this.scale)\n    this.offsetX = use.num(trans.offsetX, this.offsetX)\n    this.offsetY = use.num(trans.offsetY, this.offsetY)\n    this.reOffset()\n  }\n\n  @action.bound setSize(width: number, height: number): void {\n    this.width = width\n    this.height = height\n    this.reOffset()\n  }\n\n  @action.bound setPreviewText(text: string): void {\n    this.previewText = text\n  }\n\n  @action.bound setShowPreview(showPreview: boolean) {\n    this.showPreview = showPreview\n  }\n\n  @action.bound setPreviewTransform(trans: Partial<Ui>): void {\n    this.previewScale = Math.max(\n      use.num(trans.previewScale, this.previewScale),\n      0.01,\n    )\n    this.previewOffsetX = use.num(trans.previewOffsetX, this.previewOffsetX)\n    this.previewOffsetY = use.num(trans.previewOffsetY, this.previewOffsetY)\n  }\n\n  @action.bound setSelectLetter(letter: string = '', next: string = '') {\n    this.selectLetter = letter\n    this.selectNextLetter = next\n  }\n}\n\nexport default Ui\n","import is from './is'\n\nexport interface FontStyleConfig {\n  fontStyle?: 'normal' | 'italic' | 'oblique' | string\n  fontVariant?: 'normal' | 'none' | 'small-caps' | string\n  fontWeight?:\n    | 'normal'\n    | 'bold'\n    | 'lighter'\n    | 'bolder'\n    | '100'\n    | '200'\n    | '300'\n    | '400'\n    | '500'\n    | '600'\n    | '700'\n    | '800'\n    | '900'\n    | 100\n    | 200\n    | 300\n    | 400\n    | 500\n    | 600\n    | 700\n    | 800\n    | 900\n    | 'inherit'\n    | 'initial'\n    | 'unset'\n  fontSize?: string | number\n  lineHeight?: string | number\n  fontFamily?: string\n}\n\nconst defaultConfig: FontStyleConfig = {\n  fontSize: '14px',\n  fontFamily: 'sans-serif',\n}\n\n// https://developer.mozilla.org/zh-CN/docs/Web/CSS/font\nexport default function fontStyleStringify(\n  fontStyleConfig: FontStyleConfig,\n): string {\n  const config = { ...defaultConfig, ...fontStyleConfig }\n  const arr = []\n\n  if (config.fontStyle) arr.push(config.fontStyle)\n\n  if (config.fontVariant) arr.push(config.fontVariant)\n\n  if (config.fontWeight) arr.push(config.fontWeight)\n\n  if (is.num(config.fontSize)) {\n    config.fontSize = `${config.fontSize}px`\n  } else {\n    config.fontSize = defaultConfig.fontSize\n  }\n\n  if (config.lineHeight) {\n    arr.push(`${config.fontSize}/${config.lineHeight}`)\n  } else {\n    arr.push(config.fontSize)\n  }\n\n  arr.push(config.fontFamily)\n\n  return arr.join(' ')\n}\n","let fontTargeCache: HTMLStyleElement\nlet loadDiv: HTMLDivElement\n\nexport default function updateFontFace(\n  name: string,\n  url: string,\n): Promise<void> {\n  const cssNode = document.createTextNode(`\n    @font-face {\n        font-family: \"${name}\";\n        src: url(\"${url}\") format('truetype');\n    }`)\n\n  if (!fontTargeCache) {\n    const textNode = document.createTextNode(`A`)\n    fontTargeCache = document.createElement('style')\n    loadDiv = document.createElement('div')\n    document.head.appendChild(fontTargeCache)\n    fontTargeCache.appendChild(cssNode)\n    loadDiv.appendChild(textNode)\n    loadDiv.style.position = 'absolute'\n    loadDiv.style.left = '-1000px'\n    loadDiv.style.top = '-1000px'\n    loadDiv.style.opacity = '0'\n    loadDiv.style.fontSize = '12px'\n    loadDiv.style.pointerEvents = 'none'\n    document.body.appendChild(loadDiv)\n  } else {\n    fontTargeCache.appendChild(cssNode)\n  }\n  loadDiv.style.fontFamily = name\n  return new Promise((resolve) => setTimeout(resolve, 200))\n}\n","import { action, computed, observable } from 'mobx'\n\n// import GradientPaletteItem from './gradientPaletteItem'\n\nexport enum GradientType {\n  LINEAR,\n  RADIAL,\n}\n\nexport interface GradientColor {\n  offset: number\n  color: string\n}\n\nexport interface GradientPaletteItem extends GradientColor {\n  id: number\n}\n\nexport interface GradientColorOption extends GradientColor {\n  id?: number\n}\n\nclass Gradient {\n  @observable type: GradientType = 0\n\n  @observable angle: number\n\n  @observable.shallow palette: GradientPaletteItem[] = []\n\n  constructor(gradient: Partial<Gradient> = {}) {\n    this.type = gradient.type && GradientType[gradient.type] ? gradient.type : 0\n    this.angle = gradient.angle || 0\n    if (gradient.palette) {\n      gradient.palette.forEach((item) => {\n        this.palette.push({\n          ...item,\n          id: item.id || this.nextId,\n        })\n      })\n    } else {\n      this.addColor(0, '#FFF')\n      this.addColor(1)\n    }\n  }\n\n  @computed get ids(): number[] {\n    return this.palette.map((color) => color.id)\n  }\n\n  @computed get nextId(): number {\n    if (this.ids.length === 0) return 1\n    return Math.max(...this.ids) + 1\n  }\n\n  @action.bound setType(type: GradientType): void {\n    this.type = type\n  }\n\n  @action.bound setAngle(angle: number): void {\n    this.angle = angle\n  }\n\n  @action.bound addColor(offset = 0, color = '#000000'): void {\n    this.palette.push({ offset, color, id: this.nextId })\n  }\n\n  @action.bound updatePalette(palette: GradientPaletteItem[]): void {\n    this.palette = palette\n  }\n}\n\nexport default Gradient\n","import { action, observable, computed, runInAction } from 'mobx'\nimport getTextBaselines from 'src/utils/getTextBaselines'\nimport { parse, Font as OpenType } from 'opentype.js'\nimport updateFontFace from 'src/utils/updateFontFace'\n\nclass Font {\n  @observable.ref font: ArrayBuffer | null = null\n\n  @observable family: string = 'sans-serif'\n\n  @observable size: number\n\n  @observable lineHeight = 1.25\n\n  @observable middle = 0\n\n  @observable hanging = 0\n\n  @observable top = 0\n\n  @observable alphabetic = 0\n\n  @observable ideographic = 0\n\n  @observable bottom = 0\n\n  @observable.ref opentype: OpenType | null = null\n\n  @computed get minBaseLine() {\n    const min = Math.min(\n      this.middle,\n      this.hanging,\n      this.top,\n      this.alphabetic,\n      this.ideographic,\n      this.bottom,\n    )\n    if (Number.isNaN(Number(min))) return 0\n    return min\n  }\n\n  @computed get maxBaseLine() {\n    const max = Math.max(\n      this.middle,\n      this.hanging,\n      this.top,\n      this.alphabetic,\n      this.ideographic,\n      this.bottom,\n    )\n    if (Number.isNaN(Number(max))) return this.size\n    return max\n  }\n\n  constructor(font: Partial<Font> = {}) {\n    this.size = font.size || 72\n    this.lineHeight = font.lineHeight || 1.25\n\n    if (font.font && font.font.byteLength) {\n      this.setFont(font.font)\n    } else {\n      this.updateBaseines()\n    }\n  }\n\n  updateBaseines(): void {\n    const bls = getTextBaselines('a', {\n      fontFamily: this.family,\n      fontSize: this.size,\n    })\n\n    this.middle = bls.middle\n    this.hanging = bls.hanging\n    this.top = bls.top\n    this.alphabetic = bls.alphabetic\n    this.ideographic = bls.ideographic\n    this.bottom = bls.bottom\n  }\n\n  @action.bound setFont(buffer: ArrayBuffer): Promise<void> {\n    try {\n      this.opentype = parse(buffer, { lowMemory: true })\n    } catch (e) {\n      return Promise.resolve()\n    }\n    const { names } = this.opentype\n    const fontName = names.postScriptName[Object.keys(names.postScriptName)[0]]\n    const url = URL.createObjectURL(new Blob([buffer]))\n    return updateFontFace(fontName, url).then(() => {\n      runInAction(() => {\n        this.family = fontName\n        this.font = buffer\n        this.updateBaseines()\n      })\n    })\n  }\n\n  @action.bound setSize(size: number): void {\n    this.size = size\n    this.updateBaseines()\n  }\n\n  @action.bound setLineHeight(lineHeight: number): void {\n    this.lineHeight = lineHeight\n  }\n}\n\nexport default Font\n","import { action, observable, runInAction } from 'mobx'\nimport use from 'src/utils/use'\nimport base64ToArrayBuffer from 'src/utils/base64ToArrayBuffer'\n\nexport type Repetition = 'repeat' | 'repeat-x' | 'repeat-y' | 'no-repeat'\n\nconst DEFAULT_IMAGE =\n  'iVBORw0KGgoAAAANSUhEUgAAAAgAAAAIAQMAAAD+wSzIAAAABlBMVEX////MzMw46qqDAAAADklEQVQI12Pgh8IPEAgAEeAD/Xk4HBcAAAAASUVORK5CYII='\n\nclass PatternTexture {\n  @observable.ref buffer: ArrayBuffer = base64ToArrayBuffer(DEFAULT_IMAGE)\n\n  @observable.ref image: HTMLImageElement | null = null\n\n  @observable src = ''\n\n  @observable repetition: Repetition = 'repeat'\n\n  @observable scale: number\n\n  constructor(pt: Partial<PatternTexture> = {}) {\n    this.scale = use.num(pt.scale, 1)\n    this.repetition = pt.repetition || 'repeat'\n    this.setImage(pt.buffer || this.buffer)\n  }\n\n  @action.bound setImage(buffer: ArrayBuffer): void {\n    const src = URL.createObjectURL(new Blob([buffer]))\n    const img = new Image()\n    img.onload = () => {\n      runInAction('setPatternTextureImage', () => {\n        this.buffer = buffer\n        this.image = img\n        this.src = src\n        img.onload = null\n      })\n    }\n    img.src = src\n  }\n\n  @action.bound setRepetition(repetition: Repetition): void {\n    this.repetition = repetition\n  }\n\n  @action.bound setScale(scale: number): void {\n    this.scale = scale\n  }\n}\n\nexport default PatternTexture\n","import { action, observable } from 'mobx'\n\nimport Gradient from './gradient'\nimport PatternTexture from './patternTexture'\n\nexport enum FillType {\n  SOLID,\n  GRADIENT,\n  IMAGE,\n}\n\nclass Fill {\n  @observable type: FillType\n\n  @observable color: string\n\n  @observable.shallow gradient: Gradient\n\n  @observable.shallow patternTexture: PatternTexture\n\n  constructor(fill: Partial<Fill> = {}) {\n    this.color = fill.color || '#000000'\n    this.type = fill.type && FillType[fill.type] ? fill.type : 0\n    this.gradient = new Gradient(fill.gradient)\n    this.patternTexture = new PatternTexture(fill.patternTexture)\n  }\n\n  @action.bound setType(type: FillType = 0): void {\n    this.type = type\n  }\n\n  @action.bound setColor(color = '#000000'): void {\n    this.color = color\n  }\n}\n\nexport default Fill\n","export default function base64ToArrayBuffer(base64: string): ArrayBuffer {\n  const binaryString = atob(base64)\n  const len = binaryString.length\n  const bytes = new Uint8Array(len)\n  for (let i = 0; i < len; i += 1) {\n    bytes[i] = binaryString.charCodeAt(i)\n  }\n  return bytes.buffer\n}\n","import fontStyleStringify, { FontStyleConfig } from './fontStyleStringify'\n\nexport interface TextSize {\n  text: string\n  font: string\n  width: number\n  height: number\n  fontWidth: number\n  fontHeight: number\n  trimOffsetTop: number\n  trimOffsetLeft: number\n  trimOffsetRight: number\n  trimOffsetBottom: number\n}\n\nlet canvas: HTMLCanvasElement\n\nexport default function getTextSize(\n  text: string,\n  config: FontStyleConfig,\n): TextSize {\n  if (!canvas) canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n  if (!ctx) throw new Error('Get context 2d failed.')\n\n  // clear before settings\n  canvas.width = 1\n  canvas.height = 1\n\n  const font = fontStyleStringify(config)\n\n  ctx.font = font\n\n  ctx.textAlign = 'left'\n  ctx.textBaseline = 'bottom'\n\n  const testA = ctx.measureText(text)\n\n  if (typeof testA.actualBoundingBoxLeft === 'undefined') {\n    return {\n      text,\n      font,\n      width: testA.width,\n      height: parseInt(`${config.fontSize ?? '14'}`, 10),\n      fontWidth: testA.width,\n      fontHeight: parseInt(`${config.fontSize ?? '14'}`, 10),\n      trimOffsetTop: 0,\n      trimOffsetLeft: 0,\n      trimOffsetRight: 0,\n      trimOffsetBottom: 0,\n    }\n  }\n\n  ctx.textAlign = 'right'\n  ctx.textBaseline = 'top'\n\n  const testB = ctx.measureText(text)\n\n  const trimOffsetLeft = Math.ceil(testA.actualBoundingBoxLeft)\n  const trimOffsetRight = Math.ceil(testB.actualBoundingBoxRight)\n  const trimOffsetTop = Math.ceil(testB.actualBoundingBoxAscent)\n  const trimOffsetBottom = Math.ceil(testA.actualBoundingBoxDescent)\n  const width = trimOffsetLeft + Math.ceil(testA.actualBoundingBoxRight)\n  const height = trimOffsetBottom + Math.ceil(testA.actualBoundingBoxAscent)\n  const fontWidth = Math.ceil(testA.width)\n  const fontHeight =\n    testA.actualBoundingBoxAscent - testB.actualBoundingBoxAscent\n\n  return {\n    text,\n    font,\n    width,\n    height,\n    fontWidth,\n    fontHeight,\n    trimOffsetTop,\n    trimOffsetLeft,\n    trimOffsetRight,\n    trimOffsetBottom,\n  }\n}\n","import { action, observable } from 'mobx'\nimport use from 'src/utils/use'\n\nimport Fill from './fill'\n\nclass Stroke extends Fill {\n  @observable width = 1\n\n  /**\n   * butt   默认。向线条的每个末端添加平直的边缘。\n   * round  向线条的每个末端添加圆形线帽。\n   * square 向线条的每个末端添加正方形线帽。\n   */\n  @observable lineCap: CanvasLineCap\n\n  /**\n   * bevel 创建斜角。\n   * round 创建圆角。\n   * miter 默认。创建尖角。\n   */\n  @observable lineJoin: CanvasLineJoin\n\n  constructor(stroke: Partial<Stroke> = {}) {\n    super(stroke)\n    this.width = use.num(stroke.width, 1)\n    this.lineCap = stroke.lineCap || 'round'\n    this.lineJoin = stroke.lineJoin || 'round'\n  }\n\n  @action.bound setWidth(width: number): void {\n    this.width = width\n  }\n\n  @action.bound setLineCap(lineCap: CanvasLineCap): void {\n    this.lineCap = lineCap\n  }\n\n  @action.bound setLineJoin(lineJoin: CanvasLineJoin): void {\n    this.lineJoin = lineJoin\n  }\n}\n\nexport default Stroke\n","import { action, observable } from 'mobx'\nimport use from 'src/utils/use'\n\nclass Shadow {\n  @observable color: string\n\n  @observable blur = 1\n\n  @observable offsetX = 1\n\n  @observable offsetY = 1\n\n  constructor(shadow: Partial<Shadow> = {}) {\n    this.color = shadow.color || '#000000'\n    this.blur = use.num(shadow.blur, 1)\n    this.offsetX = use.num(shadow.offsetX, 1)\n    this.offsetY = use.num(shadow.offsetY, 1)\n  }\n\n  @action.bound setColor(color: string): void {\n    this.color = color\n  }\n\n  @action.bound setBlur(blur: number): void {\n    this.blur = blur\n  }\n\n  @action.bound setOffsetX(offsetX: number): void {\n    this.offsetX = offsetX\n  }\n\n  @action.bound setOffsetY(offsetY: number): void {\n    this.offsetY = offsetY\n  }\n\n  @action.bound setOffset(offsetX: number, offsetY: number): void {\n    this.offsetX = offsetX\n    this.offsetY = offsetY\n  }\n}\n\nexport default Shadow\n","import { action, observable } from 'mobx'\n\nimport Font from './font'\nimport Fill from './fill'\nimport Stroke from './stroke'\nimport Shadow from './shadow'\n\nclass Style {\n  @observable readonly font: Font\n\n  @observable readonly fill: Fill\n\n  @observable useStroke: boolean\n\n  @observable readonly stroke: Stroke\n\n  @observable useShadow: boolean\n\n  @observable readonly shadow: Shadow\n\n  @observable bgColor = 'rgba(0,0,0,0)'\n\n  constructor(style: Partial<Style> = {}) {\n    this.font = new Font(style.font)\n    this.fill = new Fill(style.fill)\n    this.stroke = new Stroke(style.stroke)\n    this.shadow = new Shadow(style.shadow)\n    this.useShadow = !!style.useShadow\n    this.useStroke = !!style.useStroke\n  }\n\n  @action.bound setUseStroke(useStroke: boolean): void {\n    this.useStroke = useStroke\n  }\n\n  @action.bound setUseShadow(useShadow: boolean): void {\n    this.useShadow = useShadow\n  }\n\n  @action.bound setBgColor(bgColor: string): void {\n    this.bgColor = bgColor\n  }\n}\n\nexport default Style\n","import { action, observable } from 'mobx'\nimport use from 'src/utils/use'\n\nclass Layout {\n  @observable padding = 1\n\n  @observable spacing = 1\n\n  @observable power = false\n\n  constructor(layout: Partial<Layout> = {}) {\n    this.padding = use.num(layout.padding, 1)\n\n    this.spacing = use.num(layout.spacing, 1)\n\n    this.power = !!layout.power\n  }\n\n  @action.bound setPadding(padding: number): void {\n    this.padding = padding\n  }\n\n  @action.bound setSpacing(spacing: number): void {\n    this.spacing = spacing\n  }\n\n  @action.bound setPower(power: boolean): void {\n    this.power = power\n  }\n}\n\nexport default Layout\n","import { action, observable } from 'mobx'\n\nclass Metric {\n  @observable xAdvance = 0\n\n  @observable xOffset = 0\n\n  @observable yOffset = 0\n\n  constructor(metric: Partial<Metric> = {}) {\n    this.xAdvance = metric.xAdvance || 0\n    this.xOffset = metric.xOffset || 0\n    this.yOffset = metric.yOffset || 0\n  }\n\n  @action.bound setXAdvance(xAdvance: number): void {\n    this.xAdvance = xAdvance\n  }\n\n  @action.bound setXOffset(xOffset: number): void {\n    this.xOffset = xOffset\n  }\n\n  @action.bound setYOffset(yOffset: number): void {\n    this.yOffset = yOffset\n  }\n}\n\nexport default Metric\n","export interface TrimImageInfo {\n  width: number\n  height: number\n  trimOffsetTop: number\n  trimOffsetLeft: number\n}\n\nexport default function trimImageData(\n  imageData: ImageData,\n  threshold = 0,\n): TrimImageInfo {\n  const { data, width, height } = imageData\n  let topTrim = 0\n  let bottomTrim = 0\n  let leftTrim = 0\n  let rightTrim = 0\n  let topStatus = true\n  let bottomStatus = true\n  let leftStatus = true\n  let rightStatus = true\n\n  let h: number = Math.ceil(height / 2)\n  const w: number = Math.ceil(width / 2)\n\n  for (let i = 0; i < h; i += 1) {\n    for (let j = 0; j < width; j += 1) {\n      if (topStatus && data[(i * width + j) * 4 + 3] > threshold) {\n        topStatus = false\n      }\n      if (\n        bottomStatus &&\n        data[((height - i - 1) * width + j) * 4 + 3] > threshold\n      ) {\n        bottomStatus = false\n      }\n      if (!topStatus && !bottomStatus) {\n        break\n      }\n    }\n    if (!topStatus && !bottomStatus) {\n      break\n    }\n    if (topStatus) topTrim += 1\n    if (bottomStatus) bottomTrim += 1\n  }\n\n  if (topTrim + bottomTrim >= height) {\n    // Is empty image.\n    return {\n      trimOffsetLeft: width * -1,\n      trimOffsetTop: height * -1,\n      width: 0,\n      height: 0,\n    }\n  }\n\n  h = height - bottomTrim\n\n  for (let i = 0; i < w; i += 1) {\n    for (let j = topTrim; j < h; j += 1) {\n      if (leftStatus && data[(width * j + i) * 4 + 3] > threshold) {\n        leftStatus = false\n      }\n      if (\n        rightStatus &&\n        data[(width * j + width - i - 1) * 4 + 3] > threshold\n      ) {\n        rightStatus = false\n      }\n      if (!leftStatus && !rightStatus) {\n        break\n      }\n    }\n    if (!leftStatus && !rightStatus) {\n      break\n    }\n    if (leftStatus) leftTrim += 1\n    if (rightStatus) rightTrim += 1\n  }\n\n  return {\n    trimOffsetLeft: leftTrim * -1,\n    trimOffsetTop: topTrim * -1,\n    width: width - leftTrim - rightTrim,\n    height: height - topTrim - bottomTrim,\n  }\n}\n","export interface Point {\n  x: number\n  y: number\n}\n\nexport default function getPointOnCircle(\n  x: number,\n  y: number,\n  r: number,\n  angle: number,\n): Point {\n  return {\n    x: x + r * Math.cos((Math.PI / 180) * angle),\n    y: y + r * Math.sin((Math.PI / 180) * angle),\n  }\n}\n","import getPointOnCircle from './getPointOnCircle'\n\ninterface GarentColor {\n  offset: number\n  color: string\n}\n\ninterface Pradient {\n  type: 0 | 1\n  palette: GarentColor[]\n  angle: number\n}\n\ninterface PatternTexture {\n  image: HTMLImageElement | null\n  repetition: string\n  scale: number\n}\n\ninterface Config {\n  type: number\n  color: string\n  gradient: Pradient\n  patternTexture: PatternTexture\n}\n\nexport default function getCanvasStyle(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  config: Config,\n): string | CanvasGradient | CanvasPattern {\n  // 纯色\n  if (config.type === 0) {\n    return config.color\n  }\n\n  // 渐变\n  if (config.type === 1) {\n    const { type, palette, angle } = config.gradient\n    let gradient: CanvasGradient\n    const cx = x + width / 2\n    const cy = y + height / 2\n    const r = Math.max(width, height) / 2\n    if (type === 0) {\n      const startPoint = getPointOnCircle(cx, cy, r, angle + 180)\n      const endPoint = getPointOnCircle(cx, cy, r, angle)\n      gradient = ctx.createLinearGradient(\n        startPoint.x,\n        startPoint.y,\n        endPoint.x,\n        endPoint.y,\n      )\n    } else {\n      gradient = ctx.createRadialGradient(cx, cy, 0, cx, cy, r)\n    }\n\n    palette.forEach((color) => {\n      gradient.addColorStop(color.offset, color.color)\n    })\n\n    return gradient\n  }\n\n  const { image, repetition, scale } = config.patternTexture\n  if (!image) return 'rgba(0,0,0,0)'\n\n  if (scale === 1)\n    return ctx.createPattern(image, repetition) || 'rgba(0,0,0,0)'\n\n  const { naturalWidth, naturalHeight } = image\n  const canvas: HTMLCanvasElement = document.createElement('canvas')\n  canvas.width = Math.ceil(naturalWidth * scale)\n  canvas.height = Math.ceil(naturalHeight * scale)\n  const textureCtx = canvas.getContext('2d')\n\n  if (!textureCtx) return 'rgba(0,0,0,0)'\n\n  textureCtx.drawImage(image, 0, 0, canvas.width, canvas.height)\n  return ctx.createPattern(canvas, repetition) || 'rgba(0,0,0,0)'\n}\n","import trimImageData from './trimImageData'\nimport getTextSize, { TextSize } from './getTextSize'\nimport fontStyleStringify from './fontStyleStringify'\nimport getCanvasStyle from './getCanvasStyle'\n\nexport interface GlyphInfo extends TextSize {\n  canvas: HTMLCanvasElement | null\n}\n\ninterface ParentColor {\n  offset: number\n  color: string\n}\n\ninterface Gradient {\n  type: 0 | 1\n  palette: ParentColor[]\n  angle: number\n}\n\ninterface PatternTexture {\n  image: HTMLImageElement | null\n  repetition: string\n  scale: number\n}\n\ninterface Fill {\n  type: number\n  color: string\n  gradient: Gradient\n  patternTexture: PatternTexture\n}\n\ninterface Stroke extends Fill {\n  width: number\n  lineJoin: CanvasLineJoin\n  lineCap: CanvasLineCap\n}\n\ninterface Font {\n  family: string\n  size: number\n}\n\ninterface Shadow {\n  color: string\n  blur: number\n  offsetX: number\n  offsetY: number\n}\n\nexport interface Config {\n  font: Font\n  fill: Fill\n  stroke?: Stroke\n  shadow?: Shadow\n}\n\nexport default function getGlyphInfo(text: string, config: Config): GlyphInfo {\n  const { font, stroke, shadow, fill } = config\n\n  const styleConig = {\n    fontSize: font.size,\n    fontFamily: font.family,\n  }\n\n  const trimInfo = getTextSize(text, styleConig)\n  const { width, height, trimOffsetLeft, trimOffsetTop } = trimInfo\n  if (width === 0 || height === 0) return { canvas: null, ...trimInfo }\n\n  const lineWidth = stroke ? stroke.width * 2 : 0 // canvas is center stroke\n  let addX = lineWidth\n  let addY = lineWidth\n  let styleX = (width - font.size) / 2\n  let styleY = (height - font.size) / 2\n\n  if (shadow) {\n    const blur = Math.ceil(shadow.blur * 1.5)\n    addX = Math.abs(shadow.offsetX) + blur\n    addY = Math.abs(shadow.offsetY) + blur\n  }\n\n  styleX += addX\n  styleY += addY\n\n  let canvas = document.createElement('canvas')\n  let ctx = canvas.getContext('2d') as CanvasRenderingContext2D\n  canvas.width = width + addX * 2\n  canvas.height = height + addY * 2\n\n  ctx.textAlign = 'left'\n  ctx.textBaseline = 'top'\n\n  ctx.font = fontStyleStringify({\n    fontSize: font.size,\n    fontFamily: font.family,\n  })\n\n  if (stroke && lineWidth) {\n    ctx.lineWidth = lineWidth\n    ctx.lineCap = stroke.lineCap\n    ctx.lineJoin = stroke.lineJoin\n    ctx.strokeStyle = getCanvasStyle(\n      ctx,\n      styleX,\n      styleY,\n      font.size,\n      font.size,\n      stroke,\n    )\n    ctx.strokeText(text, addX + trimOffsetLeft, addY + trimOffsetTop)\n  }\n\n  ctx.fillStyle = getCanvasStyle(\n    ctx,\n    styleX,\n    styleY,\n    font.size,\n    font.size,\n    fill,\n  )\n  ctx.fillText(text, addX + trimOffsetLeft, addY + trimOffsetTop)\n\n  if (shadow) {\n    const cvs = document.createElement('canvas')\n    cvs.width = width + addX * 2\n    cvs.height = height + addY * 2\n    const newCtx = cvs.getContext('2d') as CanvasRenderingContext2D\n\n    newCtx.shadowColor = shadow.color\n    newCtx.shadowBlur = shadow.blur\n    newCtx.shadowOffsetX = shadow.offsetX\n    newCtx.shadowOffsetY = shadow.offsetY\n\n    newCtx.drawImage(canvas, 0, 0)\n\n    canvas = cvs\n    ctx = newCtx\n  }\n\n  if (canvas.width === 0 || canvas.height === 0) {\n    return {\n      canvas,\n      ...trimInfo,\n    }\n  }\n\n  const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height)\n  const styleTrimInfo = trimImageData(imgData)\n  canvas.width = styleTrimInfo.width\n  canvas.height = styleTrimInfo.height\n  trimInfo.width = styleTrimInfo.width\n  trimInfo.height = styleTrimInfo.height\n  ctx.putImageData(\n    imgData,\n    styleTrimInfo.trimOffsetLeft,\n    styleTrimInfo.trimOffsetTop,\n  )\n  trimInfo.trimOffsetLeft += addX + styleTrimInfo.trimOffsetLeft\n  trimInfo.trimOffsetTop += addY + styleTrimInfo.trimOffsetTop\n  trimInfo.trimOffsetBottom +=\n    addY +\n    (height + addY * 2 + styleTrimInfo.trimOffsetTop - styleTrimInfo.height)\n\n  return {\n    canvas,\n    ...trimInfo,\n  }\n}\n","import { observable, action } from 'mobx'\n\nimport Metric from './metric'\n\nexport type GlyphType = 'text' | 'image'\n\nclass GlyphBase {\n  readonly type: GlyphType = 'text'\n\n  @observable letter = ''\n\n  @observable.ref source: HTMLImageElement | HTMLCanvasElement | null = null\n\n  @observable width = 0\n\n  @observable height = 0\n\n  @observable x = 0\n\n  @observable y = 0\n\n  @observable fontWidth = 0\n\n  @observable fontHeight = 0\n\n  @observable trimOffsetTop = 0\n\n  @observable trimOffsetLeft = 0\n\n  @observable trimOffsetRight = 0\n\n  @observable trimOffsetBottom = 0\n\n  @observable.ref adjustMetric: Metric\n\n  @observable kerning: Map<string, number> = new Map()\n\n  constructor(glyph: Partial<GlyphBase> = {}) {\n    this.letter = glyph.letter || ''\n    this.adjustMetric = new Metric(glyph.adjustMetric)\n\n    if (glyph.kerning) {\n      this.kerning = glyph.kerning\n    }\n  }\n\n  @action.bound steKerning(text: string, kerning: number) {\n    this.kerning.set(text, kerning)\n  }\n}\n\nexport default GlyphBase\n","import { action } from 'mobx'\nimport getGlyphInfo, { Config } from 'src/utils/getGlyphInfo'\nimport GlyphBase from './glyphBase'\n\nimport Style from './style'\n\nclass GlyphFont extends GlyphBase {\n  constructor(galyphFont: Partial<GlyphFont> = {}, textStyle: Style) {\n    super(galyphFont)\n    this.setGlyphInfo(textStyle)\n  }\n\n  @action setGlyphInfo(textStyle: Style): void {\n    const { font, fill, useStroke, stroke, useShadow, shadow } = textStyle\n    const config: Config = { font, fill }\n    if (useStroke) config.stroke = stroke\n    if (useShadow) config.shadow = shadow\n\n    const glyphInfo = getGlyphInfo(this.letter, config)\n    this.source = glyphInfo.canvas\n    this.width = glyphInfo.width\n    this.height = glyphInfo.height\n    this.fontWidth = glyphInfo.fontWidth\n    this.fontHeight = glyphInfo.fontHeight\n    this.trimOffsetTop = glyphInfo.trimOffsetTop\n    this.trimOffsetLeft = glyphInfo.trimOffsetLeft\n    this.trimOffsetRight = glyphInfo.trimOffsetRight\n    this.trimOffsetBottom = glyphInfo.trimOffsetBottom\n  }\n}\n\nexport default GlyphFont\n","import { action, observable, runInAction } from 'mobx'\nimport getTrimImageInfo from 'src/utils/getTrimImageInfo'\n\nimport GlyphBase, { GlyphType } from './glyphBase'\n\nexport interface FileInfo {\n  letter?: string\n  fileName: string\n  fileType: string\n  buffer: ArrayBuffer\n}\n\nclass GlyphImage extends GlyphBase {\n  readonly type: GlyphType = 'image'\n\n  @observable src = '' // 仅显示列表中\n\n  @observable.ref buffer: ArrayBuffer | null = null\n\n  @observable fileName = ''\n\n  @observable fileType = ''\n\n  @observable selected = true\n\n  constructor(glyphImage: Partial<GlyphImage>) {\n    super(glyphImage)\n    this.letter = glyphImage.letter || ''\n    this.fileName = glyphImage.fileName || ''\n    this.fileType = glyphImage.fileType || ''\n    this.buffer = glyphImage.buffer || null\n    if (glyphImage.buffer) {\n      this.src = URL.createObjectURL(new Blob([glyphImage.buffer]))\n      this.initImage()\n    }\n  }\n\n  @action.bound initImage(): Promise<void> {\n    return new Promise((resolve) => {\n      const image = new Image()\n      image.onload = () => {\n        runInAction('trimImage', () => {\n          const { naturalWidth, naturalHeight } = image\n          this.fontWidth = naturalWidth\n          this.fontHeight = naturalHeight\n\n          const trimInfo = getTrimImageInfo(image)\n          this.width = trimInfo.width\n          this.height = trimInfo.height\n          this.trimOffsetLeft = trimInfo.trimOffsetLeft\n          this.trimOffsetTop = trimInfo.trimOffsetTop\n          this.trimOffsetRight =\n            trimInfo.width - trimInfo.trimOffsetLeft - naturalWidth\n          this.trimOffsetBottom =\n            trimInfo.height - trimInfo.trimOffsetTop - naturalHeight\n\n          this.source = trimInfo.canvas\n          resolve()\n        })\n      }\n      image.src = this.src\n    })\n  }\n\n  @action.bound setGlyph(text: string): void {\n    this.letter = text[0] || ''\n  }\n\n  @action.bound changeSelect(isSelect: boolean): void {\n    this.selected = isSelect\n  }\n}\n\nexport default GlyphImage\n","import trimImageData, { TrimImageInfo } from './trimImageData'\n\ninterface TrimInfo extends TrimImageInfo {\n  canvas: HTMLCanvasElement\n}\n\nexport default function getTrimImageInfo(\n  image: HTMLImageElement,\n  threshold = 10,\n): TrimInfo {\n  const width = image.naturalWidth\n  const height = image.naturalHeight\n\n  const canvas = document.createElement('canvas')\n  canvas.width = width\n  canvas.height = height\n  const ctx = canvas.getContext('2d') as CanvasRenderingContext2D\n  ctx.drawImage(image, 0, 0)\n  const imageData = ctx.getImageData(0, 0, width, height)\n  const trimInfo = trimImageData(imageData, threshold)\n  canvas.width = trimInfo.width\n  canvas.height = trimInfo.height\n  ctx.drawImage(image, trimInfo.trimOffsetLeft, trimInfo.trimOffsetTop)\n\n  return {\n    canvas,\n    ...trimInfo,\n  }\n}\n","import { observable, action, computed } from 'mobx'\nimport { deepObserve } from 'mobx-utils'\nimport { cancel, request } from 'requestidlecallback'\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport RectanglePacker from 'worker-loader?filename=static/js/RectanglePacker.[hash].worker.js!src/workers/RectanglePacker.worker'\n\nimport Ui from './base/ui'\nimport Style from './base/style'\nimport Layout from './base/layout'\nimport Metric from './base/metric'\nimport GlyphFont from './base/glyphFont'\nimport GlyphImage, { FileInfo } from './base/glyphImage'\nimport { GlyphType } from './base/glyphBase'\n\ninterface TextRectangle {\n  width: number\n  height: number\n  x: number\n  y: number\n  letter: string\n  type: GlyphType\n}\n\nclass Project {\n  @observable name = 'Unnamed'\n\n  id: number\n\n  worker: RectanglePacker | null = null\n\n  packStart = 0\n\n  packTimer = 0\n\n  idleId = 0\n\n  @observable isPacking = false\n\n  @observable text =\n    '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!№;%:?*()_+-=.,/|\"\\'@#$^&{}[]'\n\n  @observable.shallow glyphs: Map<string, GlyphFont> = new Map()\n\n  @observable.shallow glyphImages: GlyphImage[] = []\n\n  @observable.ref style: Style\n\n  @observable.ref layout: Layout\n\n  @observable.ref globalAdjustMetric: Metric\n\n  @observable.ref packCanvas: HTMLCanvasElement | null = null\n\n  @observable.ref ui: Ui = new Ui()\n\n  constructor(project: Partial<Project> = {}) {\n    this.id = project.id || Date.now()\n    this.name = project.name || 'Unnamed'\n    this.text = project.text || this.text\n    this.ui = new Ui(project.ui)\n    this.style = new Style(project.style)\n    this.layout = new Layout(project.layout)\n    this.globalAdjustMetric = new Metric(project.globalAdjustMetric)\n\n    if (project.glyphs) {\n      project.glyphs.forEach((value, key) => {\n        this.glyphs.set(key, new GlyphFont(value, this.style))\n      })\n    }\n\n    project.glyphImages?.forEach((img) => {\n      console.log(img)\n      this.glyphImages.push(new GlyphImage(img))\n    })\n\n    if (!this.glyphs.has(' '))\n      this.glyphs.set(' ', new GlyphFont({ letter: ' ' }, this.style))\n\n    this.addGlyphs(project.text || '')\n    this.addAutoRun()\n    this.pack()\n  }\n\n  @computed get glyphList(): (GlyphFont | GlyphImage)[] {\n    const obj: { [key: string]: GlyphImage } = {}\n\n    this.glyphImages.forEach((glyph) => {\n      if (glyph.letter && glyph.selected) {\n        obj[glyph.letter] = glyph\n      }\n    })\n\n    return ` ${this.text}`.split('').map((letter) => {\n      if (obj[letter]) return obj[letter]\n      return this.glyphs.get(letter) as GlyphFont\n    })\n  }\n\n  @computed get rectangleList(): TextRectangle[] {\n    const { padding, spacing } = this.layout\n    return this.glyphList.map((glyph) => {\n      const isUnEmpty = !!(glyph.width && glyph.height)\n      return {\n        letter: glyph.letter,\n        type: glyph.type,\n        width: isUnEmpty ? glyph.width + padding * 2 + spacing : 0,\n        height: isUnEmpty ? glyph.height + padding * 2 + spacing : 0,\n        x: 0,\n        y: 0,\n      }\n    })\n  }\n\n  @action.bound pack(): void {\n    if (this.idleId) return\n    if (this.worker) this.worker.terminate()\n    this.isPacking = true\n    this.worker = new RectanglePacker()\n    const packList = this.rectangleList.sort((a, b) => b.height - a.height)\n\n    this.worker.addEventListener(\n      'message',\n      action('PackerWorkerCallback', (messageEvent) => {\n        const { data } = messageEvent\n        const imgList = this.glyphImages\n        let maxWidth = 0\n        let maxHeight = 0\n        ;(data as TextRectangle[]).forEach((rectangle) => {\n          const { letter, x, y, type, width, height } = rectangle\n          let glyph: GlyphFont | GlyphImage | undefined\n\n          if (type === 'image') {\n            glyph = imgList.find((gi) => {\n              if (gi && gi.letter === letter) return true\n              return false\n            })\n          }\n\n          if (!glyph) {\n            glyph = this.glyphs.get(letter)\n          }\n\n          if (glyph) {\n            glyph.x = x || 0\n            glyph.y = y || 0\n          }\n\n          maxWidth = Math.max(maxWidth, x + width)\n          maxHeight = Math.max(maxHeight, y + height)\n        })\n\n        this.ui.setSize(\n          maxWidth - this.layout.spacing,\n          maxHeight - this.layout.spacing,\n        )\n\n        this.isPacking = false\n        this.worker?.terminate()\n        this.worker = null\n      }),\n      false,\n    )\n\n    this.worker.postMessage(\n      packList.filter(({ width, height }) => !!(width && height)),\n    )\n  }\n\n  @action.bound packStyle(): void {\n    this.isPacking = true\n    if (this.worker) {\n      this.worker.terminate()\n      this.worker = null\n    }\n    cancel(this.idleId)\n\n    const tasks: GlyphFont[] = []\n\n    this.glyphs.forEach((glyph) => {\n      tasks.push(glyph)\n    })\n\n    const runTasks = () => {\n      this.idleId = request((deadline) => {\n        const tr = deadline.timeRemaining()\n        const start = Date.now()\n        while (tasks.length && tr - (Date.now() - start) > -100) {\n          // while (tasks.length) {\n          const glyph = tasks.shift()\n          if (glyph) glyph.setGlyphInfo(this.style)\n        }\n\n        if (tasks.length) {\n          runTasks()\n        } else {\n          this.idleId = 0\n          this.pack()\n        }\n      })\n    }\n\n    runTasks()\n  }\n\n  @action.bound throttlePack(): void {\n    if (this.idleId) return\n    window.clearTimeout(this.packTimer)\n    if (Date.now() - this.packStart > 500) {\n      Promise.resolve().then(this.pack)\n    } else {\n      this.packTimer = window.setTimeout(() => {\n        this.pack()\n      }, 500)\n    }\n    this.packStart = Date.now()\n  }\n\n  addAutoRun(): void {\n    const isName = (obj: { name?: unknown }, name: string): boolean =>\n      !!(obj.name && obj.name === name)\n\n    deepObserve(this.glyphs, () => {\n      this.throttlePack()\n    })\n\n    deepObserve(this.glyphImages, () => {\n      this.throttlePack()\n    })\n\n    deepObserve(this.layout, (change) => {\n      if (isName(change, 'power')) return\n      this.throttlePack()\n    })\n\n    deepObserve(this.style, (change) => {\n      if (isName(change, 'bgColor') || isName(change, 'lineHeight')) return\n      this.packStyle()\n    })\n  }\n\n  @action.bound setText(str: string): void {\n    const oldText = this.text\n    this.text = str.replace(/\\s/gm, '')\n    this.addGlyphs(oldText)\n  }\n\n  @action.bound addGlyphs(oldText = ''): void {\n    const currentList = Array.from(new Set(this.text.split('')))\n    const oldList = Array.from(new Set(oldText.split('')))\n    this.text = currentList.join('')\n    const diffList = oldText\n      ? Array.from(new Set(currentList.concat(oldList))).filter(\n          (t) => !(currentList.includes(t) && oldList.includes(t)),\n        )\n      : currentList\n\n    if (!diffList.length) return\n\n    diffList.forEach((letter) => {\n      if (currentList.includes(letter)) {\n        this.glyphs.set(letter, new GlyphFont({ letter }, this.style))\n      } else {\n        // in diff\n        this.glyphs.delete(letter)\n      }\n    })\n  }\n\n  @action.bound addImages<T extends FileInfo>(list: T[]): void {\n    Promise.all(\n      list.map((img) => {\n        const glyphImage = new GlyphImage(img)\n        this.glyphImages.push(glyphImage)\n        return glyphImage.initImage()\n      }),\n    ).then(this.pack)\n  }\n\n  @action.bound removeImage(image: GlyphImage): void {\n    const idx = this.glyphImages.indexOf(image)\n    if (idx > -1) this.glyphImages.splice(idx, 1)\n  }\n\n  @action.bound setCanvas(canvas: HTMLCanvasElement): void {\n    this.packCanvas = canvas\n  }\n\n  @action.bound setName(name: string): void {\n    this.name = name || this.name\n  }\n}\n\nexport default Project\n","import { action, observable, runInAction, computed } from 'mobx'\n\nimport Project from './project'\n\nclass Workspace {\n  @observable activeId = 0\n\n  @observable.shallow projectList: Map<number, Project> = new Map()\n\n  constructor() {\n    runInAction(() => {\n      this.activeId = Date.now()\n      const project = new Project({ id: this.activeId })\n      this.projectList.set(project.id, project)\n    })\n  }\n\n  @computed get currentProject(): Project {\n    return this.projectList.get(this.activeId) as Project\n  }\n\n  @computed get namedList(): { id: number; name: string }[] {\n    const list: { id: number; name: string }[] = []\n    this.projectList.forEach((value) => {\n      list.push({\n        id: value.id,\n        name: value.name,\n      })\n    })\n    return list\n  }\n\n  @action.bound selectProject(id: number): void {\n    if (this.projectList.has(id)) this.activeId = id\n  }\n\n  @action.bound removeProject(id: number): void {\n    const list = this.namedList.filter((item) => item.id !== id)\n    if (list.length === 0) return\n    this.activeId = list[0].id\n    this.projectList.delete(id)\n  }\n\n  @action.bound addProject(p: Partial<Project> = {}): void {\n    if (p.id && this.projectList.has(p.id)) {\n      this.activeId = p.id\n      return\n    }\n    if (!p.name) {\n      p.name = 'Unnamed'\n      const namedList: number[] = []\n      this.projectList.forEach((item) => {\n        const named = item.name.match(/^Unnamed-?(\\d+)?$/)\n        if (named) {\n          namedList.push(Number(named[1]) || 0)\n        }\n      })\n      if (namedList.length > 0) {\n        p.name += `-${Math.max(...namedList) + 1}`\n      }\n    }\n\n    const project = new Project(p)\n    this.projectList.set(project.id, project)\n    this.activeId = project.id\n  }\n\n  @action.bound setProjectName(name: string, value: number): void {\n    const project = this.projectList.get(value)\n    if (project) {\n      project.setName(name)\n    }\n  }\n}\n\nexport default Workspace\n","import { configure } from 'mobx'\n\nimport Ui from './ui'\nimport Workspace from './workspace'\n\nconfigure({\n  enforceActions: 'always',\n  computedRequiresReaction: true,\n})\n\nexport interface Store {\n  ui: Ui\n  workspace: Workspace\n}\n\nexport default function createStore(): Store {\n  return { ui: new Ui(), workspace: new Workspace() }\n}\n\nexport type TStore = ReturnType<typeof createStore>\n\nexport { default as Ui } from './ui'\nexport { default as Project } from './project'\nexport { default as Workspace } from './workspace'\n\nexport * from './base'\n","import { ComponentsProps } from '@material-ui/core/styles/props'\n\nconst props: ComponentsProps = {\n  MuiButton: {\n    size: 'small',\n  },\n  MuiButtonBase: {\n    disableRipple: true,\n  },\n  MuiFilledInput: {\n    margin: 'dense',\n  },\n  MuiFormControl: {\n    margin: 'dense',\n  },\n  MuiFormHelperText: {\n    margin: 'dense',\n  },\n  MuiIconButton: {\n    size: 'small',\n  },\n  MuiInputBase: {\n    margin: 'dense',\n  },\n  MuiInputLabel: {\n    margin: 'dense',\n  },\n  MuiListItem: {\n    dense: true,\n  },\n  MuiOutlinedInput: {\n    margin: 'dense',\n  },\n  MuiFab: {\n    size: 'small',\n  },\n  MuiTable: {\n    size: 'small',\n  },\n  MuiTextField: {\n    margin: 'dense',\n  },\n  MuiToolbar: {\n    variant: 'dense',\n  },\n}\n\nexport default props\n","import { Overrides } from '@material-ui/core/styles/overrides'\n\nconst overrides: Overrides = {\n  MuiCssBaseline: {\n    '@global': {\n      html: {\n        fontSize: '14px',\n      },\n      'input::-webkit-inner-spin-button': {\n        marginLeft: '10px',\n      },\n      'input:enabled:read-write:-webkit-any(:focus,:hover)::-webkit-inner-spin-button': {\n        opacity: 0.3,\n      },\n      '::-webkit-scrollbar': {\n        width: '4px',\n        height: '4px',\n      },\n      '::-webkit-scrollbar-thumb': {\n        background: 'rgba(255, 255, 255, 0.2)',\n      },\n      '::-webkit-scrollbar-track': {\n        background: 'rgba(0, 0, 0, 0.1)',\n      },\n    },\n  },\n  MuiInputBase: {\n    input: {\n      '&[type=number]': {\n        textAlign: 'right',\n      },\n    },\n  },\n}\n\nexport default overrides\n","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles'\n\nimport props from './props'\nimport overrides from './overrides'\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: { main: '#444' },\n    secondary: { main: '#424242' },\n    background: {\n      paper: 'rgb(37, 37, 37)',\n      default: 'rgb(30, 30, 30)',\n      activityBar: 'rgb(51, 51, 51)',\n      titleBar: 'rgb(50, 50, 50)',\n      sidebar: 'rgb(37, 37, 37)',\n    },\n    common: {\n      black: 'rgb(30,30,30)',\n      white: 'rgb(204,204,204)',\n    },\n    action: {\n      hover: 'rgba(255, 255, 255, 0.1)',\n    },\n  },\n  bgPixel: {\n    backgroundColor: '#fff',\n    backgroundImage: `\n    linear-gradient(45deg, #ccc 25%, transparent 0, transparent 75%, #ccc 0),\n    linear-gradient(45deg, #ccc 25%, transparent 0, transparent 75%, #ccc 0)`,\n    backgroundSize: '8px 8px',\n    backgroundPosition: '0 0, 4px 4px',\n    backgroundRepeat: 'repeat',\n  },\n  spacing: 4,\n  typography: { fontSize: 13 },\n  transitions: {\n    create: () => 'none',\n  },\n  shape: { borderRadius: 0 },\n  props,\n  overrides,\n})\n\nexport default responsiveFontSizes(theme)\n","import { useContext } from 'react'\nimport { MobXProviderContext } from 'mobx-react'\nimport {\n  TStore,\n  Workspace,\n  Layout,\n  Project,\n  Style,\n  Font,\n  ProjectUi,\n  FontStyleConfig,\n} from '.'\n\nexport default function useStores(): TStore {\n  return useContext(MobXProviderContext) as TStore\n}\n\nexport function useWorkspace(): Workspace {\n  const store = useStores()\n  return store.workspace\n}\n\nexport function useLayout(): Layout {\n  const store = useStores()\n  return store.workspace.currentProject.layout\n}\n\nexport function useProject(): Project {\n  const store = useStores()\n  return store.workspace.currentProject\n}\n\nexport function useStyle(): Style {\n  const { style } = useProject()\n  return style\n}\n\nexport function useFont(): Font {\n  const { font } = useStyle()\n  return font\n}\n\nexport function useFill(): FontStyleConfig {\n  const { fill } = useStyle()\n  return fill\n}\n\nexport function useProjectUi(): ProjectUi {\n  const { ui } = useProject()\n  return ui\n}\n","export default function readFile(\n  file: File,\n): Promise<string | ArrayBuffer | null> {\n  if (file.arrayBuffer) return file.arrayBuffer()\n\n  return new Promise((resolve) => {\n    const reader = new FileReader()\n    reader.readAsArrayBuffer(file)\n    reader.onload = (e) => {\n      resolve(e?.target?.result || null)\n    }\n  })\n}\n","import React, { useState, FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\n\nimport Button from '@material-ui/core/Button'\nimport FontDownload from '@material-ui/icons/FontDownload'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport { useFont } from 'src/store/hooks'\nimport readFile from 'src/utils/readFile'\n\nconst FontFamily: FunctionComponent<unknown> = () => {\n  const [loading, setLoading] = useState(false)\n  const { setFont } = useFont()\n\n  const hanleUploadFile = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ): void => {\n    if (\n      !event ||\n      !event.target ||\n      !event.target.files ||\n      !event.target.files[0]\n    )\n      return\n\n    const file = event.target.files[0]\n    const ext = file.name.match(/\\.([A-Z0-9]+)$/i)\n    if (!ext) return\n\n    setLoading(true)\n\n    readFile(file).then((arrBuf) => {\n      if (!(arrBuf instanceof ArrayBuffer)) {\n        setLoading(false)\n        return\n      }\n\n      setFont(arrBuf)\n        .then(() => setLoading(false))\n        .catch((e) => {\n          setLoading(false)\n          window.alert(e.message)\n        })\n    })\n  }\n\n  return (\n    <Button\n      component='label'\n      variant='contained'\n      color='primary'\n      fullWidth\n      size='large'\n      startIcon={\n        loading ? (\n          <CircularProgress size={22} color='inherit' />\n        ) : (\n          <FontDownload />\n        )\n      }\n      disabled={loading}\n    >\n      Select Font File\n      <input\n        hidden\n        type='file'\n        onChange={hanleUploadFile}\n        accept='.ttf,.otf,.woff'\n      />\n    </Button>\n  )\n}\n\nexport default observer(FontFamily)\n","import React, {\n  ReactNode,\n  FunctionComponent,\n  PropsWithChildren,\n  ElementType,\n} from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\n\ninterface GridInputProps {\n  before?: ReactNode\n  after?: ReactNode\n  component?: ElementType\n  childrenWidth?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8\n}\n\nconst GridInput: FunctionComponent<GridInputProps> = (\n  props: PropsWithChildren<GridInputProps>,\n): JSX.Element => {\n  const { before, children, component, after, childrenWidth } = props\n  return (\n    <Grid\n      component={component || 'label'}\n      container\n      spacing={2}\n      wrap='nowrap'\n      justify='center'\n      alignItems='center'\n    >\n      <Grid item xs={4}>\n        {typeof before === 'object' ? (\n          before\n        ) : (\n          <Typography noWrap align='right'>\n            {before}\n          </Typography>\n        )}\n      </Grid>\n      <Grid item xs={childrenWidth || 5}>\n        {children}\n      </Grid>\n      <Grid item xs>\n        {typeof after === 'object' ? (\n          after\n        ) : (\n          <Typography noWrap variant='caption'>\n            {after}\n          </Typography>\n        )}\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default GridInput\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Input from '@material-ui/core/Input'\n\nimport GridInput from 'src/app/components/GridInput/GridInput'\n\nimport { useFont } from 'src/store/hooks'\n\nconst FontSize: FunctionComponent<unknown> = () => {\n  const { size, setSize } = useFont()\n\n  const handleInput = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ): void => {\n    setSize(Number(event.target.value))\n  }\n\n  return (\n    <GridInput before='Font Size:' after='px'>\n      <Input\n        value={size}\n        fullWidth\n        type='number'\n        inputProps={{ min: 1 }}\n        onChange={handleInput}\n      />\n    </GridInput>\n  )\n}\n\nexport default observer(FontSize)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Input from '@material-ui/core/Input'\n\nimport GridInput from 'src/app/components/GridInput/GridInput'\n\nimport { useFont } from 'src/store/hooks'\n\nconst LineHeight: FunctionComponent<unknown> = () => {\n  const { lineHeight, setLineHeight } = useFont()\n\n  const handleInput = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ): void => {\n    setLineHeight(Number(event.target.value))\n  }\n\n  return (\n    <GridInput before='Line Height:' after='multiple'>\n      <Input\n        value={lineHeight}\n        fullWidth\n        type='number'\n        inputProps={{ min: 0.5, step: 0.1 }}\n        onChange={handleInput}\n      />\n    </GridInput>\n  )\n}\n\nexport default observer(LineHeight)\n","import React, { FunctionComponent } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\n\nimport FontFamily from './FontFamily'\nimport FontSize from './FontSize'\nimport LineHeight from './LineHeight'\n\nconst Font: FunctionComponent<unknown> = () => {\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <Typography>Font</Typography>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <FontFamily />\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <FontSize />\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <LineHeight />\n      </Box>\n    </>\n  )\n}\n\nexport default Font\n","import React, { useState, FunctionComponent } from 'react'\n\nimport Box from '@material-ui/core/Box'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\n\nimport { observer } from 'mobx-react'\n\nimport { useProject } from 'src/store/hooks'\n\nconst Glyphs: FunctionComponent<unknown> = () => {\n  const { text, setText } = useProject()\n  const [isIME, setIsIME] = useState(false)\n  const [inputText, setInputText] = useState(text)\n\n  const handleInput = (event: React.ChangeEvent<HTMLTextAreaElement>): void => {\n    const { value } = event.target\n    const str = Array.from(new Set(value.split(''))).join('')\n    if (isIME) {\n      setInputText(value)\n    } else {\n      setInputText(str)\n      if (str !== text) setText(str)\n    }\n  }\n\n  const handleCompositionEnd = (): void => {\n    setIsIME(false)\n    const str = Array.from(new Set(inputText.split(''))).join('')\n    setInputText(str)\n    if (str !== text) setText(str)\n  }\n\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <Typography>Glyphs</Typography>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <TextField\n          margin='none'\n          value={isIME ? inputText : text}\n          fullWidth\n          multiline\n          rows={4}\n          variant='outlined'\n          inputProps={{ spellCheck: false }}\n          onChange={handleInput}\n          onCompositionStart={() => setIsIME(true)}\n          onCompositionEnd={handleCompositionEnd}\n        />\n      </Box>\n    </>\n  )\n}\n\nexport default observer(Glyphs)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Input from '@material-ui/core/Input'\n\nimport GridInput from 'src/app/components/GridInput'\n\nimport { useLayout } from 'src/store/hooks'\n\nconst Padding: FunctionComponent<unknown> = () => {\n  const { padding, setPadding } = useLayout()\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setPadding(Number(event.target.value))\n  }\n\n  return (\n    <GridInput before='Padding:' after='px'>\n      <Input\n        value={padding}\n        fullWidth\n        type='number'\n        inputProps={{ min: 0 }}\n        onChange={handleInput}\n      />\n    </GridInput>\n  )\n}\n\nexport default observer(Padding)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Input from '@material-ui/core/Input'\n\nimport { useLayout } from 'src/store/hooks'\n\nimport GridInput from 'src/app/components/GridInput'\n\nconst Spacing: FunctionComponent<unknown> = () => {\n  const { spacing, setSpacing } = useLayout()\n\n  return (\n    <GridInput before='Spacing:' after='px'>\n      <Input\n        value={spacing}\n        fullWidth\n        type='number'\n        inputProps={{ min: 0 }}\n        onChange={(e) => setSpacing(Number(e.target.value))}\n      />\n    </GridInput>\n  )\n}\n\nexport default observer(Spacing)\n","import React, { FunctionComponent } from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\n\nimport Padding from './Padding'\nimport Spacing from './Spacing'\n// import Power from './Power'\n\nconst PackConfig: FunctionComponent<unknown> = () => {\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <Typography>Layout</Typography>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <Padding />\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <Spacing />\n      </Box>\n      {/* <Box paddingX={2} marginY={4}>\n        <Power />\n      </Box> */}\n    </>\n  )\n}\n\nexport default PackConfig\n","import React, { FunctionComponent } from 'react'\nimport Box from '@material-ui/core/Box'\nimport Input from '@material-ui/core/Input'\nimport GridInput from 'src/app/components/GridInput'\n\ninterface SetHandle {\n  (value: number): void\n}\n\ninterface FormAdjustMetricProps {\n  xAdvance: number\n  xOffset: number\n  yOffset: number\n  setXAdvance: SetHandle\n  setXOffset: SetHandle\n  setYOffset: SetHandle\n}\n\nconst FormAdjustMetric: FunctionComponent<FormAdjustMetricProps> = (\n  props: FormAdjustMetricProps,\n) => {\n  const {\n    xAdvance,\n    xOffset,\n    yOffset,\n    setXAdvance,\n    setXOffset,\n    setYOffset,\n  } = props\n\n  const getHandle = (handleSet: SetHandle) => (\n    e: React.ChangeEvent<HTMLInputElement>,\n  ) => handleSet(Number(e.target.value))\n\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <GridInput before='xAdvance:' after='px'>\n          <Input\n            value={xAdvance}\n            fullWidth\n            type='number'\n            onChange={getHandle(setXAdvance)}\n          />\n        </GridInput>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <GridInput before='xOffset:' after='px'>\n          <Input\n            value={xOffset}\n            fullWidth\n            type='number'\n            onChange={getHandle(setXOffset)}\n          />\n        </GridInput>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <GridInput before='yOffset:' after='px'>\n          <Input\n            value={yOffset}\n            fullWidth\n            type='number'\n            onChange={getHandle(setYOffset)}\n          />\n        </GridInput>\n      </Box>\n    </>\n  )\n}\n\nexport default FormAdjustMetric\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\n\nimport { useProject } from 'src/store/hooks'\n\nimport FormAdjustMetric from 'src/app/layout/common/FormAdjustMetric'\n\nconst GlobalMetric: FunctionComponent<unknown> = () => {\n  const { globalAdjustMetric } = useProject()\n  const {\n    xAdvance,\n    xOffset,\n    yOffset,\n    setXAdvance,\n    setXOffset,\n    setYOffset,\n  } = globalAdjustMetric\n\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <Typography>Global Metric Adjustment</Typography>\n      </Box>\n      <FormAdjustMetric\n        xAdvance={xAdvance}\n        xOffset={xOffset}\n        yOffset={yOffset}\n        setXAdvance={setXAdvance}\n        setXOffset={setXOffset}\n        setYOffset={setYOffset}\n      />\n    </>\n  )\n}\n\nexport default observer(GlobalMetric)\n","import React, { FunctionComponent } from 'react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Divider from '@material-ui/core/Divider'\nimport Typography from '@material-ui/core/Typography'\n\nimport Font from './modules/Font'\nimport Glyphs from './modules/Glyphs'\nimport PackConfig from './modules/PackConfig'\nimport GlobalMetric from './modules/GlobalMetric'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      overflow: 'hidden',\n      width: '256px',\n    },\n  }),\n)\n\nconst LeftBar: FunctionComponent<unknown> = () => {\n  const classes = useStyles()\n  return (\n    <Box\n      bgcolor='background.sidebar'\n      display='flex'\n      flexDirection='column'\n      overflow='hidden'\n      className={classes.root}\n    >\n      <Box bgcolor='background.sidebar' boxShadow={2} padding={2}>\n        <Typography variant='subtitle2'>Font Config</Typography>\n      </Box>\n      <Box flex={1} height={0} overflow='hidden auto'>\n        <Glyphs />\n        <Divider />\n        <Font />\n        <Divider />\n        <PackConfig />\n        <Divider />\n        <GlobalMetric />\n      </Box>\n    </Box>\n  )\n}\n\nexport default LeftBar\n","export default function formatStr(\n  str: string,\n  obj: Record<string, unknown>,\n): string {\n  return str.replace(/\\$\\w+\\$/gi, (matchs: string): string => {\n    const returns = obj[matchs.replace(/\\$/g, '')]\n    return `${returns}` === 'undefined' ? '' : `${returns}`\n  })\n}\n","import formatStr from 'src/utils/formatStr'\n\nimport { BMFont } from './toOutputInfo'\n\nconst TEMP_INFO = `<info face=\"$face$\" size=\"$size$\" bold=\"$bold$\" italic=\"$italic$\" charset=\"$charset$\" unicode=\"$unicode$\" stretchH=\"$stretchH$\" smooth=\"$smooth$\" aa=\"$aa$\" padding=\"$padding$\" spacing=\"$spacing$\" />`\nconst TEMP_COMMON = `<common lineHeight=\"$lineHeight$\" base=\"$base$\" scaleW=\"$scaleW$\" scaleH=\"$scaleH$\" pages=\"$pages$\" packed=\"$packed$\" />`\nconst TEMP_PAGE = `<page id=\"$id$\" file=\"$file$\" />`\nconst TEMP_CHARS = `<chars count=\"$count$\" />`\nconst TEMP_CHAR = `<char id=\"$id$\" x=\"$x$\" y=\"$y$\" width=\"$width$\" height=\"$height$\" xoffset=\"$xoffset$\" yoffset=\"$yoffset$\" xadvance=\"$xadvance$\" page=\"$page$\" chnl=\"$chnl$\" />`\nconst TEMP_KERNINGS = `<kernings count=\"$count$\" />`\nconst TEMP_KERNING = `<kerning first=\"$first$\" second=\"$second$\" amount=\"$amount$\" />`\n// http://www.angelcode.com/products/bmfont/doc/file_format.html\nexport default function storeToXml(bmfont: BMFont): string {\n  const { info, common, pages, chars, kernings } = bmfont\n\n  const parser = new DOMParser()\n  const xmlDOM = document.implementation.createDocument('', 'font', null)\n\n  const infoDoc = parser.parseFromString(formatStr(TEMP_INFO, info), 'text/xml')\n  xmlDOM.documentElement.appendChild(infoDoc.childNodes[0])\n\n  const commonDoc = parser.parseFromString(\n    formatStr(TEMP_COMMON, common),\n    'text/xml',\n  )\n  xmlDOM.documentElement.appendChild(commonDoc.childNodes[0])\n\n  const pagesDoc = parser.parseFromString(\n    `<pages>${pages.map((p) => formatStr(TEMP_PAGE, p))}</pages>`,\n    'text/xml',\n  )\n  xmlDOM.documentElement.appendChild(pagesDoc.childNodes[0])\n\n  const charsDoc = parser.parseFromString(\n    formatStr(TEMP_CHARS, chars),\n    'text/xml',\n  )\n\n  chars.list.forEach((char) => {\n    const charDoc = parser.parseFromString(\n      formatStr(TEMP_CHAR, char),\n      'text/xml',\n    )\n    charsDoc.childNodes[0].appendChild(charDoc.childNodes[0])\n  })\n\n  xmlDOM.documentElement.appendChild(charsDoc.childNodes[0])\n\n  if (kernings.count) {\n    const kerningsDoc = parser.parseFromString(\n      formatStr(TEMP_KERNINGS, kernings),\n      'text/xml',\n    )\n\n    kernings.list.forEach((kerning) => {\n      const kerningDoc = parser.parseFromString(\n        formatStr(TEMP_KERNING, kerning),\n        'text/xml',\n      )\n      kerningsDoc.childNodes[0].appendChild(kerningDoc.childNodes[0])\n    })\n\n    xmlDOM.documentElement.appendChild(kerningsDoc.childNodes[0])\n  }\n\n  return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>${new XMLSerializer().serializeToString(\n    xmlDOM,\n  )}`\n}\n","import formatStr from 'src/utils/formatStr'\n\nimport { BMFont } from './toOutputInfo'\n\nconst TEMP_INFO = `Font.info = {\\n\\tface = \"$face$\",\\n\\tfile = \"$file$\",\\n\\tsize = $size$,\\n\\tbold = $bold$,\\n\\titalic = $italic$,\\n\\tcharset = $charset$\\n\\tunicode = $unicode$,\\n\\tstretchH = $stretchH$,\\n\\tsmooth = $smooth$,\\n\\taa = $aa$,\\n\\tpadding = {$padding$},\\n\\tspacing = $spacing$,\\n\\tcharsCount = $charsCount$,\\n\\tkerningsCounts = $kerningsCounts$\\n}\\n\\n`\nconst TEMP_COMMON = `Font.common = {\\n\\tlineHeight = $lineHeight$,\\n\\tbase = $base$,\\n\\tscaleW = $scaleW$,\\n\\tscaleH = $scaleH$,\\n\\tpages = $pages$,\\n\\tpacked = $packed$\\n}\\n\\n`\nconst TEMP_PAGE = `\\t{ id=$id$, file=\"$file$\" }`\nconst TEMP_CHARS = `Font.chars = {\\n`\nconst TEMP_CHAR = `\\t{\\n\\t\\tid = $id$,\\n\\t\\tx = $x$,\\n\\t\\ty = $y$,\\n\\t\\twidth = $width$,\\n\\t\\theight = $height$,\\n\\t\\txoffset = $xoffset$,\\n\\t\\tyoffset = $yoffset$,\\n\\t\\txadvance = $xadvance$,\\n\\t\\tpage = 0,\\n\\t\\tchnl = 15\\n\\t}`\nconst TEMP_KERNINGS = `Font.kerning = {\\n`\nconst TEMP_KERNING = `\\t{first = $first$, second = $second$, amount = $amount$}`\n\nexport default function getLuaString(bmfont: BMFont): string {\n  const { info, common, pages, chars, kernings } = bmfont\n\n  let str = ''\n\n  str += formatStr(TEMP_INFO, {\n    ...info,\n    charset: info.charset || '\"\"',\n    charsCount: chars.count,\n    kerningsCounts: kernings.count,\n    file: pages[0].file,\n  })\n  str += formatStr(TEMP_COMMON, common)\n\n  str += `Font.pages = {\\n`\n  str += pages.map((p) => formatStr(TEMP_PAGE, p)).join(',\\n')\n  str += '\\n}\\n\\n'\n\n  str += TEMP_CHARS\n  str += chars.list.map((char) => formatStr(TEMP_CHAR, char)).join(',\\n')\n  str += '\\n}\\n\\n'\n\n  str += TEMP_KERNINGS\n  str += kernings.list\n    .map((kerning) => formatStr(TEMP_KERNING, kerning))\n    .join(',\\n')\n  str += '\\n}'\n\n  return `local Font = {}\n\n${str.replace(/\\t/g, '    ')}\n\nreturn Font\n`\n}\n","import formatStr from 'src/utils/formatStr'\n\nimport { BMFont } from './toOutputInfo'\n\nconst TEMP_INFO = `info face=\"$face$\" size=$size$ bold=$bold$ italic=$italic$ charset=$charset$ unicode=$unicode$ stretchH=$stretchH$ smooth=$smooth$ aa=$aa$ padding=$padding$ spacing=$spacing$\\n`\nconst TEMP_COMMON = `common lineHeight=$lineHeight$ base=$base$ scaleW=$scaleW$ scaleH=$scaleH$ pages=$pages$ packed=$packed$\\n`\nconst TEMP_PAGE = `page id=$id$ file=\"$file$\"\\n`\nconst TEMP_CHARS = `chars count=$count$\\n`\nconst TEMP_CHAR = `char id=$id$ x=$x$ y=$y$ width=$width$ height=$height$ xoffset=$xoffset$ yoffset=$yoffset$ xadvance=$xadvance$ page=$page$ chnl=$chnl$\\n`\nconst TEMP_KERNINGS = `kernings count=$count$\\n`\nconst TEMP_KERNING = `kerning first=$first$ second=$second$ amount=$amount$\\n`\n\nexport default function getTextString(bmfont: BMFont): string {\n  const { info, common, pages, chars, kernings } = bmfont\n\n  let str = ''\n\n  str += formatStr(TEMP_INFO, { ...info, charset: info.charset || '\"\"' })\n\n  str += formatStr(TEMP_COMMON, common)\n\n  pages.forEach((p) => {\n    str += formatStr(TEMP_PAGE, p)\n  })\n\n  str += formatStr(TEMP_CHARS, chars)\n\n  chars.list.forEach((char) => {\n    str += formatStr(TEMP_CHAR, char)\n  })\n\n  if (kernings.count) {\n    str += formatStr(TEMP_KERNINGS, kernings)\n\n    kernings.list.forEach((kerning) => {\n      str += formatStr(TEMP_KERNING, kerning)\n    })\n  }\n\n  return str\n}\n","import { Project } from 'src/store'\n\ninterface BMFontInfo extends Record<string, unknown> {\n  face: string\n  size: number\n  bold: number\n  italic: number\n  charset: string\n  unicode: number\n  stretchH: number\n  smooth: number\n  aa: number\n  padding: number[]\n  spacing: number[]\n}\n\ninterface BMFontCommon extends Record<string, unknown> {\n  lineHeight: number\n  base: number\n  scaleW: number\n  scaleH: number\n  pages: number\n  packed: number\n}\n\ninterface BMFontPage extends Record<string, unknown> {\n  id: number\n  file: string\n}\n\nexport interface BMFontChar extends Record<string, unknown> {\n  letter: string\n  id: number\n  source: HTMLImageElement | HTMLCanvasElement | null\n  x: number\n  y: number\n  width: number\n  height: number\n  xoffset: number\n  yoffset: number\n  xadvance: number\n  page: number\n  chnl: number\n}\n\ninterface BMFontChars extends Record<string, unknown> {\n  count: number\n  list: BMFontChar[]\n}\n\nexport interface BMFontKerning extends Record<string, unknown> {\n  first: number\n  second: number\n  amount: number\n}\n\ninterface BMFontKernings extends Record<string, unknown> {\n  count: number\n  list: BMFontKerning[]\n}\n\nexport interface BMFont {\n  info: BMFontInfo\n  common: BMFontCommon\n  pages: BMFontPage[]\n  chars: BMFontChars\n  kernings: BMFontKernings\n}\n\n// http://www.angelcode.com/products/bmfont/doc/file_format.html\nexport default function toOutputInfo(project: Project): BMFont {\n  const {\n    name,\n    style,\n    layout,\n    globalAdjustMetric,\n    glyphList,\n    ui: { width, height },\n  } = project\n  const { opentype, size } = style.font\n  let fontScale = 1\n  if (opentype) {\n    fontScale = (1 / opentype.unitsPerEm) * size\n  }\n  const info: BMFontInfo = {\n    face: style.font.family,\n    size: style.font.size,\n    bold: 0,\n    italic: 0,\n    charset: '',\n    unicode: 1,\n    stretchH: 100,\n    smooth: 1,\n    aa: 1,\n    padding: new Array(4).fill(layout.padding),\n    spacing: new Array(2).fill(layout.spacing),\n  }\n\n  const common: BMFontCommon = {\n    lineHeight: style.font.size,\n    base: style.font.size,\n    scaleW: width,\n    scaleH: height,\n    pages: 1,\n    packed: 0,\n  }\n\n  const pages: BMFontPage[] = [\n    {\n      id: 0,\n      file: `${name}.png`,\n    },\n  ]\n\n  const chars: BMFontChars = {\n    count: glyphList.length,\n    list: [],\n  }\n\n  const kernings: BMFontKernings = {\n    count: 0,\n    list: [],\n  }\n\n  glyphList.forEach((glyph) => {\n    const isUnEmpty = !!(glyph.width && glyph.height)\n    chars.list.push({\n      letter: glyph.letter,\n      id: glyph.letter.charCodeAt(0),\n      source: glyph.source,\n      x: glyph.x,\n      y: glyph.y,\n      width: isUnEmpty ? glyph.width + layout.padding * 2 : 0,\n      height: isUnEmpty ? glyph.height + layout.padding * 2 : 0,\n      xoffset:\n        globalAdjustMetric.xOffset +\n        glyph.adjustMetric.xOffset -\n        (isUnEmpty ? glyph.trimOffsetLeft : 0),\n      yoffset:\n        globalAdjustMetric.yOffset +\n        glyph.adjustMetric.yOffset -\n        (isUnEmpty ? glyph.trimOffsetTop : 0),\n      xadvance:\n        Math.ceil(glyph.fontWidth) +\n        globalAdjustMetric.xAdvance +\n        glyph.adjustMetric.xAdvance,\n      page: 0,\n      chnl: 15,\n    })\n    if (opentype) {\n      glyphList.forEach(({ letter }) => {\n        const amount = Math.round(\n          opentype.getKerningValue(\n            opentype.charToGlyphIndex(glyph.letter),\n            opentype.charToGlyphIndex(letter),\n          ) *\n            fontScale +\n            (glyph.kerning.get(letter) || 0),\n        )\n        if (amount) {\n          kernings.list.push({\n            first: glyph.letter.charCodeAt(0),\n            second: letter.charCodeAt(0),\n            amount,\n          })\n        }\n      })\n    } else {\n      glyph.kerning.forEach((amount, letter) => {\n        if (amount)\n          kernings.list.push({\n            first: glyph.letter.charCodeAt(0),\n            second: letter.charCodeAt(0),\n            amount,\n          })\n      })\n    }\n  })\n  kernings.count = kernings.list.length\n\n  chars.list.sort((a, b) => a.id - b.id)\n\n  return {\n    info,\n    common,\n    pages,\n    chars,\n    kernings,\n  }\n}\n","/* eslint-disable */\nimport * as $protobuf from 'protobufjs/minimal'\n\n// Common aliases\nconst $Reader = $protobuf.Reader,\n  $Writer = $protobuf.Writer,\n  $util = $protobuf.util\n\n// Exported root namespace\nconst $root = $protobuf.roots['default'] || ($protobuf.roots['default'] = {})\n\nexport const Metric = ($root.Metric = (() => {\n  /**\n   * Properties of a Metric.\n   * @exports IMetric\n   * @interface IMetric\n   * @property {number|null} [xAdvance] Metric xAdvance\n   * @property {number|null} [xOffset] Metric xOffset\n   * @property {number|null} [yOffset] Metric yOffset\n   */\n\n  /**\n   * Constructs a new Metric.\n   * @exports Metric\n   * @classdesc Represents a Metric.\n   * @implements IMetric\n   * @constructor\n   * @param {IMetric=} [properties] Properties to set\n   */\n  function Metric(properties) {\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * Metric xAdvance.\n   * @member {number} xAdvance\n   * @memberof Metric\n   * @instance\n   */\n  Metric.prototype.xAdvance = 0\n\n  /**\n   * Metric xOffset.\n   * @member {number} xOffset\n   * @memberof Metric\n   * @instance\n   */\n  Metric.prototype.xOffset = 0\n\n  /**\n   * Metric yOffset.\n   * @member {number} yOffset\n   * @memberof Metric\n   * @instance\n   */\n  Metric.prototype.yOffset = 0\n\n  /**\n   * Creates a new Metric instance using the specified properties.\n   * @function create\n   * @memberof Metric\n   * @static\n   * @param {IMetric=} [properties] Properties to set\n   * @returns {Metric} Metric instance\n   */\n  Metric.create = function create(properties) {\n    return new Metric(properties)\n  }\n\n  /**\n   * Encodes the specified Metric message. Does not implicitly {@link Metric.verify|verify} messages.\n   * @function encode\n   * @memberof Metric\n   * @static\n   * @param {IMetric} message Metric message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Metric.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (\n      message.xAdvance != null &&\n      Object.hasOwnProperty.call(message, 'xAdvance')\n    )\n      writer.uint32(/* id 1, wireType 0 =*/ 8).sint32(message.xAdvance)\n    if (\n      message.xOffset != null &&\n      Object.hasOwnProperty.call(message, 'xOffset')\n    )\n      writer.uint32(/* id 2, wireType 0 =*/ 16).sint32(message.xOffset)\n    if (\n      message.yOffset != null &&\n      Object.hasOwnProperty.call(message, 'yOffset')\n    )\n      writer.uint32(/* id 3, wireType 0 =*/ 24).sint32(message.yOffset)\n    return writer\n  }\n\n  /**\n   * Encodes the specified Metric message, length delimited. Does not implicitly {@link Metric.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof Metric\n   * @static\n   * @param {IMetric} message Metric message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Metric.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a Metric message from the specified reader or buffer.\n   * @function decode\n   * @memberof Metric\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {Metric} Metric\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Metric.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.Metric()\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.xAdvance = reader.sint32()\n          break\n        case 2:\n          message.xOffset = reader.sint32()\n          break\n        case 3:\n          message.yOffset = reader.sint32()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a Metric message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof Metric\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {Metric} Metric\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Metric.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a Metric message.\n   * @function verify\n   * @memberof Metric\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  Metric.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.xAdvance != null && message.hasOwnProperty('xAdvance'))\n      if (!$util.isInteger(message.xAdvance))\n        return 'xAdvance: integer expected'\n    if (message.xOffset != null && message.hasOwnProperty('xOffset'))\n      if (!$util.isInteger(message.xOffset)) return 'xOffset: integer expected'\n    if (message.yOffset != null && message.hasOwnProperty('yOffset'))\n      if (!$util.isInteger(message.yOffset)) return 'yOffset: integer expected'\n    return null\n  }\n\n  /**\n   * Creates a Metric message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof Metric\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {Metric} Metric\n   */\n  Metric.fromObject = function fromObject(object) {\n    if (object instanceof $root.Metric) return object\n    let message = new $root.Metric()\n    if (object.xAdvance != null) message.xAdvance = object.xAdvance | 0\n    if (object.xOffset != null) message.xOffset = object.xOffset | 0\n    if (object.yOffset != null) message.yOffset = object.yOffset | 0\n    return message\n  }\n\n  /**\n   * Creates a plain object from a Metric message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof Metric\n   * @static\n   * @param {Metric} message Metric\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  Metric.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.defaults) {\n      object.xAdvance = 0\n      object.xOffset = 0\n      object.yOffset = 0\n    }\n    if (message.xAdvance != null && message.hasOwnProperty('xAdvance'))\n      object.xAdvance = message.xAdvance\n    if (message.xOffset != null && message.hasOwnProperty('xOffset'))\n      object.xOffset = message.xOffset\n    if (message.yOffset != null && message.hasOwnProperty('yOffset'))\n      object.yOffset = message.yOffset\n    return object\n  }\n\n  /**\n   * Converts this Metric to JSON.\n   * @function toJSON\n   * @memberof Metric\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  Metric.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return Metric\n})())\n\nexport const GradientColor = ($root.GradientColor = (() => {\n  /**\n   * Properties of a GradientColor.\n   * @exports IGradientColor\n   * @interface IGradientColor\n   * @property {number|null} [id] GradientColor id\n   * @property {number|null} [offset] GradientColor offset\n   * @property {string|null} [color] GradientColor color\n   */\n\n  /**\n   * Constructs a new GradientColor.\n   * @exports GradientColor\n   * @classdesc Represents a GradientColor.\n   * @implements IGradientColor\n   * @constructor\n   * @param {IGradientColor=} [properties] Properties to set\n   */\n  function GradientColor(properties) {\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * GradientColor id.\n   * @member {number} id\n   * @memberof GradientColor\n   * @instance\n   */\n  GradientColor.prototype.id = 0\n\n  /**\n   * GradientColor offset.\n   * @member {number} offset\n   * @memberof GradientColor\n   * @instance\n   */\n  GradientColor.prototype.offset = 0\n\n  /**\n   * GradientColor color.\n   * @member {string} color\n   * @memberof GradientColor\n   * @instance\n   */\n  GradientColor.prototype.color = ''\n\n  /**\n   * Creates a new GradientColor instance using the specified properties.\n   * @function create\n   * @memberof GradientColor\n   * @static\n   * @param {IGradientColor=} [properties] Properties to set\n   * @returns {GradientColor} GradientColor instance\n   */\n  GradientColor.create = function create(properties) {\n    return new GradientColor(properties)\n  }\n\n  /**\n   * Encodes the specified GradientColor message. Does not implicitly {@link GradientColor.verify|verify} messages.\n   * @function encode\n   * @memberof GradientColor\n   * @static\n   * @param {IGradientColor} message GradientColor message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  GradientColor.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (message.id != null && Object.hasOwnProperty.call(message, 'id'))\n      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.id)\n    if (message.offset != null && Object.hasOwnProperty.call(message, 'offset'))\n      writer.uint32(/* id 2, wireType 0 =*/ 16).sint32(message.offset)\n    if (message.color != null && Object.hasOwnProperty.call(message, 'color'))\n      writer.uint32(/* id 3, wireType 2 =*/ 26).string(message.color)\n    return writer\n  }\n\n  /**\n   * Encodes the specified GradientColor message, length delimited. Does not implicitly {@link GradientColor.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof GradientColor\n   * @static\n   * @param {IGradientColor} message GradientColor message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  GradientColor.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a GradientColor message from the specified reader or buffer.\n   * @function decode\n   * @memberof GradientColor\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {GradientColor} GradientColor\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  GradientColor.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.GradientColor()\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.id = reader.int32()\n          break\n        case 2:\n          message.offset = reader.sint32()\n          break\n        case 3:\n          message.color = reader.string()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a GradientColor message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof GradientColor\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {GradientColor} GradientColor\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  GradientColor.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a GradientColor message.\n   * @function verify\n   * @memberof GradientColor\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  GradientColor.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.id != null && message.hasOwnProperty('id'))\n      if (!$util.isInteger(message.id)) return 'id: integer expected'\n    if (message.offset != null && message.hasOwnProperty('offset'))\n      if (!$util.isInteger(message.offset)) return 'offset: integer expected'\n    if (message.color != null && message.hasOwnProperty('color'))\n      if (!$util.isString(message.color)) return 'color: string expected'\n    return null\n  }\n\n  /**\n   * Creates a GradientColor message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof GradientColor\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {GradientColor} GradientColor\n   */\n  GradientColor.fromObject = function fromObject(object) {\n    if (object instanceof $root.GradientColor) return object\n    let message = new $root.GradientColor()\n    if (object.id != null) message.id = object.id | 0\n    if (object.offset != null) message.offset = object.offset | 0\n    if (object.color != null) message.color = String(object.color)\n    return message\n  }\n\n  /**\n   * Creates a plain object from a GradientColor message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof GradientColor\n   * @static\n   * @param {GradientColor} message GradientColor\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  GradientColor.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.defaults) {\n      object.id = 0\n      object.offset = 0\n      object.color = ''\n    }\n    if (message.id != null && message.hasOwnProperty('id'))\n      object.id = message.id\n    if (message.offset != null && message.hasOwnProperty('offset'))\n      object.offset = message.offset\n    if (message.color != null && message.hasOwnProperty('color'))\n      object.color = message.color\n    return object\n  }\n\n  /**\n   * Converts this GradientColor to JSON.\n   * @function toJSON\n   * @memberof GradientColor\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  GradientColor.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return GradientColor\n})())\n\nexport const Gradient = ($root.Gradient = (() => {\n  /**\n   * Properties of a Gradient.\n   * @exports IGradient\n   * @interface IGradient\n   * @property {number|null} [type] Gradient type\n   * @property {number|null} [angle] Gradient angle\n   * @property {Array.<IGradientColor>|null} [palette] Gradient palette\n   */\n\n  /**\n   * Constructs a new Gradient.\n   * @exports Gradient\n   * @classdesc Represents a Gradient.\n   * @implements IGradient\n   * @constructor\n   * @param {IGradient=} [properties] Properties to set\n   */\n  function Gradient(properties) {\n    this.palette = []\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * Gradient type.\n   * @member {number} type\n   * @memberof Gradient\n   * @instance\n   */\n  Gradient.prototype.type = 0\n\n  /**\n   * Gradient angle.\n   * @member {number} angle\n   * @memberof Gradient\n   * @instance\n   */\n  Gradient.prototype.angle = 0\n\n  /**\n   * Gradient palette.\n   * @member {Array.<IGradientColor>} palette\n   * @memberof Gradient\n   * @instance\n   */\n  Gradient.prototype.palette = $util.emptyArray\n\n  /**\n   * Creates a new Gradient instance using the specified properties.\n   * @function create\n   * @memberof Gradient\n   * @static\n   * @param {IGradient=} [properties] Properties to set\n   * @returns {Gradient} Gradient instance\n   */\n  Gradient.create = function create(properties) {\n    return new Gradient(properties)\n  }\n\n  /**\n   * Encodes the specified Gradient message. Does not implicitly {@link Gradient.verify|verify} messages.\n   * @function encode\n   * @memberof Gradient\n   * @static\n   * @param {IGradient} message Gradient message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Gradient.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (message.type != null && Object.hasOwnProperty.call(message, 'type'))\n      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.type)\n    if (message.angle != null && Object.hasOwnProperty.call(message, 'angle'))\n      writer.uint32(/* id 2, wireType 5 =*/ 21).float(message.angle)\n    if (message.palette != null && message.palette.length)\n      for (let i = 0; i < message.palette.length; ++i)\n        $root.GradientColor.encode(\n          message.palette[i],\n          writer.uint32(/* id 3, wireType 2 =*/ 26).fork(),\n        ).ldelim()\n    return writer\n  }\n\n  /**\n   * Encodes the specified Gradient message, length delimited. Does not implicitly {@link Gradient.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof Gradient\n   * @static\n   * @param {IGradient} message Gradient message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Gradient.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a Gradient message from the specified reader or buffer.\n   * @function decode\n   * @memberof Gradient\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {Gradient} Gradient\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Gradient.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.Gradient()\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.int32()\n          break\n        case 2:\n          message.angle = reader.float()\n          break\n        case 3:\n          if (!(message.palette && message.palette.length)) message.palette = []\n          message.palette.push(\n            $root.GradientColor.decode(reader, reader.uint32()),\n          )\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a Gradient message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof Gradient\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {Gradient} Gradient\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Gradient.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a Gradient message.\n   * @function verify\n   * @memberof Gradient\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  Gradient.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.type != null && message.hasOwnProperty('type'))\n      if (!$util.isInteger(message.type)) return 'type: integer expected'\n    if (message.angle != null && message.hasOwnProperty('angle'))\n      if (typeof message.angle !== 'number') return 'angle: number expected'\n    if (message.palette != null && message.hasOwnProperty('palette')) {\n      if (!Array.isArray(message.palette)) return 'palette: array expected'\n      for (let i = 0; i < message.palette.length; ++i) {\n        let error = $root.GradientColor.verify(message.palette[i])\n        if (error) return 'palette.' + error\n      }\n    }\n    return null\n  }\n\n  /**\n   * Creates a Gradient message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof Gradient\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {Gradient} Gradient\n   */\n  Gradient.fromObject = function fromObject(object) {\n    if (object instanceof $root.Gradient) return object\n    let message = new $root.Gradient()\n    if (object.type != null) message.type = object.type | 0\n    if (object.angle != null) message.angle = Number(object.angle)\n    if (object.palette) {\n      if (!Array.isArray(object.palette))\n        throw TypeError('.Gradient.palette: array expected')\n      message.palette = []\n      for (let i = 0; i < object.palette.length; ++i) {\n        if (typeof object.palette[i] !== 'object')\n          throw TypeError('.Gradient.palette: object expected')\n        message.palette[i] = $root.GradientColor.fromObject(object.palette[i])\n      }\n    }\n    return message\n  }\n\n  /**\n   * Creates a plain object from a Gradient message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof Gradient\n   * @static\n   * @param {Gradient} message Gradient\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  Gradient.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.arrays || options.defaults) object.palette = []\n    if (options.defaults) {\n      object.type = 0\n      object.angle = 0\n    }\n    if (message.type != null && message.hasOwnProperty('type'))\n      object.type = message.type\n    if (message.angle != null && message.hasOwnProperty('angle'))\n      object.angle =\n        options.json && !isFinite(message.angle)\n          ? String(message.angle)\n          : message.angle\n    if (message.palette && message.palette.length) {\n      object.palette = []\n      for (let j = 0; j < message.palette.length; ++j)\n        object.palette[j] = $root.GradientColor.toObject(\n          message.palette[j],\n          options,\n        )\n    }\n    return object\n  }\n\n  /**\n   * Converts this Gradient to JSON.\n   * @function toJSON\n   * @memberof Gradient\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  Gradient.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return Gradient\n})())\n\nexport const PatternTexture = ($root.PatternTexture = (() => {\n  /**\n   * Properties of a PatternTexture.\n   * @exports IPatternTexture\n   * @interface IPatternTexture\n   * @property {Uint8Array|null} [buffer] PatternTexture buffer\n   * @property {number|null} [scale] PatternTexture scale\n   * @property {string|null} [repetition] PatternTexture repetition\n   */\n\n  /**\n   * Constructs a new PatternTexture.\n   * @exports PatternTexture\n   * @classdesc Represents a PatternTexture.\n   * @implements IPatternTexture\n   * @constructor\n   * @param {IPatternTexture=} [properties] Properties to set\n   */\n  function PatternTexture(properties) {\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * PatternTexture buffer.\n   * @member {Uint8Array} buffer\n   * @memberof PatternTexture\n   * @instance\n   */\n  PatternTexture.prototype.buffer = $util.newBuffer([])\n\n  /**\n   * PatternTexture scale.\n   * @member {number} scale\n   * @memberof PatternTexture\n   * @instance\n   */\n  PatternTexture.prototype.scale = 0\n\n  /**\n   * PatternTexture repetition.\n   * @member {string} repetition\n   * @memberof PatternTexture\n   * @instance\n   */\n  PatternTexture.prototype.repetition = ''\n\n  /**\n   * Creates a new PatternTexture instance using the specified properties.\n   * @function create\n   * @memberof PatternTexture\n   * @static\n   * @param {IPatternTexture=} [properties] Properties to set\n   * @returns {PatternTexture} PatternTexture instance\n   */\n  PatternTexture.create = function create(properties) {\n    return new PatternTexture(properties)\n  }\n\n  /**\n   * Encodes the specified PatternTexture message. Does not implicitly {@link PatternTexture.verify|verify} messages.\n   * @function encode\n   * @memberof PatternTexture\n   * @static\n   * @param {IPatternTexture} message PatternTexture message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  PatternTexture.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (message.buffer != null && Object.hasOwnProperty.call(message, 'buffer'))\n      writer.uint32(/* id 1, wireType 2 =*/ 10).bytes(message.buffer)\n    if (message.scale != null && Object.hasOwnProperty.call(message, 'scale'))\n      writer.uint32(/* id 2, wireType 1 =*/ 17).double(message.scale)\n    if (\n      message.repetition != null &&\n      Object.hasOwnProperty.call(message, 'repetition')\n    )\n      writer.uint32(/* id 3, wireType 2 =*/ 26).string(message.repetition)\n    return writer\n  }\n\n  /**\n   * Encodes the specified PatternTexture message, length delimited. Does not implicitly {@link PatternTexture.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof PatternTexture\n   * @static\n   * @param {IPatternTexture} message PatternTexture message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  PatternTexture.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a PatternTexture message from the specified reader or buffer.\n   * @function decode\n   * @memberof PatternTexture\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {PatternTexture} PatternTexture\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  PatternTexture.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.PatternTexture()\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.buffer = reader.bytes()\n          break\n        case 2:\n          message.scale = reader.double()\n          break\n        case 3:\n          message.repetition = reader.string()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a PatternTexture message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof PatternTexture\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {PatternTexture} PatternTexture\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  PatternTexture.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a PatternTexture message.\n   * @function verify\n   * @memberof PatternTexture\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  PatternTexture.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.buffer != null && message.hasOwnProperty('buffer'))\n      if (\n        !(\n          (message.buffer && typeof message.buffer.length === 'number') ||\n          $util.isString(message.buffer)\n        )\n      )\n        return 'buffer: buffer expected'\n    if (message.scale != null && message.hasOwnProperty('scale'))\n      if (typeof message.scale !== 'number') return 'scale: number expected'\n    if (message.repetition != null && message.hasOwnProperty('repetition'))\n      if (!$util.isString(message.repetition))\n        return 'repetition: string expected'\n    return null\n  }\n\n  /**\n   * Creates a PatternTexture message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof PatternTexture\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {PatternTexture} PatternTexture\n   */\n  PatternTexture.fromObject = function fromObject(object) {\n    if (object instanceof $root.PatternTexture) return object\n    let message = new $root.PatternTexture()\n    if (object.buffer != null)\n      if (typeof object.buffer === 'string')\n        $util.base64.decode(\n          object.buffer,\n          (message.buffer = $util.newBuffer(\n            $util.base64.length(object.buffer),\n          )),\n          0,\n        )\n      else if (object.buffer.length) message.buffer = object.buffer\n    if (object.scale != null) message.scale = Number(object.scale)\n    if (object.repetition != null)\n      message.repetition = String(object.repetition)\n    return message\n  }\n\n  /**\n   * Creates a plain object from a PatternTexture message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof PatternTexture\n   * @static\n   * @param {PatternTexture} message PatternTexture\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  PatternTexture.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.defaults) {\n      if (options.bytes === String) object.buffer = ''\n      else {\n        object.buffer = []\n        if (options.bytes !== Array)\n          object.buffer = $util.newBuffer(object.buffer)\n      }\n      object.scale = 0\n      object.repetition = ''\n    }\n    if (message.buffer != null && message.hasOwnProperty('buffer'))\n      object.buffer =\n        options.bytes === String\n          ? $util.base64.encode(message.buffer, 0, message.buffer.length)\n          : options.bytes === Array\n          ? Array.prototype.slice.call(message.buffer)\n          : message.buffer\n    if (message.scale != null && message.hasOwnProperty('scale'))\n      object.scale =\n        options.json && !isFinite(message.scale)\n          ? String(message.scale)\n          : message.scale\n    if (message.repetition != null && message.hasOwnProperty('repetition'))\n      object.repetition = message.repetition\n    return object\n  }\n\n  /**\n   * Converts this PatternTexture to JSON.\n   * @function toJSON\n   * @memberof PatternTexture\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  PatternTexture.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return PatternTexture\n})())\n\nexport const Fill = ($root.Fill = (() => {\n  /**\n   * Properties of a Fill.\n   * @exports IFill\n   * @interface IFill\n   * @property {number|null} [type] Fill type\n   * @property {string|null} [color] Fill color\n   * @property {IGradient|null} [gradient] Fill gradient\n   * @property {IPatternTexture|null} [patternTexture] Fill patternTexture\n   * @property {number|null} [width] Fill width\n   * @property {string|null} [lineCap] Fill lineCap\n   * @property {string|null} [lineJoin] Fill lineJoin\n   */\n\n  /**\n   * Constructs a new Fill.\n   * @exports Fill\n   * @classdesc Represents a Fill.\n   * @implements IFill\n   * @constructor\n   * @param {IFill=} [properties] Properties to set\n   */\n  function Fill(properties) {\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * Fill type.\n   * @member {number} type\n   * @memberof Fill\n   * @instance\n   */\n  Fill.prototype.type = 0\n\n  /**\n   * Fill color.\n   * @member {string} color\n   * @memberof Fill\n   * @instance\n   */\n  Fill.prototype.color = ''\n\n  /**\n   * Fill gradient.\n   * @member {IGradient|null|undefined} gradient\n   * @memberof Fill\n   * @instance\n   */\n  Fill.prototype.gradient = null\n\n  /**\n   * Fill patternTexture.\n   * @member {IPatternTexture|null|undefined} patternTexture\n   * @memberof Fill\n   * @instance\n   */\n  Fill.prototype.patternTexture = null\n\n  /**\n   * Fill width.\n   * @member {number} width\n   * @memberof Fill\n   * @instance\n   */\n  Fill.prototype.width = 0\n\n  /**\n   * Fill lineCap.\n   * @member {string} lineCap\n   * @memberof Fill\n   * @instance\n   */\n  Fill.prototype.lineCap = ''\n\n  /**\n   * Fill lineJoin.\n   * @member {string} lineJoin\n   * @memberof Fill\n   * @instance\n   */\n  Fill.prototype.lineJoin = ''\n\n  /**\n   * Creates a new Fill instance using the specified properties.\n   * @function create\n   * @memberof Fill\n   * @static\n   * @param {IFill=} [properties] Properties to set\n   * @returns {Fill} Fill instance\n   */\n  Fill.create = function create(properties) {\n    return new Fill(properties)\n  }\n\n  /**\n   * Encodes the specified Fill message. Does not implicitly {@link Fill.verify|verify} messages.\n   * @function encode\n   * @memberof Fill\n   * @static\n   * @param {IFill} message Fill message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Fill.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (message.type != null && Object.hasOwnProperty.call(message, 'type'))\n      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.type)\n    if (message.color != null && Object.hasOwnProperty.call(message, 'color'))\n      writer.uint32(/* id 2, wireType 2 =*/ 18).string(message.color)\n    if (\n      message.gradient != null &&\n      Object.hasOwnProperty.call(message, 'gradient')\n    )\n      $root.Gradient.encode(\n        message.gradient,\n        writer.uint32(/* id 3, wireType 2 =*/ 26).fork(),\n      ).ldelim()\n    if (\n      message.patternTexture != null &&\n      Object.hasOwnProperty.call(message, 'patternTexture')\n    )\n      $root.PatternTexture.encode(\n        message.patternTexture,\n        writer.uint32(/* id 4, wireType 2 =*/ 34).fork(),\n      ).ldelim()\n    if (message.width != null && Object.hasOwnProperty.call(message, 'width'))\n      writer.uint32(/* id 5, wireType 0 =*/ 40).int32(message.width)\n    if (\n      message.lineCap != null &&\n      Object.hasOwnProperty.call(message, 'lineCap')\n    )\n      writer.uint32(/* id 6, wireType 2 =*/ 50).string(message.lineCap)\n    if (\n      message.lineJoin != null &&\n      Object.hasOwnProperty.call(message, 'lineJoin')\n    )\n      writer.uint32(/* id 7, wireType 2 =*/ 58).string(message.lineJoin)\n    return writer\n  }\n\n  /**\n   * Encodes the specified Fill message, length delimited. Does not implicitly {@link Fill.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof Fill\n   * @static\n   * @param {IFill} message Fill message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Fill.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a Fill message from the specified reader or buffer.\n   * @function decode\n   * @memberof Fill\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {Fill} Fill\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Fill.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.Fill()\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.int32()\n          break\n        case 2:\n          message.color = reader.string()\n          break\n        case 3:\n          message.gradient = $root.Gradient.decode(reader, reader.uint32())\n          break\n        case 4:\n          message.patternTexture = $root.PatternTexture.decode(\n            reader,\n            reader.uint32(),\n          )\n          break\n        case 5:\n          message.width = reader.int32()\n          break\n        case 6:\n          message.lineCap = reader.string()\n          break\n        case 7:\n          message.lineJoin = reader.string()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a Fill message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof Fill\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {Fill} Fill\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Fill.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a Fill message.\n   * @function verify\n   * @memberof Fill\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  Fill.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.type != null && message.hasOwnProperty('type'))\n      if (!$util.isInteger(message.type)) return 'type: integer expected'\n    if (message.color != null && message.hasOwnProperty('color'))\n      if (!$util.isString(message.color)) return 'color: string expected'\n    if (message.gradient != null && message.hasOwnProperty('gradient')) {\n      let error = $root.Gradient.verify(message.gradient)\n      if (error) return 'gradient.' + error\n    }\n    if (\n      message.patternTexture != null &&\n      message.hasOwnProperty('patternTexture')\n    ) {\n      let error = $root.PatternTexture.verify(message.patternTexture)\n      if (error) return 'patternTexture.' + error\n    }\n    if (message.width != null && message.hasOwnProperty('width'))\n      if (!$util.isInteger(message.width)) return 'width: integer expected'\n    if (message.lineCap != null && message.hasOwnProperty('lineCap'))\n      if (!$util.isString(message.lineCap)) return 'lineCap: string expected'\n    if (message.lineJoin != null && message.hasOwnProperty('lineJoin'))\n      if (!$util.isString(message.lineJoin)) return 'lineJoin: string expected'\n    return null\n  }\n\n  /**\n   * Creates a Fill message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof Fill\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {Fill} Fill\n   */\n  Fill.fromObject = function fromObject(object) {\n    if (object instanceof $root.Fill) return object\n    let message = new $root.Fill()\n    if (object.type != null) message.type = object.type | 0\n    if (object.color != null) message.color = String(object.color)\n    if (object.gradient != null) {\n      if (typeof object.gradient !== 'object')\n        throw TypeError('.Fill.gradient: object expected')\n      message.gradient = $root.Gradient.fromObject(object.gradient)\n    }\n    if (object.patternTexture != null) {\n      if (typeof object.patternTexture !== 'object')\n        throw TypeError('.Fill.patternTexture: object expected')\n      message.patternTexture = $root.PatternTexture.fromObject(\n        object.patternTexture,\n      )\n    }\n    if (object.width != null) message.width = object.width | 0\n    if (object.lineCap != null) message.lineCap = String(object.lineCap)\n    if (object.lineJoin != null) message.lineJoin = String(object.lineJoin)\n    return message\n  }\n\n  /**\n   * Creates a plain object from a Fill message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof Fill\n   * @static\n   * @param {Fill} message Fill\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  Fill.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.defaults) {\n      object.type = 0\n      object.color = ''\n      object.gradient = null\n      object.patternTexture = null\n      object.width = 0\n      object.lineCap = ''\n      object.lineJoin = ''\n    }\n    if (message.type != null && message.hasOwnProperty('type'))\n      object.type = message.type\n    if (message.color != null && message.hasOwnProperty('color'))\n      object.color = message.color\n    if (message.gradient != null && message.hasOwnProperty('gradient'))\n      object.gradient = $root.Gradient.toObject(message.gradient, options)\n    if (\n      message.patternTexture != null &&\n      message.hasOwnProperty('patternTexture')\n    )\n      object.patternTexture = $root.PatternTexture.toObject(\n        message.patternTexture,\n        options,\n      )\n    if (message.width != null && message.hasOwnProperty('width'))\n      object.width = message.width\n    if (message.lineCap != null && message.hasOwnProperty('lineCap'))\n      object.lineCap = message.lineCap\n    if (message.lineJoin != null && message.hasOwnProperty('lineJoin'))\n      object.lineJoin = message.lineJoin\n    return object\n  }\n\n  /**\n   * Converts this Fill to JSON.\n   * @function toJSON\n   * @memberof Fill\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  Fill.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return Fill\n})())\n\nexport const Font = ($root.Font = (() => {\n  /**\n   * Properties of a Font.\n   * @exports IFont\n   * @interface IFont\n   * @property {Uint8Array|null} [font] Font font\n   * @property {string|null} [family] Font family\n   * @property {number|null} [size] Font size\n   * @property {number|null} [lineHeight] Font lineHeight\n   */\n\n  /**\n   * Constructs a new Font.\n   * @exports Font\n   * @classdesc Represents a Font.\n   * @implements IFont\n   * @constructor\n   * @param {IFont=} [properties] Properties to set\n   */\n  function Font(properties) {\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * Font font.\n   * @member {Uint8Array} font\n   * @memberof Font\n   * @instance\n   */\n  Font.prototype.font = $util.newBuffer([])\n\n  /**\n   * Font family.\n   * @member {string} family\n   * @memberof Font\n   * @instance\n   */\n  Font.prototype.family = ''\n\n  /**\n   * Font size.\n   * @member {number} size\n   * @memberof Font\n   * @instance\n   */\n  Font.prototype.size = 0\n\n  /**\n   * Font lineHeight.\n   * @member {number} lineHeight\n   * @memberof Font\n   * @instance\n   */\n  Font.prototype.lineHeight = 0\n\n  /**\n   * Creates a new Font instance using the specified properties.\n   * @function create\n   * @memberof Font\n   * @static\n   * @param {IFont=} [properties] Properties to set\n   * @returns {Font} Font instance\n   */\n  Font.create = function create(properties) {\n    return new Font(properties)\n  }\n\n  /**\n   * Encodes the specified Font message. Does not implicitly {@link Font.verify|verify} messages.\n   * @function encode\n   * @memberof Font\n   * @static\n   * @param {IFont} message Font message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Font.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (message.font != null && Object.hasOwnProperty.call(message, 'font'))\n      writer.uint32(/* id 1, wireType 2 =*/ 10).bytes(message.font)\n    if (message.family != null && Object.hasOwnProperty.call(message, 'family'))\n      writer.uint32(/* id 2, wireType 2 =*/ 18).string(message.family)\n    if (message.size != null && Object.hasOwnProperty.call(message, 'size'))\n      writer.uint32(/* id 3, wireType 0 =*/ 24).int32(message.size)\n    if (\n      message.lineHeight != null &&\n      Object.hasOwnProperty.call(message, 'lineHeight')\n    )\n      writer.uint32(/* id 4, wireType 0 =*/ 32).int32(message.lineHeight)\n    return writer\n  }\n\n  /**\n   * Encodes the specified Font message, length delimited. Does not implicitly {@link Font.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof Font\n   * @static\n   * @param {IFont} message Font message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Font.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a Font message from the specified reader or buffer.\n   * @function decode\n   * @memberof Font\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {Font} Font\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Font.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.Font()\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.font = reader.bytes()\n          break\n        case 2:\n          message.family = reader.string()\n          break\n        case 3:\n          message.size = reader.int32()\n          break\n        case 4:\n          message.lineHeight = reader.int32()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a Font message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof Font\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {Font} Font\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Font.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a Font message.\n   * @function verify\n   * @memberof Font\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  Font.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.font != null && message.hasOwnProperty('font'))\n      if (\n        !(\n          (message.font && typeof message.font.length === 'number') ||\n          $util.isString(message.font)\n        )\n      )\n        return 'font: buffer expected'\n    if (message.family != null && message.hasOwnProperty('family'))\n      if (!$util.isString(message.family)) return 'family: string expected'\n    if (message.size != null && message.hasOwnProperty('size'))\n      if (!$util.isInteger(message.size)) return 'size: integer expected'\n    if (message.lineHeight != null && message.hasOwnProperty('lineHeight'))\n      if (!$util.isInteger(message.lineHeight))\n        return 'lineHeight: integer expected'\n    return null\n  }\n\n  /**\n   * Creates a Font message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof Font\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {Font} Font\n   */\n  Font.fromObject = function fromObject(object) {\n    if (object instanceof $root.Font) return object\n    let message = new $root.Font()\n    if (object.font != null)\n      if (typeof object.font === 'string')\n        $util.base64.decode(\n          object.font,\n          (message.font = $util.newBuffer($util.base64.length(object.font))),\n          0,\n        )\n      else if (object.font.length) message.font = object.font\n    if (object.family != null) message.family = String(object.family)\n    if (object.size != null) message.size = object.size | 0\n    if (object.lineHeight != null) message.lineHeight = object.lineHeight | 0\n    return message\n  }\n\n  /**\n   * Creates a plain object from a Font message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof Font\n   * @static\n   * @param {Font} message Font\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  Font.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.defaults) {\n      if (options.bytes === String) object.font = ''\n      else {\n        object.font = []\n        if (options.bytes !== Array) object.font = $util.newBuffer(object.font)\n      }\n      object.family = ''\n      object.size = 0\n      object.lineHeight = 0\n    }\n    if (message.font != null && message.hasOwnProperty('font'))\n      object.font =\n        options.bytes === String\n          ? $util.base64.encode(message.font, 0, message.font.length)\n          : options.bytes === Array\n          ? Array.prototype.slice.call(message.font)\n          : message.font\n    if (message.family != null && message.hasOwnProperty('family'))\n      object.family = message.family\n    if (message.size != null && message.hasOwnProperty('size'))\n      object.size = message.size\n    if (message.lineHeight != null && message.hasOwnProperty('lineHeight'))\n      object.lineHeight = message.lineHeight\n    return object\n  }\n\n  /**\n   * Converts this Font to JSON.\n   * @function toJSON\n   * @memberof Font\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  Font.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return Font\n})())\n\nexport const GlyphFont = ($root.GlyphFont = (() => {\n  /**\n   * Properties of a GlyphFont.\n   * @exports IGlyphFont\n   * @interface IGlyphFont\n   * @property {string|null} [letter] GlyphFont letter\n   * @property {IMetric|null} [adjustMetric] GlyphFont adjustMetric\n   * @property {Object.<string,number>|null} [kerning] GlyphFont kerning\n   */\n\n  /**\n   * Constructs a new GlyphFont.\n   * @exports GlyphFont\n   * @classdesc Represents a GlyphFont.\n   * @implements IGlyphFont\n   * @constructor\n   * @param {IGlyphFont=} [properties] Properties to set\n   */\n  function GlyphFont(properties) {\n    this.kerning = {}\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * GlyphFont letter.\n   * @member {string} letter\n   * @memberof GlyphFont\n   * @instance\n   */\n  GlyphFont.prototype.letter = ''\n\n  /**\n   * GlyphFont adjustMetric.\n   * @member {IMetric|null|undefined} adjustMetric\n   * @memberof GlyphFont\n   * @instance\n   */\n  GlyphFont.prototype.adjustMetric = null\n\n  /**\n   * GlyphFont kerning.\n   * @member {Object.<string,number>} kerning\n   * @memberof GlyphFont\n   * @instance\n   */\n  GlyphFont.prototype.kerning = $util.emptyObject\n\n  /**\n   * Creates a new GlyphFont instance using the specified properties.\n   * @function create\n   * @memberof GlyphFont\n   * @static\n   * @param {IGlyphFont=} [properties] Properties to set\n   * @returns {GlyphFont} GlyphFont instance\n   */\n  GlyphFont.create = function create(properties) {\n    return new GlyphFont(properties)\n  }\n\n  /**\n   * Encodes the specified GlyphFont message. Does not implicitly {@link GlyphFont.verify|verify} messages.\n   * @function encode\n   * @memberof GlyphFont\n   * @static\n   * @param {IGlyphFont} message GlyphFont message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  GlyphFont.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (message.letter != null && Object.hasOwnProperty.call(message, 'letter'))\n      writer.uint32(/* id 1, wireType 2 =*/ 10).string(message.letter)\n    if (\n      message.adjustMetric != null &&\n      Object.hasOwnProperty.call(message, 'adjustMetric')\n    )\n      $root.Metric.encode(\n        message.adjustMetric,\n        writer.uint32(/* id 2, wireType 2 =*/ 18).fork(),\n      ).ldelim()\n    if (\n      message.kerning != null &&\n      Object.hasOwnProperty.call(message, 'kerning')\n    )\n      for (let keys = Object.keys(message.kerning), i = 0; i < keys.length; ++i)\n        writer\n          .uint32(/* id 3, wireType 2 =*/ 26)\n          .fork()\n          .uint32(/* id 1, wireType 2 =*/ 10)\n          .string(keys[i])\n          .uint32(/* id 2, wireType 0 =*/ 16)\n          .int32(message.kerning[keys[i]])\n          .ldelim()\n    return writer\n  }\n\n  /**\n   * Encodes the specified GlyphFont message, length delimited. Does not implicitly {@link GlyphFont.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof GlyphFont\n   * @static\n   * @param {IGlyphFont} message GlyphFont message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  GlyphFont.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a GlyphFont message from the specified reader or buffer.\n   * @function decode\n   * @memberof GlyphFont\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {GlyphFont} GlyphFont\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  GlyphFont.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.GlyphFont(),\n      key,\n      value\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.letter = reader.string()\n          break\n        case 2:\n          message.adjustMetric = $root.Metric.decode(reader, reader.uint32())\n          break\n        case 3:\n          if (message.kerning === $util.emptyObject) message.kerning = {}\n          let end2 = reader.uint32() + reader.pos\n          key = ''\n          value = 0\n          while (reader.pos < end2) {\n            let tag2 = reader.uint32()\n            switch (tag2 >>> 3) {\n              case 1:\n                key = reader.string()\n                break\n              case 2:\n                value = reader.int32()\n                break\n              default:\n                reader.skipType(tag2 & 7)\n                break\n            }\n          }\n          message.kerning[key] = value\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a GlyphFont message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof GlyphFont\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {GlyphFont} GlyphFont\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  GlyphFont.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a GlyphFont message.\n   * @function verify\n   * @memberof GlyphFont\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  GlyphFont.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.letter != null && message.hasOwnProperty('letter'))\n      if (!$util.isString(message.letter)) return 'letter: string expected'\n    if (\n      message.adjustMetric != null &&\n      message.hasOwnProperty('adjustMetric')\n    ) {\n      let error = $root.Metric.verify(message.adjustMetric)\n      if (error) return 'adjustMetric.' + error\n    }\n    if (message.kerning != null && message.hasOwnProperty('kerning')) {\n      if (!$util.isObject(message.kerning)) return 'kerning: object expected'\n      let key = Object.keys(message.kerning)\n      for (let i = 0; i < key.length; ++i)\n        if (!$util.isInteger(message.kerning[key[i]]))\n          return 'kerning: integer{k:string} expected'\n    }\n    return null\n  }\n\n  /**\n   * Creates a GlyphFont message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof GlyphFont\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {GlyphFont} GlyphFont\n   */\n  GlyphFont.fromObject = function fromObject(object) {\n    if (object instanceof $root.GlyphFont) return object\n    let message = new $root.GlyphFont()\n    if (object.letter != null) message.letter = String(object.letter)\n    if (object.adjustMetric != null) {\n      if (typeof object.adjustMetric !== 'object')\n        throw TypeError('.GlyphFont.adjustMetric: object expected')\n      message.adjustMetric = $root.Metric.fromObject(object.adjustMetric)\n    }\n    if (object.kerning) {\n      if (typeof object.kerning !== 'object')\n        throw TypeError('.GlyphFont.kerning: object expected')\n      message.kerning = {}\n      for (let keys = Object.keys(object.kerning), i = 0; i < keys.length; ++i)\n        message.kerning[keys[i]] = object.kerning[keys[i]] | 0\n    }\n    return message\n  }\n\n  /**\n   * Creates a plain object from a GlyphFont message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof GlyphFont\n   * @static\n   * @param {GlyphFont} message GlyphFont\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  GlyphFont.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.objects || options.defaults) object.kerning = {}\n    if (options.defaults) {\n      object.letter = ''\n      object.adjustMetric = null\n    }\n    if (message.letter != null && message.hasOwnProperty('letter'))\n      object.letter = message.letter\n    if (message.adjustMetric != null && message.hasOwnProperty('adjustMetric'))\n      object.adjustMetric = $root.Metric.toObject(message.adjustMetric, options)\n    let keys2\n    if (message.kerning && (keys2 = Object.keys(message.kerning)).length) {\n      object.kerning = {}\n      for (let j = 0; j < keys2.length; ++j)\n        object.kerning[keys2[j]] = message.kerning[keys2[j]]\n    }\n    return object\n  }\n\n  /**\n   * Converts this GlyphFont to JSON.\n   * @function toJSON\n   * @memberof GlyphFont\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  GlyphFont.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return GlyphFont\n})())\n\nexport const GlyphImage = ($root.GlyphImage = (() => {\n  /**\n   * Properties of a GlyphImage.\n   * @exports IGlyphImage\n   * @interface IGlyphImage\n   * @property {string|null} [letter] GlyphImage letter\n   * @property {IMetric|null} [adjustMetric] GlyphImage adjustMetric\n   * @property {Uint8Array|null} [buffer] GlyphImage buffer\n   * @property {string|null} [fileName] GlyphImage fileName\n   * @property {string|null} [fileType] GlyphImage fileType\n   * @property {boolean|null} [selected] GlyphImage selected\n   * @property {Object.<string,number>|null} [kerning] GlyphImage kerning\n   */\n\n  /**\n   * Constructs a new GlyphImage.\n   * @exports GlyphImage\n   * @classdesc Represents a GlyphImage.\n   * @implements IGlyphImage\n   * @constructor\n   * @param {IGlyphImage=} [properties] Properties to set\n   */\n  function GlyphImage(properties) {\n    this.kerning = {}\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * GlyphImage letter.\n   * @member {string} letter\n   * @memberof GlyphImage\n   * @instance\n   */\n  GlyphImage.prototype.letter = ''\n\n  /**\n   * GlyphImage adjustMetric.\n   * @member {IMetric|null|undefined} adjustMetric\n   * @memberof GlyphImage\n   * @instance\n   */\n  GlyphImage.prototype.adjustMetric = null\n\n  /**\n   * GlyphImage buffer.\n   * @member {Uint8Array} buffer\n   * @memberof GlyphImage\n   * @instance\n   */\n  GlyphImage.prototype.buffer = $util.newBuffer([])\n\n  /**\n   * GlyphImage fileName.\n   * @member {string} fileName\n   * @memberof GlyphImage\n   * @instance\n   */\n  GlyphImage.prototype.fileName = ''\n\n  /**\n   * GlyphImage fileType.\n   * @member {string} fileType\n   * @memberof GlyphImage\n   * @instance\n   */\n  GlyphImage.prototype.fileType = ''\n\n  /**\n   * GlyphImage selected.\n   * @member {boolean} selected\n   * @memberof GlyphImage\n   * @instance\n   */\n  GlyphImage.prototype.selected = false\n\n  /**\n   * GlyphImage kerning.\n   * @member {Object.<string,number>} kerning\n   * @memberof GlyphImage\n   * @instance\n   */\n  GlyphImage.prototype.kerning = $util.emptyObject\n\n  /**\n   * Creates a new GlyphImage instance using the specified properties.\n   * @function create\n   * @memberof GlyphImage\n   * @static\n   * @param {IGlyphImage=} [properties] Properties to set\n   * @returns {GlyphImage} GlyphImage instance\n   */\n  GlyphImage.create = function create(properties) {\n    return new GlyphImage(properties)\n  }\n\n  /**\n   * Encodes the specified GlyphImage message. Does not implicitly {@link GlyphImage.verify|verify} messages.\n   * @function encode\n   * @memberof GlyphImage\n   * @static\n   * @param {IGlyphImage} message GlyphImage message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  GlyphImage.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (message.letter != null && Object.hasOwnProperty.call(message, 'letter'))\n      writer.uint32(/* id 1, wireType 2 =*/ 10).string(message.letter)\n    if (\n      message.adjustMetric != null &&\n      Object.hasOwnProperty.call(message, 'adjustMetric')\n    )\n      $root.Metric.encode(\n        message.adjustMetric,\n        writer.uint32(/* id 2, wireType 2 =*/ 18).fork(),\n      ).ldelim()\n    if (message.buffer != null && Object.hasOwnProperty.call(message, 'buffer'))\n      writer.uint32(/* id 3, wireType 2 =*/ 26).bytes(message.buffer)\n    if (\n      message.fileName != null &&\n      Object.hasOwnProperty.call(message, 'fileName')\n    )\n      writer.uint32(/* id 4, wireType 2 =*/ 34).string(message.fileName)\n    if (\n      message.fileType != null &&\n      Object.hasOwnProperty.call(message, 'fileType')\n    )\n      writer.uint32(/* id 5, wireType 2 =*/ 42).string(message.fileType)\n    if (\n      message.selected != null &&\n      Object.hasOwnProperty.call(message, 'selected')\n    )\n      writer.uint32(/* id 6, wireType 0 =*/ 48).bool(message.selected)\n    if (\n      message.kerning != null &&\n      Object.hasOwnProperty.call(message, 'kerning')\n    )\n      for (let keys = Object.keys(message.kerning), i = 0; i < keys.length; ++i)\n        writer\n          .uint32(/* id 7, wireType 2 =*/ 58)\n          .fork()\n          .uint32(/* id 1, wireType 2 =*/ 10)\n          .string(keys[i])\n          .uint32(/* id 2, wireType 0 =*/ 16)\n          .int32(message.kerning[keys[i]])\n          .ldelim()\n    return writer\n  }\n\n  /**\n   * Encodes the specified GlyphImage message, length delimited. Does not implicitly {@link GlyphImage.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof GlyphImage\n   * @static\n   * @param {IGlyphImage} message GlyphImage message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  GlyphImage.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a GlyphImage message from the specified reader or buffer.\n   * @function decode\n   * @memberof GlyphImage\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {GlyphImage} GlyphImage\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  GlyphImage.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.GlyphImage(),\n      key,\n      value\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.letter = reader.string()\n          break\n        case 2:\n          message.adjustMetric = $root.Metric.decode(reader, reader.uint32())\n          break\n        case 3:\n          message.buffer = reader.bytes()\n          break\n        case 4:\n          message.fileName = reader.string()\n          break\n        case 5:\n          message.fileType = reader.string()\n          break\n        case 6:\n          message.selected = reader.bool()\n          break\n        case 7:\n          if (message.kerning === $util.emptyObject) message.kerning = {}\n          let end2 = reader.uint32() + reader.pos\n          key = ''\n          value = 0\n          while (reader.pos < end2) {\n            let tag2 = reader.uint32()\n            switch (tag2 >>> 3) {\n              case 1:\n                key = reader.string()\n                break\n              case 2:\n                value = reader.int32()\n                break\n              default:\n                reader.skipType(tag2 & 7)\n                break\n            }\n          }\n          message.kerning[key] = value\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a GlyphImage message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof GlyphImage\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {GlyphImage} GlyphImage\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  GlyphImage.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a GlyphImage message.\n   * @function verify\n   * @memberof GlyphImage\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  GlyphImage.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.letter != null && message.hasOwnProperty('letter'))\n      if (!$util.isString(message.letter)) return 'letter: string expected'\n    if (\n      message.adjustMetric != null &&\n      message.hasOwnProperty('adjustMetric')\n    ) {\n      let error = $root.Metric.verify(message.adjustMetric)\n      if (error) return 'adjustMetric.' + error\n    }\n    if (message.buffer != null && message.hasOwnProperty('buffer'))\n      if (\n        !(\n          (message.buffer && typeof message.buffer.length === 'number') ||\n          $util.isString(message.buffer)\n        )\n      )\n        return 'buffer: buffer expected'\n    if (message.fileName != null && message.hasOwnProperty('fileName'))\n      if (!$util.isString(message.fileName)) return 'fileName: string expected'\n    if (message.fileType != null && message.hasOwnProperty('fileType'))\n      if (!$util.isString(message.fileType)) return 'fileType: string expected'\n    if (message.selected != null && message.hasOwnProperty('selected'))\n      if (typeof message.selected !== 'boolean')\n        return 'selected: boolean expected'\n    if (message.kerning != null && message.hasOwnProperty('kerning')) {\n      if (!$util.isObject(message.kerning)) return 'kerning: object expected'\n      let key = Object.keys(message.kerning)\n      for (let i = 0; i < key.length; ++i)\n        if (!$util.isInteger(message.kerning[key[i]]))\n          return 'kerning: integer{k:string} expected'\n    }\n    return null\n  }\n\n  /**\n   * Creates a GlyphImage message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof GlyphImage\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {GlyphImage} GlyphImage\n   */\n  GlyphImage.fromObject = function fromObject(object) {\n    if (object instanceof $root.GlyphImage) return object\n    let message = new $root.GlyphImage()\n    if (object.letter != null) message.letter = String(object.letter)\n    if (object.adjustMetric != null) {\n      if (typeof object.adjustMetric !== 'object')\n        throw TypeError('.GlyphImage.adjustMetric: object expected')\n      message.adjustMetric = $root.Metric.fromObject(object.adjustMetric)\n    }\n    if (object.buffer != null)\n      if (typeof object.buffer === 'string')\n        $util.base64.decode(\n          object.buffer,\n          (message.buffer = $util.newBuffer(\n            $util.base64.length(object.buffer),\n          )),\n          0,\n        )\n      else if (object.buffer.length) message.buffer = object.buffer\n    if (object.fileName != null) message.fileName = String(object.fileName)\n    if (object.fileType != null) message.fileType = String(object.fileType)\n    if (object.selected != null) message.selected = Boolean(object.selected)\n    if (object.kerning) {\n      if (typeof object.kerning !== 'object')\n        throw TypeError('.GlyphImage.kerning: object expected')\n      message.kerning = {}\n      for (let keys = Object.keys(object.kerning), i = 0; i < keys.length; ++i)\n        message.kerning[keys[i]] = object.kerning[keys[i]] | 0\n    }\n    return message\n  }\n\n  /**\n   * Creates a plain object from a GlyphImage message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof GlyphImage\n   * @static\n   * @param {GlyphImage} message GlyphImage\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  GlyphImage.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.objects || options.defaults) object.kerning = {}\n    if (options.defaults) {\n      object.letter = ''\n      object.adjustMetric = null\n      if (options.bytes === String) object.buffer = ''\n      else {\n        object.buffer = []\n        if (options.bytes !== Array)\n          object.buffer = $util.newBuffer(object.buffer)\n      }\n      object.fileName = ''\n      object.fileType = ''\n      object.selected = false\n    }\n    if (message.letter != null && message.hasOwnProperty('letter'))\n      object.letter = message.letter\n    if (message.adjustMetric != null && message.hasOwnProperty('adjustMetric'))\n      object.adjustMetric = $root.Metric.toObject(message.adjustMetric, options)\n    if (message.buffer != null && message.hasOwnProperty('buffer'))\n      object.buffer =\n        options.bytes === String\n          ? $util.base64.encode(message.buffer, 0, message.buffer.length)\n          : options.bytes === Array\n          ? Array.prototype.slice.call(message.buffer)\n          : message.buffer\n    if (message.fileName != null && message.hasOwnProperty('fileName'))\n      object.fileName = message.fileName\n    if (message.fileType != null && message.hasOwnProperty('fileType'))\n      object.fileType = message.fileType\n    if (message.selected != null && message.hasOwnProperty('selected'))\n      object.selected = message.selected\n    let keys2\n    if (message.kerning && (keys2 = Object.keys(message.kerning)).length) {\n      object.kerning = {}\n      for (let j = 0; j < keys2.length; ++j)\n        object.kerning[keys2[j]] = message.kerning[keys2[j]]\n    }\n    return object\n  }\n\n  /**\n   * Converts this GlyphImage to JSON.\n   * @function toJSON\n   * @memberof GlyphImage\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  GlyphImage.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return GlyphImage\n})())\n\nexport const Layout = ($root.Layout = (() => {\n  /**\n   * Properties of a Layout.\n   * @exports ILayout\n   * @interface ILayout\n   * @property {number|null} [padding] Layout padding\n   * @property {number|null} [spacing] Layout spacing\n   * @property {boolean|null} [power] Layout power\n   */\n\n  /**\n   * Constructs a new Layout.\n   * @exports Layout\n   * @classdesc Represents a Layout.\n   * @implements ILayout\n   * @constructor\n   * @param {ILayout=} [properties] Properties to set\n   */\n  function Layout(properties) {\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * Layout padding.\n   * @member {number} padding\n   * @memberof Layout\n   * @instance\n   */\n  Layout.prototype.padding = 0\n\n  /**\n   * Layout spacing.\n   * @member {number} spacing\n   * @memberof Layout\n   * @instance\n   */\n  Layout.prototype.spacing = 0\n\n  /**\n   * Layout power.\n   * @member {boolean} power\n   * @memberof Layout\n   * @instance\n   */\n  Layout.prototype.power = false\n\n  /**\n   * Creates a new Layout instance using the specified properties.\n   * @function create\n   * @memberof Layout\n   * @static\n   * @param {ILayout=} [properties] Properties to set\n   * @returns {Layout} Layout instance\n   */\n  Layout.create = function create(properties) {\n    return new Layout(properties)\n  }\n\n  /**\n   * Encodes the specified Layout message. Does not implicitly {@link Layout.verify|verify} messages.\n   * @function encode\n   * @memberof Layout\n   * @static\n   * @param {ILayout} message Layout message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Layout.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (\n      message.padding != null &&\n      Object.hasOwnProperty.call(message, 'padding')\n    )\n      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.padding)\n    if (\n      message.spacing != null &&\n      Object.hasOwnProperty.call(message, 'spacing')\n    )\n      writer.uint32(/* id 2, wireType 0 =*/ 16).int32(message.spacing)\n    if (message.power != null && Object.hasOwnProperty.call(message, 'power'))\n      writer.uint32(/* id 3, wireType 0 =*/ 24).bool(message.power)\n    return writer\n  }\n\n  /**\n   * Encodes the specified Layout message, length delimited. Does not implicitly {@link Layout.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof Layout\n   * @static\n   * @param {ILayout} message Layout message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Layout.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a Layout message from the specified reader or buffer.\n   * @function decode\n   * @memberof Layout\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {Layout} Layout\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Layout.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.Layout()\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.padding = reader.int32()\n          break\n        case 2:\n          message.spacing = reader.int32()\n          break\n        case 3:\n          message.power = reader.bool()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a Layout message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof Layout\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {Layout} Layout\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Layout.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a Layout message.\n   * @function verify\n   * @memberof Layout\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  Layout.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.padding != null && message.hasOwnProperty('padding'))\n      if (!$util.isInteger(message.padding)) return 'padding: integer expected'\n    if (message.spacing != null && message.hasOwnProperty('spacing'))\n      if (!$util.isInteger(message.spacing)) return 'spacing: integer expected'\n    if (message.power != null && message.hasOwnProperty('power'))\n      if (typeof message.power !== 'boolean') return 'power: boolean expected'\n    return null\n  }\n\n  /**\n   * Creates a Layout message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof Layout\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {Layout} Layout\n   */\n  Layout.fromObject = function fromObject(object) {\n    if (object instanceof $root.Layout) return object\n    let message = new $root.Layout()\n    if (object.padding != null) message.padding = object.padding | 0\n    if (object.spacing != null) message.spacing = object.spacing | 0\n    if (object.power != null) message.power = Boolean(object.power)\n    return message\n  }\n\n  /**\n   * Creates a plain object from a Layout message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof Layout\n   * @static\n   * @param {Layout} message Layout\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  Layout.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.defaults) {\n      object.padding = 0\n      object.spacing = 0\n      object.power = false\n    }\n    if (message.padding != null && message.hasOwnProperty('padding'))\n      object.padding = message.padding\n    if (message.spacing != null && message.hasOwnProperty('spacing'))\n      object.spacing = message.spacing\n    if (message.power != null && message.hasOwnProperty('power'))\n      object.power = message.power\n    return object\n  }\n\n  /**\n   * Converts this Layout to JSON.\n   * @function toJSON\n   * @memberof Layout\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  Layout.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return Layout\n})())\n\nexport const Shadow = ($root.Shadow = (() => {\n  /**\n   * Properties of a Shadow.\n   * @exports IShadow\n   * @interface IShadow\n   * @property {string|null} [color] Shadow color\n   * @property {number|null} [blur] Shadow blur\n   * @property {number|null} [offsetX] Shadow offsetX\n   * @property {number|null} [offsetY] Shadow offsetY\n   */\n\n  /**\n   * Constructs a new Shadow.\n   * @exports Shadow\n   * @classdesc Represents a Shadow.\n   * @implements IShadow\n   * @constructor\n   * @param {IShadow=} [properties] Properties to set\n   */\n  function Shadow(properties) {\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * Shadow color.\n   * @member {string} color\n   * @memberof Shadow\n   * @instance\n   */\n  Shadow.prototype.color = ''\n\n  /**\n   * Shadow blur.\n   * @member {number} blur\n   * @memberof Shadow\n   * @instance\n   */\n  Shadow.prototype.blur = 0\n\n  /**\n   * Shadow offsetX.\n   * @member {number} offsetX\n   * @memberof Shadow\n   * @instance\n   */\n  Shadow.prototype.offsetX = 0\n\n  /**\n   * Shadow offsetY.\n   * @member {number} offsetY\n   * @memberof Shadow\n   * @instance\n   */\n  Shadow.prototype.offsetY = 0\n\n  /**\n   * Creates a new Shadow instance using the specified properties.\n   * @function create\n   * @memberof Shadow\n   * @static\n   * @param {IShadow=} [properties] Properties to set\n   * @returns {Shadow} Shadow instance\n   */\n  Shadow.create = function create(properties) {\n    return new Shadow(properties)\n  }\n\n  /**\n   * Encodes the specified Shadow message. Does not implicitly {@link Shadow.verify|verify} messages.\n   * @function encode\n   * @memberof Shadow\n   * @static\n   * @param {IShadow} message Shadow message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Shadow.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (message.color != null && Object.hasOwnProperty.call(message, 'color'))\n      writer.uint32(/* id 1, wireType 2 =*/ 10).string(message.color)\n    if (message.blur != null && Object.hasOwnProperty.call(message, 'blur'))\n      writer.uint32(/* id 2, wireType 0 =*/ 16).int32(message.blur)\n    if (\n      message.offsetX != null &&\n      Object.hasOwnProperty.call(message, 'offsetX')\n    )\n      writer.uint32(/* id 3, wireType 0 =*/ 24).sint32(message.offsetX)\n    if (\n      message.offsetY != null &&\n      Object.hasOwnProperty.call(message, 'offsetY')\n    )\n      writer.uint32(/* id 4, wireType 0 =*/ 32).sint32(message.offsetY)\n    return writer\n  }\n\n  /**\n   * Encodes the specified Shadow message, length delimited. Does not implicitly {@link Shadow.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof Shadow\n   * @static\n   * @param {IShadow} message Shadow message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Shadow.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a Shadow message from the specified reader or buffer.\n   * @function decode\n   * @memberof Shadow\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {Shadow} Shadow\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Shadow.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.Shadow()\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.color = reader.string()\n          break\n        case 2:\n          message.blur = reader.int32()\n          break\n        case 3:\n          message.offsetX = reader.sint32()\n          break\n        case 4:\n          message.offsetY = reader.sint32()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a Shadow message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof Shadow\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {Shadow} Shadow\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Shadow.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a Shadow message.\n   * @function verify\n   * @memberof Shadow\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  Shadow.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.color != null && message.hasOwnProperty('color'))\n      if (!$util.isString(message.color)) return 'color: string expected'\n    if (message.blur != null && message.hasOwnProperty('blur'))\n      if (!$util.isInteger(message.blur)) return 'blur: integer expected'\n    if (message.offsetX != null && message.hasOwnProperty('offsetX'))\n      if (!$util.isInteger(message.offsetX)) return 'offsetX: integer expected'\n    if (message.offsetY != null && message.hasOwnProperty('offsetY'))\n      if (!$util.isInteger(message.offsetY)) return 'offsetY: integer expected'\n    return null\n  }\n\n  /**\n   * Creates a Shadow message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof Shadow\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {Shadow} Shadow\n   */\n  Shadow.fromObject = function fromObject(object) {\n    if (object instanceof $root.Shadow) return object\n    let message = new $root.Shadow()\n    if (object.color != null) message.color = String(object.color)\n    if (object.blur != null) message.blur = object.blur | 0\n    if (object.offsetX != null) message.offsetX = object.offsetX | 0\n    if (object.offsetY != null) message.offsetY = object.offsetY | 0\n    return message\n  }\n\n  /**\n   * Creates a plain object from a Shadow message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof Shadow\n   * @static\n   * @param {Shadow} message Shadow\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  Shadow.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.defaults) {\n      object.color = ''\n      object.blur = 0\n      object.offsetX = 0\n      object.offsetY = 0\n    }\n    if (message.color != null && message.hasOwnProperty('color'))\n      object.color = message.color\n    if (message.blur != null && message.hasOwnProperty('blur'))\n      object.blur = message.blur\n    if (message.offsetX != null && message.hasOwnProperty('offsetX'))\n      object.offsetX = message.offsetX\n    if (message.offsetY != null && message.hasOwnProperty('offsetY'))\n      object.offsetY = message.offsetY\n    return object\n  }\n\n  /**\n   * Converts this Shadow to JSON.\n   * @function toJSON\n   * @memberof Shadow\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  Shadow.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return Shadow\n})())\n\nexport const Style = ($root.Style = (() => {\n  /**\n   * Properties of a Style.\n   * @exports IStyle\n   * @interface IStyle\n   * @property {IFont|null} [font] Style font\n   * @property {IFill|null} [fill] Style fill\n   * @property {boolean|null} [useStroke] Style useStroke\n   * @property {IFill|null} [stroke] Style stroke\n   * @property {boolean|null} [useShadow] Style useShadow\n   * @property {IShadow|null} [shadow] Style shadow\n   * @property {string|null} [bgColor] Style bgColor\n   */\n\n  /**\n   * Constructs a new Style.\n   * @exports Style\n   * @classdesc Represents a Style.\n   * @implements IStyle\n   * @constructor\n   * @param {IStyle=} [properties] Properties to set\n   */\n  function Style(properties) {\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * Style font.\n   * @member {IFont|null|undefined} font\n   * @memberof Style\n   * @instance\n   */\n  Style.prototype.font = null\n\n  /**\n   * Style fill.\n   * @member {IFill|null|undefined} fill\n   * @memberof Style\n   * @instance\n   */\n  Style.prototype.fill = null\n\n  /**\n   * Style useStroke.\n   * @member {boolean} useStroke\n   * @memberof Style\n   * @instance\n   */\n  Style.prototype.useStroke = false\n\n  /**\n   * Style stroke.\n   * @member {IFill|null|undefined} stroke\n   * @memberof Style\n   * @instance\n   */\n  Style.prototype.stroke = null\n\n  /**\n   * Style useShadow.\n   * @member {boolean} useShadow\n   * @memberof Style\n   * @instance\n   */\n  Style.prototype.useShadow = false\n\n  /**\n   * Style shadow.\n   * @member {IShadow|null|undefined} shadow\n   * @memberof Style\n   * @instance\n   */\n  Style.prototype.shadow = null\n\n  /**\n   * Style bgColor.\n   * @member {string} bgColor\n   * @memberof Style\n   * @instance\n   */\n  Style.prototype.bgColor = ''\n\n  /**\n   * Creates a new Style instance using the specified properties.\n   * @function create\n   * @memberof Style\n   * @static\n   * @param {IStyle=} [properties] Properties to set\n   * @returns {Style} Style instance\n   */\n  Style.create = function create(properties) {\n    return new Style(properties)\n  }\n\n  /**\n   * Encodes the specified Style message. Does not implicitly {@link Style.verify|verify} messages.\n   * @function encode\n   * @memberof Style\n   * @static\n   * @param {IStyle} message Style message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Style.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (message.font != null && Object.hasOwnProperty.call(message, 'font'))\n      $root.Font.encode(\n        message.font,\n        writer.uint32(/* id 1, wireType 2 =*/ 10).fork(),\n      ).ldelim()\n    if (message.fill != null && Object.hasOwnProperty.call(message, 'fill'))\n      $root.Fill.encode(\n        message.fill,\n        writer.uint32(/* id 2, wireType 2 =*/ 18).fork(),\n      ).ldelim()\n    if (\n      message.useStroke != null &&\n      Object.hasOwnProperty.call(message, 'useStroke')\n    )\n      writer.uint32(/* id 3, wireType 0 =*/ 24).bool(message.useStroke)\n    if (message.stroke != null && Object.hasOwnProperty.call(message, 'stroke'))\n      $root.Fill.encode(\n        message.stroke,\n        writer.uint32(/* id 4, wireType 2 =*/ 34).fork(),\n      ).ldelim()\n    if (\n      message.useShadow != null &&\n      Object.hasOwnProperty.call(message, 'useShadow')\n    )\n      writer.uint32(/* id 5, wireType 0 =*/ 40).bool(message.useShadow)\n    if (message.shadow != null && Object.hasOwnProperty.call(message, 'shadow'))\n      $root.Shadow.encode(\n        message.shadow,\n        writer.uint32(/* id 6, wireType 2 =*/ 50).fork(),\n      ).ldelim()\n    if (\n      message.bgColor != null &&\n      Object.hasOwnProperty.call(message, 'bgColor')\n    )\n      writer.uint32(/* id 7, wireType 2 =*/ 58).string(message.bgColor)\n    return writer\n  }\n\n  /**\n   * Encodes the specified Style message, length delimited. Does not implicitly {@link Style.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof Style\n   * @static\n   * @param {IStyle} message Style message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Style.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a Style message from the specified reader or buffer.\n   * @function decode\n   * @memberof Style\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {Style} Style\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Style.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.Style()\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.font = $root.Font.decode(reader, reader.uint32())\n          break\n        case 2:\n          message.fill = $root.Fill.decode(reader, reader.uint32())\n          break\n        case 3:\n          message.useStroke = reader.bool()\n          break\n        case 4:\n          message.stroke = $root.Fill.decode(reader, reader.uint32())\n          break\n        case 5:\n          message.useShadow = reader.bool()\n          break\n        case 6:\n          message.shadow = $root.Shadow.decode(reader, reader.uint32())\n          break\n        case 7:\n          message.bgColor = reader.string()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a Style message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof Style\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {Style} Style\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Style.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a Style message.\n   * @function verify\n   * @memberof Style\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  Style.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.font != null && message.hasOwnProperty('font')) {\n      let error = $root.Font.verify(message.font)\n      if (error) return 'font.' + error\n    }\n    if (message.fill != null && message.hasOwnProperty('fill')) {\n      let error = $root.Fill.verify(message.fill)\n      if (error) return 'fill.' + error\n    }\n    if (message.useStroke != null && message.hasOwnProperty('useStroke'))\n      if (typeof message.useStroke !== 'boolean')\n        return 'useStroke: boolean expected'\n    if (message.stroke != null && message.hasOwnProperty('stroke')) {\n      let error = $root.Fill.verify(message.stroke)\n      if (error) return 'stroke.' + error\n    }\n    if (message.useShadow != null && message.hasOwnProperty('useShadow'))\n      if (typeof message.useShadow !== 'boolean')\n        return 'useShadow: boolean expected'\n    if (message.shadow != null && message.hasOwnProperty('shadow')) {\n      let error = $root.Shadow.verify(message.shadow)\n      if (error) return 'shadow.' + error\n    }\n    if (message.bgColor != null && message.hasOwnProperty('bgColor'))\n      if (!$util.isString(message.bgColor)) return 'bgColor: string expected'\n    return null\n  }\n\n  /**\n   * Creates a Style message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof Style\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {Style} Style\n   */\n  Style.fromObject = function fromObject(object) {\n    if (object instanceof $root.Style) return object\n    let message = new $root.Style()\n    if (object.font != null) {\n      if (typeof object.font !== 'object')\n        throw TypeError('.Style.font: object expected')\n      message.font = $root.Font.fromObject(object.font)\n    }\n    if (object.fill != null) {\n      if (typeof object.fill !== 'object')\n        throw TypeError('.Style.fill: object expected')\n      message.fill = $root.Fill.fromObject(object.fill)\n    }\n    if (object.useStroke != null) message.useStroke = Boolean(object.useStroke)\n    if (object.stroke != null) {\n      if (typeof object.stroke !== 'object')\n        throw TypeError('.Style.stroke: object expected')\n      message.stroke = $root.Fill.fromObject(object.stroke)\n    }\n    if (object.useShadow != null) message.useShadow = Boolean(object.useShadow)\n    if (object.shadow != null) {\n      if (typeof object.shadow !== 'object')\n        throw TypeError('.Style.shadow: object expected')\n      message.shadow = $root.Shadow.fromObject(object.shadow)\n    }\n    if (object.bgColor != null) message.bgColor = String(object.bgColor)\n    return message\n  }\n\n  /**\n   * Creates a plain object from a Style message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof Style\n   * @static\n   * @param {Style} message Style\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  Style.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.defaults) {\n      object.font = null\n      object.fill = null\n      object.useStroke = false\n      object.stroke = null\n      object.useShadow = false\n      object.shadow = null\n      object.bgColor = ''\n    }\n    if (message.font != null && message.hasOwnProperty('font'))\n      object.font = $root.Font.toObject(message.font, options)\n    if (message.fill != null && message.hasOwnProperty('fill'))\n      object.fill = $root.Fill.toObject(message.fill, options)\n    if (message.useStroke != null && message.hasOwnProperty('useStroke'))\n      object.useStroke = message.useStroke\n    if (message.stroke != null && message.hasOwnProperty('stroke'))\n      object.stroke = $root.Fill.toObject(message.stroke, options)\n    if (message.useShadow != null && message.hasOwnProperty('useShadow'))\n      object.useShadow = message.useShadow\n    if (message.shadow != null && message.hasOwnProperty('shadow'))\n      object.shadow = $root.Shadow.toObject(message.shadow, options)\n    if (message.bgColor != null && message.hasOwnProperty('bgColor'))\n      object.bgColor = message.bgColor\n    return object\n  }\n\n  /**\n   * Converts this Style to JSON.\n   * @function toJSON\n   * @memberof Style\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  Style.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return Style\n})())\n\nexport const Ui = ($root.Ui = (() => {\n  /**\n   * Properties of an Ui.\n   * @exports IUi\n   * @interface IUi\n   * @property {string|null} [previewText] Ui previewText\n   */\n\n  /**\n   * Constructs a new Ui.\n   * @exports Ui\n   * @classdesc Represents an Ui.\n   * @implements IUi\n   * @constructor\n   * @param {IUi=} [properties] Properties to set\n   */\n  function Ui(properties) {\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * Ui previewText.\n   * @member {string} previewText\n   * @memberof Ui\n   * @instance\n   */\n  Ui.prototype.previewText = ''\n\n  /**\n   * Creates a new Ui instance using the specified properties.\n   * @function create\n   * @memberof Ui\n   * @static\n   * @param {IUi=} [properties] Properties to set\n   * @returns {Ui} Ui instance\n   */\n  Ui.create = function create(properties) {\n    return new Ui(properties)\n  }\n\n  /**\n   * Encodes the specified Ui message. Does not implicitly {@link Ui.verify|verify} messages.\n   * @function encode\n   * @memberof Ui\n   * @static\n   * @param {IUi} message Ui message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Ui.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (\n      message.previewText != null &&\n      Object.hasOwnProperty.call(message, 'previewText')\n    )\n      writer.uint32(/* id 1, wireType 2 =*/ 10).string(message.previewText)\n    return writer\n  }\n\n  /**\n   * Encodes the specified Ui message, length delimited. Does not implicitly {@link Ui.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof Ui\n   * @static\n   * @param {IUi} message Ui message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Ui.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes an Ui message from the specified reader or buffer.\n   * @function decode\n   * @memberof Ui\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {Ui} Ui\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Ui.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.Ui()\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.previewText = reader.string()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes an Ui message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof Ui\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {Ui} Ui\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Ui.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies an Ui message.\n   * @function verify\n   * @memberof Ui\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  Ui.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.previewText != null && message.hasOwnProperty('previewText'))\n      if (!$util.isString(message.previewText))\n        return 'previewText: string expected'\n    return null\n  }\n\n  /**\n   * Creates an Ui message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof Ui\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {Ui} Ui\n   */\n  Ui.fromObject = function fromObject(object) {\n    if (object instanceof $root.Ui) return object\n    let message = new $root.Ui()\n    if (object.previewText != null)\n      message.previewText = String(object.previewText)\n    return message\n  }\n\n  /**\n   * Creates a plain object from an Ui message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof Ui\n   * @static\n   * @param {Ui} message Ui\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  Ui.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.defaults) object.previewText = ''\n    if (message.previewText != null && message.hasOwnProperty('previewText'))\n      object.previewText = message.previewText\n    return object\n  }\n\n  /**\n   * Converts this Ui to JSON.\n   * @function toJSON\n   * @memberof Ui\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  Ui.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return Ui\n})())\n\nexport const Project = ($root.Project = (() => {\n  /**\n   * Properties of a Project.\n   * @exports IProject\n   * @interface IProject\n   * @property {number|Long|null} [id] Project id\n   * @property {string|null} [name] Project name\n   * @property {string|null} [text] Project text\n   * @property {Object.<string,IGlyphFont>|null} [glyphs] Project glyphs\n   * @property {Array.<IGlyphImage>|null} [glyphImages] Project glyphImages\n   * @property {IStyle|null} [style] Project style\n   * @property {ILayout|null} [layout] Project layout\n   * @property {IMetric|null} [globalAdjustMetric] Project globalAdjustMetric\n   * @property {IUi|null} [ui] Project ui\n   */\n\n  /**\n   * Constructs a new Project.\n   * @exports Project\n   * @classdesc Represents a Project.\n   * @implements IProject\n   * @constructor\n   * @param {IProject=} [properties] Properties to set\n   */\n  function Project(properties) {\n    this.glyphs = {}\n    this.glyphImages = []\n    if (properties)\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\n  }\n\n  /**\n   * Project id.\n   * @member {number|Long} id\n   * @memberof Project\n   * @instance\n   */\n  Project.prototype.id = $util.Long ? $util.Long.fromBits(0, 0, false) : 0\n\n  /**\n   * Project name.\n   * @member {string} name\n   * @memberof Project\n   * @instance\n   */\n  Project.prototype.name = ''\n\n  /**\n   * Project text.\n   * @member {string} text\n   * @memberof Project\n   * @instance\n   */\n  Project.prototype.text = ''\n\n  /**\n   * Project glyphs.\n   * @member {Object.<string,IGlyphFont>} glyphs\n   * @memberof Project\n   * @instance\n   */\n  Project.prototype.glyphs = $util.emptyObject\n\n  /**\n   * Project glyphImages.\n   * @member {Array.<IGlyphImage>} glyphImages\n   * @memberof Project\n   * @instance\n   */\n  Project.prototype.glyphImages = $util.emptyArray\n\n  /**\n   * Project style.\n   * @member {IStyle|null|undefined} style\n   * @memberof Project\n   * @instance\n   */\n  Project.prototype.style = null\n\n  /**\n   * Project layout.\n   * @member {ILayout|null|undefined} layout\n   * @memberof Project\n   * @instance\n   */\n  Project.prototype.layout = null\n\n  /**\n   * Project globalAdjustMetric.\n   * @member {IMetric|null|undefined} globalAdjustMetric\n   * @memberof Project\n   * @instance\n   */\n  Project.prototype.globalAdjustMetric = null\n\n  /**\n   * Project ui.\n   * @member {IUi|null|undefined} ui\n   * @memberof Project\n   * @instance\n   */\n  Project.prototype.ui = null\n\n  /**\n   * Creates a new Project instance using the specified properties.\n   * @function create\n   * @memberof Project\n   * @static\n   * @param {IProject=} [properties] Properties to set\n   * @returns {Project} Project instance\n   */\n  Project.create = function create(properties) {\n    return new Project(properties)\n  }\n\n  /**\n   * Encodes the specified Project message. Does not implicitly {@link Project.verify|verify} messages.\n   * @function encode\n   * @memberof Project\n   * @static\n   * @param {IProject} message Project message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Project.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create()\n    if (message.id != null && Object.hasOwnProperty.call(message, 'id'))\n      writer.uint32(/* id 1, wireType 0 =*/ 8).int64(message.id)\n    if (message.name != null && Object.hasOwnProperty.call(message, 'name'))\n      writer.uint32(/* id 2, wireType 2 =*/ 18).string(message.name)\n    if (message.text != null && Object.hasOwnProperty.call(message, 'text'))\n      writer.uint32(/* id 3, wireType 2 =*/ 26).string(message.text)\n    if (message.glyphs != null && Object.hasOwnProperty.call(message, 'glyphs'))\n      for (\n        let keys = Object.keys(message.glyphs), i = 0;\n        i < keys.length;\n        ++i\n      ) {\n        writer\n          .uint32(/* id 4, wireType 2 =*/ 34)\n          .fork()\n          .uint32(/* id 1, wireType 2 =*/ 10)\n          .string(keys[i])\n        $root.GlyphFont.encode(\n          message.glyphs[keys[i]],\n          writer.uint32(/* id 2, wireType 2 =*/ 18).fork(),\n        )\n          .ldelim()\n          .ldelim()\n      }\n    if (message.glyphImages != null && message.glyphImages.length)\n      for (let i = 0; i < message.glyphImages.length; ++i)\n        $root.GlyphImage.encode(\n          message.glyphImages[i],\n          writer.uint32(/* id 5, wireType 2 =*/ 42).fork(),\n        ).ldelim()\n    if (message.style != null && Object.hasOwnProperty.call(message, 'style'))\n      $root.Style.encode(\n        message.style,\n        writer.uint32(/* id 6, wireType 2 =*/ 50).fork(),\n      ).ldelim()\n    if (message.layout != null && Object.hasOwnProperty.call(message, 'layout'))\n      $root.Layout.encode(\n        message.layout,\n        writer.uint32(/* id 7, wireType 2 =*/ 58).fork(),\n      ).ldelim()\n    if (\n      message.globalAdjustMetric != null &&\n      Object.hasOwnProperty.call(message, 'globalAdjustMetric')\n    )\n      $root.Metric.encode(\n        message.globalAdjustMetric,\n        writer.uint32(/* id 8, wireType 2 =*/ 66).fork(),\n      ).ldelim()\n    if (message.ui != null && Object.hasOwnProperty.call(message, 'ui'))\n      $root.Ui.encode(\n        message.ui,\n        writer.uint32(/* id 9, wireType 2 =*/ 74).fork(),\n      ).ldelim()\n    return writer\n  }\n\n  /**\n   * Encodes the specified Project message, length delimited. Does not implicitly {@link Project.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof Project\n   * @static\n   * @param {IProject} message Project message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Project.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim()\n  }\n\n  /**\n   * Decodes a Project message from the specified reader or buffer.\n   * @function decode\n   * @memberof Project\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {Project} Project\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Project.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\n    let end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.Project(),\n      key,\n      value\n    while (reader.pos < end) {\n      let tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.id = reader.int64()\n          break\n        case 2:\n          message.name = reader.string()\n          break\n        case 3:\n          message.text = reader.string()\n          break\n        case 4:\n          if (message.glyphs === $util.emptyObject) message.glyphs = {}\n          let end2 = reader.uint32() + reader.pos\n          key = ''\n          value = null\n          while (reader.pos < end2) {\n            let tag2 = reader.uint32()\n            switch (tag2 >>> 3) {\n              case 1:\n                key = reader.string()\n                break\n              case 2:\n                value = $root.GlyphFont.decode(reader, reader.uint32())\n                break\n              default:\n                reader.skipType(tag2 & 7)\n                break\n            }\n          }\n          message.glyphs[key] = value\n          break\n        case 5:\n          if (!(message.glyphImages && message.glyphImages.length))\n            message.glyphImages = []\n          message.glyphImages.push(\n            $root.GlyphImage.decode(reader, reader.uint32()),\n          )\n          break\n        case 6:\n          message.style = $root.Style.decode(reader, reader.uint32())\n          break\n        case 7:\n          message.layout = $root.Layout.decode(reader, reader.uint32())\n          break\n        case 8:\n          message.globalAdjustMetric = $root.Metric.decode(\n            reader,\n            reader.uint32(),\n          )\n          break\n        case 9:\n          message.ui = $root.Ui.decode(reader, reader.uint32())\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n\n  /**\n   * Decodes a Project message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof Project\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {Project} Project\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Project.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\n    return this.decode(reader, reader.uint32())\n  }\n\n  /**\n   * Verifies a Project message.\n   * @function verify\n   * @memberof Project\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  Project.verify = function verify(message) {\n    if (typeof message !== 'object' || message === null)\n      return 'object expected'\n    if (message.id != null && message.hasOwnProperty('id'))\n      if (\n        !$util.isInteger(message.id) &&\n        !(\n          message.id &&\n          $util.isInteger(message.id.low) &&\n          $util.isInteger(message.id.high)\n        )\n      )\n        return 'id: integer|Long expected'\n    if (message.name != null && message.hasOwnProperty('name'))\n      if (!$util.isString(message.name)) return 'name: string expected'\n    if (message.text != null && message.hasOwnProperty('text'))\n      if (!$util.isString(message.text)) return 'text: string expected'\n    if (message.glyphs != null && message.hasOwnProperty('glyphs')) {\n      if (!$util.isObject(message.glyphs)) return 'glyphs: object expected'\n      let key = Object.keys(message.glyphs)\n      for (let i = 0; i < key.length; ++i) {\n        let error = $root.GlyphFont.verify(message.glyphs[key[i]])\n        if (error) return 'glyphs.' + error\n      }\n    }\n    if (message.glyphImages != null && message.hasOwnProperty('glyphImages')) {\n      if (!Array.isArray(message.glyphImages))\n        return 'glyphImages: array expected'\n      for (let i = 0; i < message.glyphImages.length; ++i) {\n        let error = $root.GlyphImage.verify(message.glyphImages[i])\n        if (error) return 'glyphImages.' + error\n      }\n    }\n    if (message.style != null && message.hasOwnProperty('style')) {\n      let error = $root.Style.verify(message.style)\n      if (error) return 'style.' + error\n    }\n    if (message.layout != null && message.hasOwnProperty('layout')) {\n      let error = $root.Layout.verify(message.layout)\n      if (error) return 'layout.' + error\n    }\n    if (\n      message.globalAdjustMetric != null &&\n      message.hasOwnProperty('globalAdjustMetric')\n    ) {\n      let error = $root.Metric.verify(message.globalAdjustMetric)\n      if (error) return 'globalAdjustMetric.' + error\n    }\n    if (message.ui != null && message.hasOwnProperty('ui')) {\n      let error = $root.Ui.verify(message.ui)\n      if (error) return 'ui.' + error\n    }\n    return null\n  }\n\n  /**\n   * Creates a Project message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof Project\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {Project} Project\n   */\n  Project.fromObject = function fromObject(object) {\n    if (object instanceof $root.Project) return object\n    let message = new $root.Project()\n    if (object.id != null)\n      if ($util.Long)\n        (message.id = $util.Long.fromValue(object.id)).unsigned = false\n      else if (typeof object.id === 'string')\n        message.id = parseInt(object.id, 10)\n      else if (typeof object.id === 'number') message.id = object.id\n      else if (typeof object.id === 'object')\n        message.id = new $util.LongBits(\n          object.id.low >>> 0,\n          object.id.high >>> 0,\n        ).toNumber()\n    if (object.name != null) message.name = String(object.name)\n    if (object.text != null) message.text = String(object.text)\n    if (object.glyphs) {\n      if (typeof object.glyphs !== 'object')\n        throw TypeError('.Project.glyphs: object expected')\n      message.glyphs = {}\n      for (let keys = Object.keys(object.glyphs), i = 0; i < keys.length; ++i) {\n        if (typeof object.glyphs[keys[i]] !== 'object')\n          throw TypeError('.Project.glyphs: object expected')\n        message.glyphs[keys[i]] = $root.GlyphFont.fromObject(\n          object.glyphs[keys[i]],\n        )\n      }\n    }\n    if (object.glyphImages) {\n      if (!Array.isArray(object.glyphImages))\n        throw TypeError('.Project.glyphImages: array expected')\n      message.glyphImages = []\n      for (let i = 0; i < object.glyphImages.length; ++i) {\n        if (typeof object.glyphImages[i] !== 'object')\n          throw TypeError('.Project.glyphImages: object expected')\n        message.glyphImages[i] = $root.GlyphImage.fromObject(\n          object.glyphImages[i],\n        )\n      }\n    }\n    if (object.style != null) {\n      if (typeof object.style !== 'object')\n        throw TypeError('.Project.style: object expected')\n      message.style = $root.Style.fromObject(object.style)\n    }\n    if (object.layout != null) {\n      if (typeof object.layout !== 'object')\n        throw TypeError('.Project.layout: object expected')\n      message.layout = $root.Layout.fromObject(object.layout)\n    }\n    if (object.globalAdjustMetric != null) {\n      if (typeof object.globalAdjustMetric !== 'object')\n        throw TypeError('.Project.globalAdjustMetric: object expected')\n      message.globalAdjustMetric = $root.Metric.fromObject(\n        object.globalAdjustMetric,\n      )\n    }\n    if (object.ui != null) {\n      if (typeof object.ui !== 'object')\n        throw TypeError('.Project.ui: object expected')\n      message.ui = $root.Ui.fromObject(object.ui)\n    }\n    return message\n  }\n\n  /**\n   * Creates a plain object from a Project message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof Project\n   * @static\n   * @param {Project} message Project\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  Project.toObject = function toObject(message, options) {\n    if (!options) options = {}\n    let object = {}\n    if (options.arrays || options.defaults) object.glyphImages = []\n    if (options.objects || options.defaults) object.glyphs = {}\n    if (options.defaults) {\n      if ($util.Long) {\n        let long = new $util.Long(0, 0, false)\n        object.id =\n          options.longs === String\n            ? long.toString()\n            : options.longs === Number\n            ? long.toNumber()\n            : long\n      } else object.id = options.longs === String ? '0' : 0\n      object.name = ''\n      object.text = ''\n      object.style = null\n      object.layout = null\n      object.globalAdjustMetric = null\n      object.ui = null\n    }\n    if (message.id != null && message.hasOwnProperty('id'))\n      if (typeof message.id === 'number')\n        object.id = options.longs === String ? String(message.id) : message.id\n      else\n        object.id =\n          options.longs === String\n            ? $util.Long.prototype.toString.call(message.id)\n            : options.longs === Number\n            ? new $util.LongBits(\n                message.id.low >>> 0,\n                message.id.high >>> 0,\n              ).toNumber()\n            : message.id\n    if (message.name != null && message.hasOwnProperty('name'))\n      object.name = message.name\n    if (message.text != null && message.hasOwnProperty('text'))\n      object.text = message.text\n    let keys2\n    if (message.glyphs && (keys2 = Object.keys(message.glyphs)).length) {\n      object.glyphs = {}\n      for (let j = 0; j < keys2.length; ++j)\n        object.glyphs[keys2[j]] = $root.GlyphFont.toObject(\n          message.glyphs[keys2[j]],\n          options,\n        )\n    }\n    if (message.glyphImages && message.glyphImages.length) {\n      object.glyphImages = []\n      for (let j = 0; j < message.glyphImages.length; ++j)\n        object.glyphImages[j] = $root.GlyphImage.toObject(\n          message.glyphImages[j],\n          options,\n        )\n    }\n    if (message.style != null && message.hasOwnProperty('style'))\n      object.style = $root.Style.toObject(message.style, options)\n    if (message.layout != null && message.hasOwnProperty('layout'))\n      object.layout = $root.Layout.toObject(message.layout, options)\n    if (\n      message.globalAdjustMetric != null &&\n      message.hasOwnProperty('globalAdjustMetric')\n    )\n      object.globalAdjustMetric = $root.Metric.toObject(\n        message.globalAdjustMetric,\n        options,\n      )\n    if (message.ui != null && message.hasOwnProperty('ui'))\n      object.ui = $root.Ui.toObject(message.ui, options)\n    return object\n  }\n\n  /**\n   * Converts this Project to JSON.\n   * @function toJSON\n   * @memberof Project\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  Project.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\n  }\n\n  return Project\n})())\n\nexport { $root as default }\n","export const PREFIX_STR = 'SnowBambooBMF'\nconst prefix = (): Uint8Array =>\n  new Uint8Array([...PREFIX_STR.split('').map((s) => s.charCodeAt(0)), 1, 0, 0])\n\nexport default prefix\n","import { Project, Font } from 'src/store'\nimport proto, { IProject } from 'src/proto'\n\nimport prefix from './prefix'\n\nfunction toOriginBuffer(protoProject: IProject): Project {\n  const project = { ...protoProject }\n  const map = new Map()\n\n  // font\n  if (project?.style?.font?.font) {\n    project.style.font = {\n      ...(project.style.font as Font),\n      font: project.style.font.font.slice().buffer as Uint8Array,\n    }\n  }\n\n  // images\n  if (project?.glyphImages) {\n    project.glyphImages.forEach((glyphImage) => {\n      if (glyphImage.buffer) {\n        glyphImage.buffer = glyphImage.buffer.slice().buffer as Uint8Array\n      }\n      if (glyphImage.kerning) {\n        const imgKerning = new Map()\n        Object.keys(glyphImage.kerning).forEach((key) => {\n          if (glyphImage && glyphImage.kerning && glyphImage.kerning[key])\n            imgKerning.set(key, glyphImage.kerning[key] || 0)\n        })\n      }\n    })\n\n    // project.glyphImages = new Set(project.glyphImages)\n  }\n\n  if (project?.glyphs) {\n    Object.keys(project.glyphs).forEach((k) => {\n      if (project && project.glyphs && project.glyphs[k]) {\n        const gl = project.glyphs[k]\n        const glyphKerning = new Map()\n        if (gl && gl.kerning) {\n          Object.keys(gl.kerning).forEach((key) => {\n            if (gl.kerning) glyphKerning.set(key, gl.kerning[key] || 0)\n          })\n        }\n        map.set(k, { ...gl, kerning: glyphKerning })\n      }\n    })\n  }\n\n  // fill\n  if (project?.style?.fill?.patternTexture?.buffer) {\n    project.style.fill.patternTexture.buffer = project.style.fill.patternTexture.buffer.slice()\n      .buffer as Uint8Array\n  }\n\n  // stroke\n  if (project?.style?.stroke?.patternTexture?.buffer) {\n    project.style.stroke.patternTexture.buffer = project.style.stroke.patternTexture.buffer.slice()\n      .buffer as Uint8Array\n  }\n\n  return ({\n    ...project,\n    glyphs: map,\n    glyphImages: project.glyphImages || [],\n  } as unknown) as Project\n}\n\nexport default function decodeProject(buffer: ArrayBuffer): Project {\n  if (buffer.byteLength < 17) throw new Error('error')\n  const perfixBuffer = prefix()\n  const u8 = new Uint8Array(buffer)\n  const filePrefix = u8.slice(0, perfixBuffer.byteLength)\n  let isSbf = true\n  perfixBuffer.forEach((e, i) => {\n    if (filePrefix[i] !== e) isSbf = false\n  })\n\n  if (!isSbf) throw new Error('unknow file')\n\n  const project = proto.Project.decode(u8.slice(filePrefix.byteLength))\n\n  return toOriginBuffer(project)\n}\n","import React, { useState, useEffect, FunctionComponent } from 'react'\nimport hotkeys from 'hotkeys-js'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport { useProject } from 'src/store/hooks'\nimport GridInput from 'src/app/components/GridInput/GridInput'\n\ninterface ExportButtonProps {\n  className?: string\n  onSave?: (config: { ext: string; type: string }) => void\n}\n\nconst ExportButton: FunctionComponent<ExportButtonProps> = (\n  props: ExportButtonProps,\n) => {\n  const { className, onSave } = props\n  const project = useProject()\n  const { name } = project\n  const [open, setOpen] = useState(false)\n  const [val, setVal] = useState(0)\n  const [list] = useState([\n    { id: 0, ext: 'fnt', type: 'xml' },\n    { id: 1, ext: 'xml', type: 'xml' },\n    { id: 2, ext: 'fnt', type: 'text' },\n    { id: 3, ext: 'text', type: 'text' },\n  ])\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>,\n  ) => {\n    setVal(e.target.value as number)\n  }\n  const handleSave = () => {\n    if (onSave)\n      onSave({\n        ext: list[val].ext,\n        type: list[val].type,\n      })\n    handleClose()\n  }\n\n  useEffect(() => {\n    hotkeys.unbind('ctrl+shift+s,command+shift+s')\n    hotkeys('ctrl+shift+s,command+shift+s', handleClickOpen)\n    return () => {\n      hotkeys.unbind('ctrl+shift+s,command+shift+s')\n    }\n  }, [])\n\n  return (\n    <>\n      <Button\n        className={className}\n        title='Export BitmapFont (⌘⇧ + S)'\n        onClick={handleClickOpen}\n      >\n        Export\n      </Button>\n      <Dialog onClose={handleClose} open={open} fullWidth maxWidth='xs'>\n        <DialogTitle>Export Config</DialogTitle>\n        <DialogContent dividers>\n          <GridInput before='Export Type:' childrenWidth={8}>\n            <Select displayEmpty value={val} onChange={handleChange}>\n              {list.map((item) => (\n                <MenuItem value={item.id} key={item.id}>\n                  {`${name}.${item.ext} (BMFont ${item.type.toUpperCase()})`}\n                </MenuItem>\n              ))}\n            </Select>\n          </GridInput>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleSave} color='default'>\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default ExportButton\n","import React, {\n  FunctionComponent,\n  useState,\n  useEffect,\n  useCallback,\n  useRef,\n} from 'react'\nimport { toJS } from 'mobx'\nimport hotkeys from 'hotkeys-js'\nimport { observer } from 'mobx-react'\nimport Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport Snackbar from '@material-ui/core/Snackbar'\n\nimport { useWorkspace } from 'src/store/hooks'\n\nimport readFile from 'src/utils/readFile'\n\nimport outputFile from 'src/file/outputFile'\nimport saveProject from 'src/file/saveProject'\nimport decodeProject from 'src/file/decodeProject'\n\nimport ExportButton from './ExportButton'\n\nconst useStyles = makeStyles(({ zIndex, spacing }) =>\n  createStyles({\n    root: {\n      position: 'relative',\n      zIndex: zIndex.appBar,\n    },\n    appName: {\n      fontSize: '1.25rem',\n      fontWeight: 'bolder',\n      marginRight: spacing(4),\n    },\n    appNameSup: {\n      fontWeight: 'lighter',\n      fontSize: '0.5em',\n      marginLeft: '0.5rem',\n    },\n    btn: {\n      textTransform: 'none',\n    },\n  }),\n)\n\nconst TitleBar: FunctionComponent<unknown> = () => {\n  const classes = useStyles()\n  const [toast, setToast] = useState<{\n    open: boolean\n    component: React.ReactNode | null\n  }>({ open: false, component: null })\n  const worckSpace = useWorkspace()\n  const labelRef = useRef<HTMLLabelElement>(null)\n  const { addProject } = worckSpace\n  const project = worckSpace.currentProject\n  const handleLoad = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    if (e.target?.files && e.target.files[0]) {\n      readFile(e.target.files[0]).then((buffer) => {\n        try {\n          if (buffer instanceof ArrayBuffer) addProject(decodeProject(buffer))\n        } catch (err) {\n          setToast({\n            open: true,\n            component: (\n              <Box display='flex' alignItems='center'>\n                <ErrorIcon />\n                {`${err.toString()}`}\n              </Box>\n            ),\n          })\n        }\n      })\n    }\n  }\n\n  const handleNewProject = useCallback(\n    (e: { preventDefault(): void }) => {\n      e.preventDefault()\n      addProject()\n      return false\n    },\n    [addProject],\n  )\n\n  const handleSaveProject = useCallback(\n    (e: { preventDefault(): void }) => {\n      e.preventDefault()\n      saveProject(toJS(project))\n      return false\n    },\n    [project],\n  )\n\n  const handleSaveBitmapFont = useCallback(\n    (config) => {\n      outputFile(project, config)\n    },\n    [project],\n  )\n\n  const handleOpenProject = useCallback((e: { preventDefault(): void }) => {\n    e.preventDefault()\n    if (labelRef.current) labelRef.current.click()\n    return false\n  }, [])\n\n  const handleToastClose = () => {\n    setToast((t) => {\n      return {\n        ...t,\n        open: false,\n      }\n    })\n  }\n\n  useEffect(() => {\n    hotkeys.unbind('alt+n,control+n')\n    hotkeys.unbind('ctrl+s')\n    hotkeys.unbind('ctrl+o,command+o')\n    hotkeys('alt+n,control+n', handleNewProject)\n    hotkeys('ctrl+s', handleSaveProject)\n    hotkeys('ctrl+o,command+o', handleOpenProject)\n    return () => {\n      hotkeys.unbind('alt+n,control+n')\n      hotkeys.unbind('ctrl+s')\n      hotkeys.unbind('ctrl+o,command+o')\n    }\n  }, [handleNewProject, handleOpenProject, handleSaveProject])\n\n  return (\n    <Box\n      className={classes.root}\n      bgcolor='background.titleBar'\n      paddingX={4}\n      display='flex'\n      alignItems='center'\n    >\n      {/* lowing modifiers: ⇧, shift, option, ⌥, alt, ctrl, control, command, and ⌘. */}\n      <Typography variant='h1' className={classes.appName}>\n        SnowB BMF\n        <sup className={classes.appNameSup}>BETA</sup>\n      </Typography>\n      <Box flex='auto' paddingX={4}>\n        <Button\n          className={classes.btn}\n          title='New Project (ALT + N)'\n          onClick={handleNewProject}\n        >\n          New\n        </Button>\n        <Button\n          className={classes.btn}\n          title='Open Project (⌘ + O)'\n          component='label'\n          ref={labelRef}\n        >\n          Open\n          <input type='file' onChange={handleLoad} accept='.sbf' hidden />\n        </Button>\n        <Button\n          className={classes.btn}\n          title='Save Project (⌘ + S)'\n          onClick={handleSaveProject}\n        >\n          Save\n        </Button>\n        <ExportButton className={classes.btn} onSave={handleSaveBitmapFont} />\n      </Box>\n      <IconButton\n        size='small'\n        component='a'\n        href='https://github.com/SilenceLeo/snowb-bmf'\n        target='_blank'\n        title='GitHub'\n      >\n        <GitHubIcon />\n      </IconButton>\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={toast.open}\n        onClose={handleToastClose}\n        message={toast.component}\n      />\n    </Box>\n  )\n}\nexport default observer(TitleBar)\n","import { saveAs } from 'file-saver'\nimport { Project } from 'src/store'\nimport proto, { IProject } from 'src/proto'\n\nimport prefix from './prefix'\n\nexport default function saveProject(project: Project): void {\n  // font\n  if (project.style.font.font) {\n    project.style.font.font = new Uint8Array(project.style.font.font)\n  }\n\n  // images\n  project.glyphImages.forEach((glyphImage) => {\n    if (glyphImage.buffer) glyphImage.buffer = new Uint8Array(glyphImage.buffer)\n  })\n\n  // fill\n  if (project.style.fill.patternTexture.buffer) {\n    project.style.fill.patternTexture.buffer = new Uint8Array(\n      project.style.fill.patternTexture.buffer,\n    )\n  }\n\n  // stroke\n  if (project.style.stroke.patternTexture.buffer) {\n    project.style.stroke.patternTexture.buffer = new Uint8Array(\n      project.style.stroke.patternTexture.buffer,\n    )\n  }\n\n  const protoProject = proto.Project.create((project as unknown) as IProject)\n  const projectBuffer = proto.Project.encode(protoProject).finish()\n  const perfixBuffer = prefix()\n\n  const buffer = new Uint8Array(\n    perfixBuffer.byteLength + projectBuffer.byteLength,\n  )\n  buffer.set(perfixBuffer, 0)\n  buffer.set(projectBuffer, perfixBuffer.byteLength)\n\n  saveAs(new Blob([buffer]), `${project.name}.sbf`)\n}\n","import JSZip from 'jszip'\nimport { saveAs } from 'file-saver'\nimport { Project } from 'src/store'\nimport getXmlString from './getXmlString'\nimport getLuaString from './getLuaString'\nimport getTextString from './getTextString'\nimport toOutputInfo from './toOutputInfo'\n\nexport default function outputFile(\n  project: Project,\n  config = {\n    type: 'xml',\n    ext: 'fnt',\n  },\n): void {\n  const zip = new JSZip()\n  const { packCanvas, name } = project\n  const bmfont = toOutputInfo(project)\n  let text = ''\n\n  switch (config.type) {\n    case 'text':\n      text = getTextString(bmfont)\n      break\n    case 'lua':\n      text = getLuaString(bmfont)\n      break\n    default:\n      text = getXmlString(bmfont)\n      break\n  }\n\n  zip.file(`${name}.${config.ext}`, text)\n  if (packCanvas) {\n    packCanvas.toBlob((blob) => {\n      if (blob) zip.file(`${name}.png`, blob)\n      zip\n        .generateAsync({ type: 'blob' })\n        .then((content) => saveAs(content, `${name}.zip`))\n    })\n  }\n}\n","import React, { FunctionComponent } from 'react'\nimport { SketchPicker, ColorResult } from 'react-color'\nimport { useTheme, makeStyles, createStyles } from '@material-ui/core/styles'\nimport Popper, { PopperPlacementType } from '@material-ui/core/Popper'\n\nexport interface ChildrenProps {\n  open: boolean\n  color: string\n  placement: PopperPlacementType\n  anchorEl: HTMLDivElement | null\n  onChange(color: string): void\n}\n\nconst usePickerStyle = () => {\n  const theme = useTheme()\n  const { palette } = theme\n\n  if (palette.type === 'light') return {}\n\n  return {\n    default: {\n      picker: {\n        background: palette.background.titleBar,\n        shadow: theme.shadows[24],\n      },\n      alpha: {\n        background: '#fff',\n      },\n      color: {\n        background: '#fff',\n      },\n    },\n  }\n}\n\nconst useStyles = makeStyles(({ palette }) =>\n  createStyles({\n    picker: {\n      '& *': {\n        color: `${palette.text.primary} !important`,\n        borderColor: `${palette.divider} !important`,\n      },\n      '& input': {\n        background: 'none',\n        color: `${palette.text.primary} !important`,\n        boxShadow: `none !important`,\n        border: `1px solid ${palette.divider} !important`,\n      },\n    },\n  }),\n)\n\nconst WrappedSketchPicker: FunctionComponent<Partial<ChildrenProps>> = (\n  props: Partial<ChildrenProps>,\n) => {\n  const { open, anchorEl, color, onChange, placement } = props\n  const classes = useStyles()\n  const pickerStyle = usePickerStyle()\n  return (\n    <Popper\n      open={!!open}\n      anchorEl={anchorEl}\n      placement={placement || 'bottom'}\n      style={{ zIndex: 999999 }}\n    >\n      <SketchPicker\n        color={color}\n        styles={pickerStyle}\n        className={classes.picker}\n        onChange={({ rgb }: ColorResult) => {\n          if (onChange)\n            onChange(\n              `rgba(${rgb.r},${rgb.g},${rgb.b},${\n                typeof rgb.a === 'undefined' ? 1 : rgb.a\n              })`,\n            )\n        }}\n      />\n    </Popper>\n  )\n}\n\nexport default WrappedSketchPicker\n","import React, { FunctionComponent, useRef, useState } from 'react'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener'\n\nimport WrappedSketchPicker from '../WrappedSketchPicker'\n\nexport interface ColorInputProps {\n  color?: string\n  onChange?: (color: string) => void\n}\n\nconst useStyles = makeStyles(({ palette, bgPixel }: Theme) =>\n  createStyles({\n    root: {\n      overflow: 'hidden',\n    },\n    swatch: {\n      ...bgPixel,\n      display: 'inline-block',\n      cursor: 'pointer',\n    },\n    color: {\n      width: '46px',\n      height: '24px',\n      border: `5px solid ${palette.primary.main}`,\n      backgroundColor: (props: ColorInputProps) => props.color || '',\n    },\n  }),\n)\n\nconst ColorInput: FunctionComponent<ColorInputProps> = (\n  props: ColorInputProps,\n) => {\n  const { color, onChange } = props\n  const classes = useStyles(props)\n  const anchorEl = useRef(null)\n  const [open, setOpen] = useState(false)\n\n  return (\n    <ClickAwayListener\n      mouseEvent='onMouseDown'\n      onClickAway={() => setOpen(false)}\n    >\n      <div aria-hidden className={classes.swatch} ref={anchorEl}>\n        <div\n          aria-hidden\n          className={classes.color}\n          onClick={() => setOpen(!open)}\n        />\n        <WrappedSketchPicker\n          open={open}\n          anchorEl={anchorEl.current}\n          color={color || '#000000'}\n          onChange={onChange}\n        />\n      </div>\n    </ClickAwayListener>\n  )\n}\n\nexport default ColorInput\n","import React, { FunctionComponent } from 'react'\n\nimport GridInput from 'src/app/components/GridInput'\nimport ColorInput from 'src/app/components/ColorInput'\n\ninterface FormColorProps {\n  color: string\n  onChange(color: string): void\n}\n\nconst FormColor: FunctionComponent<FormColorProps> = (\n  props: FormColorProps,\n) => {\n  const { color, onChange } = props\n\n  return (\n    <GridInput before='Color:' childrenWidth={3}>\n      <ColorInput color={color} onChange={onChange} />\n    </GridInput>\n  )\n}\n\nexport default FormColor\n","import React, {\n  FunctionComponent,\n  DetailedHTMLProps,\n  HTMLAttributes,\n} from 'react'\nimport clsx from 'clsx'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\n\ninterface ColorStopPorps\n  extends DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement> {\n  left?: string | number\n  top?: string | number\n  color: string\n  isActive: boolean\n}\n\nconst useStyles = makeStyles(({ bgPixel, palette }: Theme) =>\n  createStyles({\n    root: {\n      ...bgPixel,\n      width: '12px',\n      height: '12px',\n      border: `solid ${palette.primary.main}`,\n      borderWidth: '0 1px 1px',\n      position: 'absolute',\n      cursor: 'pointer',\n      marginLeft: '-6px',\n      left: (props) => props.left || 0,\n      zIndex: (props) => (props.isActive ? 2 : 1),\n      '&:before,&:after': {\n        position: 'absolute',\n        content: '\"\"',\n        width: 0,\n        height: 0,\n        borderStyle: 'solid',\n        left: '0',\n      },\n      '&:before': {\n        top: '-6px',\n        left: '-1px',\n        borderWidth: '0 6px 6px 6px',\n        borderColor: `transparent transparent ${palette.primary.dark} transparent`,\n      },\n      '&:after': {\n        top: '-5px',\n        borderWidth: '0 5px 5px 5px',\n        borderColor: (props) => {\n          const activeColor =\n            palette.type === 'dark'\n              ? palette.common.white\n              : palette.common.black\n\n          return `transparent transparent ${\n            props.isActive ? activeColor : palette.grey[600]\n          } transparent`\n        },\n      },\n    },\n    color: {\n      width: '100%',\n      height: '100%',\n      pointerEvents: 'none',\n      backgroundColor: ({ color }: ColorStopPorps) => color || 'transparent',\n    },\n  }),\n)\n\nconst ColorStop: FunctionComponent<ColorStopPorps> = (\n  props: ColorStopPorps,\n) => {\n  const { left, top, color, isActive, className, ...divProps } = props\n  const classes = useStyles({ left, top, color, isActive })\n\n  return (\n    <div className={clsx(classes.root, className)} {...divProps}>\n      <div className={classes.color} />\n    </div>\n  )\n}\n\nexport default ColorStop\n","import React, {\n  FunctionComponent,\n  useCallback,\n  useRef,\n  MutableRefObject,\n  useState,\n  useEffect,\n} from 'react'\nimport clsx from 'clsx'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport ColorStop from './ColorStop'\n\nexport interface AddPaletteItem {\n  offset: number\n  color: string\n}\n\nexport interface PaletteItem extends AddPaletteItem {\n  id: number\n  offset: number\n  color: string\n}\n\ninterface ColorStopsHolderProps {\n  className?: string\n  palette: PaletteItem[]\n  activeId?: number\n  onAdd(offset: number): void\n  onUpdate(paletteItem: Partial<AddPaletteItem>, isDelete?: boolean): void\n  onSelect(id?: number): void\n}\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      width: '100%',\n      height: '17px',\n      position: 'relative',\n      cursor: 'crosshair',\n    },\n  }),\n)\n\nconst ColorStopsHolder: FunctionComponent<ColorStopsHolderProps> = (\n  props: ColorStopsHolderProps,\n) => {\n  const { className, palette, activeId, onAdd, onUpdate, onSelect } = props\n  const classes = useStyles(props)\n  const [width, setWidth] = useState(0)\n  const [startPoint, setStartPoint] = useState({ x: 0, y: 0, offset: 0 })\n  const [isDragging, setIsDragging] = useState(false)\n  const rootRef: MutableRefObject<HTMLDivElement | null> = useRef(null)\n\n  useEffect(() => {\n    if (rootRef.current) {\n      setWidth(rootRef.current.clientWidth)\n    }\n  }, [rootRef])\n\n  const handleAddPalette = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n  ) => {\n    const target = rootRef.current\n    if (!target || e.buttons !== 1) return\n    const { left } = target.getBoundingClientRect()\n    const offset = (e.clientX - left) / width\n    onAdd(offset)\n    setIsDragging(true)\n    setStartPoint({ x: e.clientX, y: e.clientY, offset })\n  }\n\n  const handleMouseDown = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    paletteItem: PaletteItem,\n  ) => {\n    if (e.buttons !== 1) return\n    e.preventDefault()\n    e.stopPropagation()\n    setStartPoint({ x: e.clientX, y: e.clientY, offset: paletteItem.offset })\n    setIsDragging(true)\n    onSelect(paletteItem.id)\n  }\n\n  const handleMouseMove = useCallback(\n    (e: MouseEvent) => {\n      if (!isDragging || !activeId) return\n      if (e.buttons !== 1) {\n        setIsDragging(false)\n        return\n      }\n      const idx = palette.findIndex(\n        (paletteItem) => paletteItem.id === activeId,\n      )\n\n      if (idx < 0) return\n      const newPalette = [...palette]\n\n      if (Math.abs(e.clientY - startPoint.y) > 50) {\n        onUpdate(newPalette[idx], true)\n        return\n      }\n\n      const paletteItem = newPalette[idx]\n      const offset = Math.min(\n        Math.max((e.clientX - startPoint.x) / width + startPoint.offset, 0),\n        1,\n      )\n      newPalette[idx] = { ...paletteItem, offset }\n      onUpdate({ offset })\n    },\n    [\n      activeId,\n      isDragging,\n      onUpdate,\n      palette,\n      startPoint.offset,\n      startPoint.x,\n      startPoint.y,\n      width,\n    ],\n  )\n\n  const handleMouseUp = useCallback((e: MouseEvent) => {\n    e.stopPropagation()\n    e.preventDefault()\n    setIsDragging(false)\n  }, [])\n\n  useEffect(() => {\n    if (isDragging) {\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    } else {\n      window.removeEventListener('mousemove', handleMouseMove)\n      window.removeEventListener('mouseup', handleMouseUp)\n    }\n\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove)\n      window.removeEventListener('mouseup', handleMouseUp)\n    }\n  }, [handleMouseMove, handleMouseUp, isDragging])\n\n  return (\n    <div\n      aria-hidden\n      ref={rootRef}\n      className={clsx(classes.root, className)}\n      onMouseDown={handleAddPalette}\n    >\n      {palette.map((paletteItem) => (\n        <ColorStop\n          key={paletteItem.id}\n          left={width * paletteItem.offset}\n          color={paletteItem.color}\n          isActive={paletteItem.id === activeId}\n          onMouseDown={(e) => handleMouseDown(e, paletteItem)}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default ColorStopsHolder\n","import React, { FunctionComponent, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nexport interface PaletteItem {\n  id: number | string\n  offset: number\n  color: string\n}\n\ninterface PaletteProps {\n  width?: number | string\n  height?: number | string\n  palette: PaletteItem[]\n}\n\nconst useStyles = makeStyles(({ bgPixel }) => ({\n  root: {\n    ...bgPixel,\n    width: (props: PaletteProps) => props.width || '100%',\n    height: (props: PaletteProps) => props.height || '100%',\n    border: '1px solid #ccc',\n  },\n  svg: {\n    width: '100%',\n    height: '100%',\n    verticalAlign: 'top',\n  },\n}))\n\nconst Palette: FunctionComponent<PaletteProps> = (\n  props: PaletteProps,\n): JSX.Element => {\n  const classes = useStyles(props)\n  const { palette } = props\n  const [id] = useState(`palette_${Math.random().toString().substr(2, 9)}`)\n  const sortedPalette = [...palette].sort(\n    ({ offset: offset1 }, { offset: offset2 }) => offset1 - offset2,\n  )\n\n  return (\n    <div className={classes.root}>\n      <svg className={classes.svg}>\n        <defs>\n          <linearGradient id={id} x1='0' y1='0.5' x2='1' y2='0.5'>\n            {sortedPalette.map((item) => (\n              <stop\n                key={item.id}\n                offset={item.offset}\n                style={{ stopColor: item.color }}\n              />\n            ))}\n          </linearGradient>\n        </defs>\n        <rect x='0' y='0' width='100%' height='100%' fill={`url(#${id})`} />\n      </svg>\n    </div>\n  )\n}\n\nexport default Palette\n","import React, { FunctionComponent, useRef, useState, useEffect } from 'react'\nimport Color from 'color'\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener'\n\nimport ColorStopsHolder, {\n  AddPaletteItem,\n  PaletteItem,\n} from './ColorStopsHolder'\nimport Palette from '../Palette'\n\nexport interface GradientBuilderProps {\n  children?: JSX.Element\n  palette: PaletteItem[]\n  onAdd: (addPaletteItem: AddPaletteItem) => void\n  onUpdate: (palette: PaletteItem[]) => void\n}\n\nexport interface ChildrenProps {\n  open: boolean\n  anchorEl: HTMLDivElement | null\n  color: string\n  onChange(color: string): void\n}\n\nconst GradientBuilder: FunctionComponent<GradientBuilderProps> = (\n  props: GradientBuilderProps,\n) => {\n  const { children, palette, onUpdate, onAdd } = props\n  const rootEl: React.MutableRefObject<HTMLDivElement | null> = useRef(null)\n  const [oldPalette, setOldPalette] = useState([...palette])\n  const [activeId, setActiveId] = useState<number>(0)\n  const [activeColor, setActiveColor] = useState<string>('')\n  const [isAdd, setIsAdd] = useState(false)\n\n  useEffect(() => {\n    if (isAdd) {\n      const newIds = palette.map(({ id }) => id)\n      const oldIds = oldPalette.map(({ id }) => id)\n      const diff = Array.from(new Set([...newIds, ...oldIds])).filter(\n        (id) => !oldIds.includes(id),\n      )\n      if (diff.length > 0) {\n        setActiveId(diff[0])\n      }\n      setIsAdd(() => false)\n    }\n  }, [palette, isAdd, oldPalette])\n\n  useEffect(() => {\n    setOldPalette([...palette])\n  }, [palette])\n\n  useEffect(() => {\n    if (activeId) {\n      const paletteItem = palette.find((item) => item.id === activeId)\n      if (paletteItem) {\n        setActiveColor(paletteItem.color)\n      }\n    }\n  }, [activeId, palette])\n\n  const handleAdd = (offset: number) => {\n    const list = [...palette]\n    const current = { offset, color: '#000' }\n    let left: PaletteItem | undefined\n    let right: PaletteItem | undefined\n    setActiveId(0)\n\n    list.forEach((item) => {\n      if (\n        item.offset < current.offset &&\n        (!left || left.offset < item.offset)\n      ) {\n        left = item\n      } else if (!right || right.offset > item.offset) {\n        right = item\n      }\n    })\n\n    if (left && right) {\n      const offsetSpace =\n        (current.offset - left.offset) / (right.offset - left.offset)\n      const leftColor = Color(left.color)\n      const rightColor = Color(right.color)\n\n      const r =\n        (rightColor.red() - leftColor.red()) * offsetSpace + leftColor.red()\n      const g =\n        (rightColor.green() - leftColor.green()) * offsetSpace +\n        leftColor.green()\n      const b =\n        (rightColor.blue() - leftColor.blue()) * offsetSpace + leftColor.blue()\n      const a =\n        (rightColor.alpha() - leftColor.alpha()) * offsetSpace +\n        leftColor.alpha()\n      current.color = `rgba(${Math.round(r)},${Math.round(g)},${Math.round(\n        b,\n      )},${Math.round(a)})`\n    } else if (left || right) {\n      current.color = ((left || right) as PaletteItem).color\n    }\n\n    onAdd(current)\n    setIsAdd(true)\n  }\n\n  const handleUpdate = (item: Partial<AddPaletteItem>, isDelete = false) => {\n    if (!activeId) return\n\n    const newPalette = [...palette]\n    const idx = newPalette.findIndex(\n      (paletteItem) => paletteItem.id === activeId,\n    )\n    if (isDelete) {\n      onUpdate([...newPalette.slice(0, idx), ...newPalette.slice(idx + 1)])\n      setActiveId(0)\n    } else {\n      const updateItem = { ...newPalette[idx], ...item }\n      onUpdate([\n        ...newPalette.slice(0, idx),\n        updateItem,\n        ...newPalette.slice(idx + 1),\n      ])\n    }\n  }\n\n  return (\n    <ClickAwayListener\n      mouseEvent='onMouseDown'\n      onClickAway={() => setActiveId(0)}\n    >\n      <div ref={rootEl}>\n        <Palette palette={palette} height='35px' />\n        <ColorStopsHolder\n          palette={palette}\n          activeId={activeId}\n          onAdd={handleAdd}\n          onUpdate={handleUpdate}\n          onSelect={(id) => setActiveId(id || 0)}\n        />\n        {children\n          ? React.cloneElement(children, {\n              open: !!activeId || isAdd,\n              anchorEl: rootEl.current,\n              color: activeColor,\n              onChange: (color: string) =>\n                handleUpdate({\n                  color,\n                }),\n            })\n          : null}\n      </div>\n    </ClickAwayListener>\n  )\n}\nexport default GradientBuilder\n","import React, {\n  useState,\n  useRef,\n  useEffect,\n  FunctionComponent,\n  useCallback,\n} from 'react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nexport interface AnglePickerProps {\n  width?: number\n  angle: number\n  onChange(angle: number): void\n}\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      width: (props: AnglePickerProps) =>\n        props.width ? `${props.width}px` : '36px',\n      height: (props) => (props.width ? `${props.width}px` : '36px'),\n      position: 'relative',\n      cursor: 'crosshair',\n      overflow: 'hidden',\n      borderRadius: '100%',\n      background: '#FFF',\n    },\n    point: {\n      width: '6px',\n      height: '6px',\n      borderRadius: '100%',\n      position: 'relative',\n      left: '50%',\n      top: '50%',\n      marginTop: '-2px',\n      background: '#000',\n      pointerEvents: 'none',\n      transformOrigin: `0 50%`,\n      transform: (props) =>\n        `rotate(${props.angle || 0}deg) translate(${\n          (props.width || 36) / 2 - 8\n        }px, 0)`,\n    },\n  }),\n)\n\nconst AnglePicker: FunctionComponent<AnglePickerProps> = (\n  props: AnglePickerProps,\n) => {\n  const { onChange } = props\n  const rootRef = useRef<HTMLDivElement>(null)\n  const [isDragging, setIsDragging] = useState(false)\n  const classes = useStyles(props)\n\n  const handleMouseMove = useCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent> | MouseEvent) => {\n      if (!rootRef.current) return\n\n      const { clientX, clientY } = e\n      const bounds = rootRef.current.getBoundingClientRect()\n      const radians = Math.atan2(\n        clientY - (bounds.y + bounds.height / 2),\n        clientX - (bounds.x + bounds.width / 2),\n      )\n      onChange(Math.round(radians * (180 / Math.PI)))\n    },\n    [onChange],\n  )\n\n  const handleMouseUp = useCallback((e: MouseEvent) => {\n    e.stopPropagation()\n    e.preventDefault()\n    setIsDragging(false)\n  }, [])\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!rootRef.current) return\n    setIsDragging(true)\n    handleMouseMove(e)\n  }\n\n  useEffect(() => {\n    if (isDragging) {\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    } else {\n      window.removeEventListener('mousemove', handleMouseMove)\n      window.removeEventListener('mouseup', handleMouseUp)\n    }\n\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove)\n      window.removeEventListener('mouseup', handleMouseUp)\n    }\n  }, [handleMouseMove, handleMouseUp, isDragging])\n\n  return (\n    <div\n      aria-hidden\n      className={classes.root}\n      ref={rootRef}\n      onMouseDown={handleMouseDown}\n    >\n      <div className={classes.point} />\n    </div>\n  )\n}\n\nexport default AnglePicker\n","import React, { FunctionComponent } from 'react'\nimport Input from '@material-ui/core/Input'\n\nimport GridInput from 'src/app/components/GridInput'\nimport AnglePicker, { AnglePickerProps } from 'src/app/components/AnglePicker'\n\nconst FormAngle: FunctionComponent<AnglePickerProps> = (\n  props: AnglePickerProps,\n) => {\n  const { angle, onChange } = props\n\n  return (\n    <GridInput\n      before='Angle:'\n      after={<AnglePicker width={24} angle={angle} onChange={onChange} />}\n    >\n      <Input\n        value={angle}\n        fullWidth\n        type='number'\n        onChange={(e) => onChange(Number(e.target.value))}\n      />\n    </GridInput>\n  )\n}\n\nexport default FormAngle\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Box from '@material-ui/core/Box'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\nimport GradientPicker from 'src/app/components/GradientPicker'\nimport WrappedSketchPicker from 'src/app/components/WrappedSketchPicker'\nimport { Gradient, GradientType } from 'src/store'\nimport GridInput from 'src/app/components/GridInput'\n\nimport FormAngle from '../FormAngle'\n\ninterface FormGradientProps {\n  gradient: Gradient\n}\n\nconst FormGradient: FunctionComponent<FormGradientProps> = (\n  props: FormGradientProps,\n) => {\n  const {\n    gradient: {\n      type,\n      angle,\n      palette,\n      addColor,\n      updatePalette,\n      setAngle,\n      setType,\n    },\n  } = props\n\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <FormAngle angle={angle} onChange={setAngle} />\n      </Box>\n\n      <Box paddingX={2} marginY={4}>\n        <GridInput before='Type:' component='div' childrenWidth={8}>\n          <RadioGroup\n            row\n            name='type'\n            value={type}\n            onChange={(e) => setType(Number(e.target.value))}\n            style={{ flexWrap: 'nowrap' }}\n          >\n            <FormControlLabel\n              value={GradientType.LINEAR}\n              control={<Radio size='small' color='default' />}\n              label='Linear'\n            />\n            <FormControlLabel\n              value={GradientType.RADIAL}\n              control={<Radio size='small' color='default' />}\n              label='Radial'\n            />\n          </RadioGroup>\n        </GridInput>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <GradientPicker\n          palette={palette}\n          onAdd={(e) => addColor(e.offset, e.color)}\n          onUpdate={updatePalette}\n        >\n          <WrappedSketchPicker />\n        </GradientPicker>\n      </Box>\n    </>\n  )\n}\n\nexport default observer(FormGradient)\n","import React, { FunctionComponent } from 'react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\n\nimport readFile from 'src/utils/readFile'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      width: theme.spacing(12),\n      height: theme.spacing(12),\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      position: 'relative',\n      border: `1px solid ${theme.palette.primary.main}`,\n      cursor: 'pointer',\n      ...theme.bgPixel,\n    },\n    image: {\n      maxWidth: '100%',\n      maxHeight: '100%',\n      pointerEvents: 'none',\n    },\n  }),\n)\n\ninterface FileSelectorProps {\n  src: string\n  onChange(image: ArrayBuffer): void\n}\n\nconst FileSelector: FunctionComponent<FileSelectorProps> = (\n  props: FileSelectorProps,\n) => {\n  const { src, onChange } = props\n  const classes = useStyles()\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    if (!e.target.files) return\n    if (e.target.files.length > 0) {\n      readFile(e.target.files[0]).then((buffer) => {\n        if (buffer instanceof ArrayBuffer) onChange(buffer)\n      })\n    }\n  }\n\n  return (\n    <Box component='label' className={classes.root}>\n      <input\n        hidden\n        type='file'\n        multiple\n        accept='image/*'\n        onChange={handleChange}\n      />\n      <img className={classes.image} src={src} alt='' />\n    </Box>\n  )\n}\n\nexport default FileSelector\n","import React, { FunctionComponent } from 'react'\n\nimport GridInput from 'src/app/components/GridInput'\nimport Box from '@material-ui/core/Box'\nimport Input from '@material-ui/core/Input'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport { PatternTexture, Repetition } from 'src/store'\n\nimport FileSelector from './FileSelector'\n\ninterface FormImageProps {\n  patternTexture: PatternTexture\n  scale: number\n  src: string\n  // onChangeImage(buffer: ArrayBuffer): void\n  // onChangeScale(scale: number): void\n}\n\nconst FormImage: FunctionComponent<FormImageProps> = (\n  props: FormImageProps,\n) => {\n  const { patternTexture } = props\n  const {\n    src,\n    scale,\n    repetition,\n    setRepetition,\n    setScale,\n    setImage,\n  } = patternTexture\n\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <GridInput\n          component='div'\n          before='Scale:'\n          after={<FileSelector src={src} onChange={setImage} />}\n        >\n          <Input\n            value={scale}\n            fullWidth\n            type='number'\n            inputProps={{ min: 0.01, step: 0.1 }}\n            onChange={(e) => setScale(Number(e.target.value))}\n          />\n        </GridInput>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <GridInput before='Repeat:'>\n          <Select\n            value={repetition}\n            onChange={(e) => setRepetition(e.target.value as Repetition)}\n            displayEmpty\n            fullWidth\n          >\n            <MenuItem value='repeat'>Repeat</MenuItem>\n            <MenuItem value='repeat-x'>Repeat-x</MenuItem>\n            <MenuItem value='repeat-y'>Repeat-y</MenuItem>\n            <MenuItem value='no-repeat'>No Repeat</MenuItem>\n          </Select>\n        </GridInput>\n      </Box>\n    </>\n  )\n}\n\nexport default FormImage\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Box from '@material-ui/core/Box'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\nimport { FontStyleConfig, FillType } from 'src/store'\n\nimport FormColor from '../FormColor'\nimport FormGradient from '../FormGradient'\nimport FormImage from '../FormImage'\n\ninterface FormFillProps {\n  config: FontStyleConfig\n}\n\nconst FormFill: FunctionComponent<FormFillProps> = (props: FormFillProps) => {\n  const {\n    config: { type, color, gradient, patternTexture, setType, setColor },\n  } = props\n\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <RadioGroup\n          row\n          name='type'\n          value={type}\n          onChange={(e) => setType(Number(e.target.value))}\n        >\n          <FormControlLabel\n            value={FillType.SOLID}\n            control={<Radio size='small' color='default' />}\n            label='Solid'\n          />\n          <FormControlLabel\n            value={FillType.GRADIENT}\n            control={<Radio size='small' color='default' />}\n            label='Gradient'\n          />\n          <FormControlLabel\n            value={FillType.IMAGE}\n            control={<Radio size='small' color='default' />}\n            label='Image'\n          />\n        </RadioGroup>\n      </Box>\n      {type === 0 ? (\n        <Box paddingX={2} marginY={4}>\n          <FormColor color={color} onChange={setColor} />\n        </Box>\n      ) : null}\n      {type === 1 ? <FormGradient gradient={gradient} /> : null}\n      {type === 2 ? (\n        <FormImage\n          patternTexture={patternTexture}\n          src={patternTexture.src}\n          scale={patternTexture.scale}\n          // onChangeImage={patternTexture.setImage}\n          // onChangeScale={patternTexture.setScale}\n        />\n      ) : null}\n    </>\n  )\n}\n\nexport default observer(FormFill)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\n\nimport { useFill } from 'src/store/hooks'\nimport FormFill from '../../../common/FormFill'\n\nconst Fill: FunctionComponent<unknown> = () => {\n  const fill = useFill()\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <Typography>Fill</Typography>\n      </Box>\n      <FormFill config={fill} />\n    </>\n  )\n}\n\nexport default observer(Fill)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Input from '@material-ui/core/Input'\nimport Switch from '@material-ui/core/Switch'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\n\nimport { useStyle } from 'src/store/hooks'\nimport GridInput from 'src/app/components/GridInput'\n\nimport FormFill from 'src/app/layout/common/FormFill'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    disabled: {\n      opacity: 0.3,\n      pointerEvents: 'none',\n    },\n    title: {\n      flex: 1,\n    },\n  }),\n)\n\nconst Stroke: FunctionComponent<unknown> = () => {\n  const classes = useStyles()\n  const { stroke, useStroke, setUseStroke } = useStyle()\n  const { setWidth, lineJoin, setLineJoin, lineCap, setLineCap } = stroke\n\n  return (\n    <>\n      <Box\n        component='label'\n        display='flex'\n        alignItems='center'\n        paddingX={2}\n        marginY={4}\n      >\n        <Typography component='div' className={classes.title}>\n          Stroke\n        </Typography>\n        Off\n        <Switch\n          size='small'\n          checked={useStroke}\n          onChange={(e) => setUseStroke(e.target.checked)}\n        />\n        On\n      </Box>\n      <div className={useStroke ? '' : classes.disabled}>\n        <Box paddingX={2} marginY={4}>\n          <GridInput before='Width:' after='px'>\n            <Input\n              value={stroke?.width || 0}\n              fullWidth\n              type='number'\n              inputProps={{ min: 0 }}\n              onChange={(e) => setWidth(Number(e.target.value))}\n            />\n          </GridInput>\n        </Box>\n\n        <Box paddingX={2} marginY={4}>\n          <GridInput before='Line Cap:' component='div' childrenWidth={8}>\n            <ButtonGroup size='small' color='primary'>\n              <Button\n                onClick={() => setLineCap('butt')}\n                variant={lineCap === 'butt' ? 'contained' : 'outlined'}\n              >\n                Butt\n              </Button>\n              <Button\n                onClick={() => setLineCap('round')}\n                variant={lineCap === 'round' ? 'contained' : 'outlined'}\n              >\n                Round\n              </Button>\n              <Button\n                onClick={() => setLineCap('square')}\n                variant={lineCap === 'square' ? 'contained' : 'outlined'}\n              >\n                Square\n              </Button>\n            </ButtonGroup>\n          </GridInput>\n        </Box>\n\n        <Box paddingX={2} marginY={4}>\n          <GridInput before='Line Join:' component='div' childrenWidth={8}>\n            <ButtonGroup size='small' color='primary'>\n              <Button\n                onClick={() => setLineJoin('miter')}\n                variant={lineJoin === 'miter' ? 'contained' : 'outlined'}\n              >\n                Miter\n              </Button>\n              <Button\n                onClick={() => setLineJoin('round')}\n                variant={lineJoin === 'round' ? 'contained' : 'outlined'}\n              >\n                Round\n              </Button>\n              <Button\n                onClick={() => setLineJoin('bevel')}\n                variant={lineJoin === 'bevel' ? 'contained' : 'outlined'}\n              >\n                Bevel\n              </Button>\n            </ButtonGroup>\n          </GridInput>\n        </Box>\n        <FormFill config={stroke} />\n      </div>\n    </>\n  )\n}\n\nexport default observer(Stroke)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport Input from '@material-ui/core/Input'\nimport Switch from '@material-ui/core/Switch'\n\nimport { useStyle } from 'src/store/hooks'\nimport GridInput from 'src/app/components/GridInput'\nimport FormColor from '../../../common/FormColor'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    disabled: {\n      opacity: 0.3,\n      pointerEvents: 'none',\n    },\n    title: {\n      flex: 1,\n    },\n  }),\n)\n\nconst Shadow: FunctionComponent<unknown> = () => {\n  const { shadow, useShadow, setUseShadow } = useStyle()\n  const { setOffsetX, setOffsetY, setBlur, setColor } = shadow\n  const classes = useStyles()\n\n  return (\n    <>\n      <Box\n        component='label'\n        display='flex'\n        alignItems='center'\n        paddingX={2}\n        marginY={4}\n      >\n        <Typography component='div' className={classes.title}>\n          Shadow\n        </Typography>\n        Off\n        <Switch\n          size='small'\n          checked={useShadow}\n          onChange={(e) => setUseShadow(e.target.checked)}\n        />\n        On\n      </Box>\n      <div className={useShadow ? '' : classes.disabled}>\n        <Box paddingX={2} marginY={4}>\n          <GridInput before='Offset X:' after='px'>\n            <Input\n              value={shadow?.offsetX || 0}\n              fullWidth\n              type='number'\n              disabled={!useShadow}\n              onChange={(e) => setOffsetX(Number(e.target.value))}\n            />\n          </GridInput>\n        </Box>\n        <Box paddingX={2} marginY={4}>\n          <GridInput before='Offset Y:' after='px'>\n            <Input\n              value={shadow?.offsetY || 0}\n              fullWidth\n              type='number'\n              disabled={!useShadow}\n              onChange={(e) => setOffsetY(Number(e.target.value))}\n            />\n          </GridInput>\n        </Box>\n        <Box paddingX={2} marginY={4}>\n          <GridInput before='Blur:' after='px'>\n            <Input\n              value={shadow?.blur || 0}\n              fullWidth\n              type='number'\n              disabled={!useShadow}\n              inputProps={{ style: { textAlign: 'right' }, min: 0 }}\n              onChange={(e) => setBlur(Number(e.target.value))}\n            />\n          </GridInput>\n        </Box>\n        <Box paddingX={2} marginY={4}>\n          <FormColor color={shadow?.color || ''} onChange={setColor} />\n        </Box>\n      </div>\n    </>\n  )\n}\nexport default observer(Shadow)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\n\nimport { useStyle } from 'src/store/hooks'\nimport FormColor from '../../../common/FormColor'\n\nconst BackgroundColor: FunctionComponent<unknown> = () => {\n  const { bgColor, setBgColor } = useStyle()\n\n  return (\n    <>\n      <Box\n        component='label'\n        display='flex'\n        alignItems='center'\n        paddingX={2}\n        marginY={4}\n      >\n        <Typography>Background Color</Typography>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <FormColor color={bgColor || ''} onChange={setBgColor} />\n      </Box>\n    </>\n  )\n}\n\nexport default observer(BackgroundColor)\n","import React, { FunctionComponent } from 'react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Divider from '@material-ui/core/Divider'\nimport Typography from '@material-ui/core/Typography'\n\nimport Fill from './modules/Fill'\nimport Stroke from './modules/Stroke'\nimport Shadow from './modules/Shadow'\nimport BackgroundColor from './modules/BackgroundColor'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      overflow: 'hidden',\n      width: '256px',\n    },\n  }),\n)\n\nconst RightBar: FunctionComponent<unknown> = () => {\n  const classes = useStyles()\n\n  return (\n    <Box\n      bgcolor='background.sidebar'\n      display='flex'\n      flexDirection='column'\n      overflow='hidden'\n      className={classes.root}\n    >\n      <Box bgcolor='background.sidebar' boxShadow={2} padding={2}>\n        <Typography variant='subtitle2'>Style Config</Typography>\n      </Box>\n      <Box flex={1} height={0} overflow='hidden auto'>\n        <Fill />\n        <Divider />\n        <Stroke />\n        <Divider />\n        <Shadow />\n        <Divider />\n        <BackgroundColor />\n      </Box>\n    </Box>\n  )\n}\n\nexport default RightBar\n","import { useEffect, useCallback, RefObject, DependencyList } from 'react'\n\ninterface DeltaInfo {\n  deltaScale: number\n  deltaX: number\n  deltaY: number\n}\n\ninterface WheelCallback {\n  (deltaInfo: DeltaInfo): void\n}\n\nfunction useWheel(\n  ref: RefObject<HTMLElement>,\n  onWheel: WheelCallback,\n  deps: DependencyList = [],\n): void {\n  const callback = useCallback(onWheel, [onWheel, deps])\n  const handleWheel = useCallback(\n    (e: WheelEvent) => {\n      e.preventDefault()\n      e.stopPropagation()\n      const { ctrlKey, altKey, deltaX, deltaY } = e\n      if (ctrlKey) {\n        let d = -0.01\n        if (Math.abs(deltaY) > 50) d *= 0.1\n        callback({ deltaScale: deltaY * d, deltaX: 0, deltaY: 0 })\n      } else {\n        let x = -deltaX\n        let y = -deltaY\n        if (deltaX === 0 && altKey && Math.abs(deltaY) > 50) {\n          x = -deltaY\n          y = 0\n        }\n        callback({\n          deltaX: x,\n          deltaY: y,\n          deltaScale: 0,\n        })\n      }\n    },\n    [callback],\n  )\n\n  useEffect(() => {\n    if (!ref.current) return undefined\n\n    const dom = ref.current\n\n    dom.addEventListener('wheel', handleWheel, {\n      passive: false,\n    })\n\n    return () => dom.removeEventListener('wheel', handleWheel)\n  }, [ref, handleWheel])\n}\nexport default useWheel\n","import {\n  useState,\n  useEffect,\n  useMemo,\n  useCallback,\n  DependencyList,\n} from 'react'\n\ninterface OffsetInfo {\n  offsetX: number\n  offsetY: number\n}\n\ninterface WheelCallback {\n  (offsetInfo: OffsetInfo): void\n}\n\nconst point = {\n  x: 0,\n  y: 0,\n}\n\nfunction useSpaceDrag<T extends HTMLElement>(\n  onMove: WheelCallback,\n  deps: DependencyList = [],\n): [0 | 1 | 2, (e: React.MouseEvent<T, MouseEvent>) => void] {\n  const [moveState, setMoveState] = useState({\n    ks: false,\n    ms: false,\n  })\n\n  const dragStatus = useMemo(() => {\n    if (moveState.ks && moveState.ms) return 2\n    if (moveState.ks) return 1\n    return 0\n  }, [moveState.ks, moveState.ms])\n\n  const moveCallback = useCallback(onMove, [onMove, ...deps])\n\n  const handleKeyEvent = useCallback(\n    (e: KeyboardEvent) => {\n      const state = e.keyCode === 32 && e.type === 'keydown'\n      if (moveState.ks === state) return\n      setMoveState((s) => {\n        return {\n          ...s,\n          ks: e.keyCode === 32 && e.type === 'keydown',\n        }\n      })\n    },\n    [moveState.ks],\n  )\n\n  const handleMouseDown = (e: React.MouseEvent<T, MouseEvent>) => {\n    if (!moveState.ks) return\n    const { clientX, clientY } = e\n    point.x = clientX\n    point.y = clientY\n    setMoveState((s) => {\n      return {\n        ...s,\n        ms: true,\n      }\n    })\n  }\n\n  const handleMove = useCallback(\n    (e: MouseEvent) => {\n      const { clientX, clientY } = e\n      const { x, y } = point\n\n      if (clientX - x === 0 && clientY - y === 0) return\n\n      moveCallback({\n        offsetX: clientX - x,\n        offsetY: clientY - y,\n      })\n\n      point.x = clientX\n      point.y = clientY\n    },\n    [moveCallback],\n  )\n\n  const handleEnd = useCallback(() => {\n    setMoveState((s) => {\n      return {\n        ...s,\n        ms: false,\n      }\n    })\n  }, [])\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyEvent)\n    window.addEventListener('keyup', handleKeyEvent)\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyEvent)\n      window.removeEventListener('keyup', handleKeyEvent)\n    }\n  }, [handleKeyEvent])\n\n  useEffect(() => {\n    if (moveState.ks && moveState.ms) {\n      window.addEventListener('mousemove', handleMove)\n      window.addEventListener('mouseup', handleEnd)\n    } else {\n      window.removeEventListener('mousemove', handleMove)\n      window.removeEventListener('mouseup', handleEnd)\n    }\n\n    return () => {\n      window.removeEventListener('mousemove', handleMove)\n      window.removeEventListener('mouseup', handleEnd)\n    }\n  }, [handleEnd, handleMove, moveState.ks, moveState.ms])\n\n  return [dragStatus, handleMouseDown]\n}\nexport default useSpaceDrag\n","import React, { useRef, useEffect, FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport { useProject } from 'src/store/hooks'\nimport useWheel from 'src/app/hooks/useWheel'\nimport useSpaceDrag from 'src/app/hooks/useSpaceDrag'\n\ninterface StyleProps {\n  width: number\n  height: number\n  scale: number\n  offsetX: number\n  offsetY: number\n  dragState: number\n}\n\nconst useStyles = makeStyles(({ bgPixel }) =>\n  createStyles({\n    root: {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden',\n      cursor: (props: StyleProps) => {\n        if (props.dragState === 2) return 'grabbing'\n        if (props.dragState === 1) return 'grab'\n        return 'default'\n      },\n    },\n    canvas: {\n      ...bgPixel,\n      transformOrigin: '50% 50%',\n      position: 'absolute',\n      left: '50%',\n      top: '50%',\n      width: (props: StyleProps) => `${props.width}px`,\n      height: (props: StyleProps) => `${props.height}px`,\n      marginLeft: (props: StyleProps) => `${props.width / -2}px`,\n      marginTop: (props: StyleProps) => `${props.height / -2}px`,\n      transform: (props: StyleProps) =>\n        `scale(${props.scale}) translate(${props.offsetX}px,${props.offsetY}px)`,\n      imageRendering: 'pixelated',\n    },\n  }),\n)\n\nconst PackCanvas: FunctionComponent<unknown> = () => {\n  const {\n    isPacking,\n    ui,\n    layout: { padding },\n    glyphList,\n    style: { bgColor },\n    packCanvas,\n    setCanvas,\n  } = useProject()\n  const { width, height, scale, offsetX, offsetY } = ui\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const domRef = useRef<HTMLDivElement>(null)\n  const [dragState, handleMouseDown] = useSpaceDrag(\n    (offsetInfo) => {\n      const { offsetX: ix, offsetY: iy } = offsetInfo\n      const { scale: os, offsetX: ox, offsetY: oy, setTransform } = ui\n      setTransform({\n        offsetX: ox + ix / os,\n        offsetY: oy + iy / os,\n      })\n    },\n    [ui],\n  )\n\n  const classes = useStyles({\n    width,\n    height,\n    scale,\n    offsetX,\n    offsetY,\n    dragState,\n  })\n\n  useWheel(\n    domRef,\n    (info) => {\n      const { offsetX: ox, offsetY: oy, scale: os, setTransform } = ui\n      const s = os + info.deltaScale\n      const x = ox + info.deltaX / s\n      const y = oy + info.deltaY / s\n      setTransform({\n        offsetX: x,\n        offsetY: y,\n        scale: s,\n      })\n    },\n    [ui],\n  )\n\n  useEffect(() => {\n    if (canvasRef.current && canvasRef.current !== packCanvas)\n      setCanvas(canvasRef.current)\n  }, [canvasRef, packCanvas, setCanvas])\n\n  useEffect(() => {\n    if (!glyphList || isPacking || !width || !height) return\n    const canvas = canvasRef.current\n    if (!canvas) return\n\n    canvas.width = width\n    canvas.height = height\n\n    const ctx = canvas.getContext('2d')\n    if (!ctx) return\n\n    if (bgColor) {\n      ctx.fillStyle = bgColor\n      ctx.fillRect(0, 0, canvas.width, canvas.height)\n    }\n\n    glyphList.forEach((glyph) => {\n      if (\n        glyph.source &&\n        glyph.source.width !== 0 &&\n        glyph.source.height !== 0\n      ) {\n        ctx.drawImage(\n          glyph.source as HTMLCanvasElement,\n          glyph.x + (padding || 0),\n          glyph.y + (padding || 0),\n        )\n      }\n    })\n  }, [bgColor, glyphList, isPacking, height, width, padding])\n\n  return (\n    <div\n      aria-hidden\n      ref={domRef}\n      className={classes.root}\n      onMouseDown={handleMouseDown}\n    >\n      <canvas ref={canvasRef} className={classes.canvas} />\n    </div>\n  )\n}\n\nexport default observer(PackCanvas)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport clsx from 'clsx'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport { useProjectUi } from 'src/store/hooks'\n\nimport { PreviewObject } from './getPreviewCanvas'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    letter: {\n      position: 'absolute',\n      '&:hover,&$select': {\n        background: 'rgba(0,0,0,0.2)',\n        outline: '1px solid #000',\n      },\n    },\n    select: {\n      '& + $next': {\n        background: 'rgba(0,0,0,0.1)',\n        outline: '1px dashed #666',\n      },\n    },\n    next: {},\n  }),\n)\n\ninterface LetterListProps {\n  data: PreviewObject\n}\n\nconst LetterList: FunctionComponent<LetterListProps> = (\n  props: LetterListProps,\n) => {\n  const {\n    data: { xOffset, yOffset, list },\n  } = props\n  const classes = useStyles()\n  const ui = useProjectUi()\n  const handleSelect = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    letter: string,\n    next: string,\n  ) => {\n    // setSelectLetter\n    e.stopPropagation()\n    ui.setSelectLetter(letter, next)\n  }\n  return (\n    <>\n      {list.map((item, idx) => {\n        const key = `${item.letter}${idx}`\n        return (\n          <div\n            aria-hidden\n            className={clsx(classes.letter, {\n              [classes.select]: item.letter === ui.selectLetter,\n              [classes.next]: item.letter === ui.selectNextLetter,\n            })}\n            style={{\n              width: item.width,\n              height: item.height,\n              left: `${item.x - xOffset}px`,\n              top: `${item.y - yOffset}px`,\n            }}\n            key={key}\n            onClick={(e) => handleSelect(e, item.letter, item.next)}\n          />\n        )\n      })}\n    </>\n  )\n}\n\nexport default observer(LetterList)\n","import React, { useRef, useState, useEffect, FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport { useProject } from 'src/store/hooks'\nimport useWheel from 'src/app/hooks/useWheel'\nimport useSpaceDrag from 'src/app/hooks/useSpaceDrag'\nimport toOutputInfo, { BMFontChar } from 'src/file/toOutputInfo'\n\nimport getPreviewCanvas, { PreviewObject } from './getPreviewCanvas'\nimport LetterList from './LetterList'\n\ninterface StyleProps {\n  width: number\n  height: number\n  scale: number\n  offsetX: number\n  offsetY: number\n  dragState: number\n}\n\nconst useStyles = makeStyles(({ bgPixel }) =>\n  createStyles({\n    root: {\n      position: 'relative',\n      flex: 1,\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden',\n      ...bgPixel,\n      cursor: (props: StyleProps) => {\n        if (props.dragState === 2) return 'grabbing'\n        if (props.dragState === 1) return 'grab'\n        return 'default'\n      },\n    },\n    wrap: {\n      transformOrigin: '50% 50%',\n      position: 'absolute',\n      left: '50%',\n      top: '50%',\n      width: (props: StyleProps) => `${props.width}px`,\n      height: (props: StyleProps) => `${props.height}px`,\n      marginLeft: (props: StyleProps) => `${props.width / -2}px`,\n      marginTop: (props: StyleProps) => `${props.height / -2}px`,\n      transform: (props: StyleProps) =>\n        `scale(${props.scale}) translate(${props.offsetX}px,${props.offsetY}px)`,\n    },\n    canvas: {\n      width: '100%',\n      height: '100%',\n      imageRendering: 'pixelated',\n    },\n  }),\n)\n\nconst PreviewCanvas: FunctionComponent<unknown> = () => {\n  const project = useProject()\n  const [data, setData] = useState<PreviewObject | null>(null)\n  const {\n    ui,\n    style: {\n      font: {\n        size,\n        lineHeight,\n        middle,\n        hanging,\n        top,\n        alphabetic,\n        ideographic,\n        bottom,\n        minBaseLine,\n        maxBaseLine,\n      },\n    },\n    isPacking,\n  } = project\n  const { previewScale, previewOffsetX, previewOffsetY } = ui\n\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const domRef = useRef<HTMLDivElement>(null)\n  const [dragState, handleMouseDown] = useSpaceDrag(\n    (offsetInfo) => {\n      const { offsetX: ix, offsetY: iy } = offsetInfo\n      const {\n        previewScale: os,\n        previewOffsetX: ox,\n        previewOffsetY: oy,\n        setPreviewTransform,\n      } = ui\n      setPreviewTransform({\n        previewOffsetX: ox + ix / os,\n        previewOffsetY: oy + iy / os,\n      })\n    },\n    [ui],\n  )\n  const classes = useStyles({\n    width: data ? data.width : 0,\n    height: data ? data.height : 0,\n    scale: previewScale,\n    offsetX: previewOffsetX,\n    offsetY: previewOffsetY,\n    dragState,\n  })\n\n  useWheel(\n    domRef,\n    (info) => {\n      const {\n        previewOffsetX: ox,\n        previewOffsetY: oy,\n        previewScale: os,\n        setPreviewTransform,\n      } = ui\n      const s = os + info.deltaScale\n      const x = ox + info.deltaX / s\n      const y = oy + info.deltaY / s\n      setPreviewTransform({\n        previewOffsetX: x,\n        previewOffsetY: y,\n        previewScale: s,\n      })\n    },\n    [ui],\n  )\n\n  useEffect(() => {\n    if (!canvasRef.current || isPacking || !data) return\n\n    const canvas = canvasRef.current\n    const ctx = canvas.getContext('2d')\n    if (!ctx) return\n    const lh = size * lineHeight\n\n    canvas.width = data.width\n    canvas.height = data.height\n    data.list.forEach((item) => {\n      if (!item.source || item.source.width === 0 || item.source.height === 0)\n        return\n      ctx.drawImage(item.source, item.x - data.xOffset, item.y - data.yOffset)\n    })\n\n    for (let index = 0; index < data.lines; index += 1) {\n      ;[middle, hanging, top, alphabetic, ideographic, bottom].forEach(\n        (baseLine) => {\n          const basey = Math.round(baseLine - minBaseLine + index * lh)\n          ctx.beginPath()\n          ctx.moveTo(-data.xOffset, basey + 0.5 - data.yOffset)\n          ctx.lineTo(data.width, basey + 0.5 - data.yOffset)\n          if (baseLine === minBaseLine || baseLine === maxBaseLine) {\n            ctx.strokeStyle = 'rgba(0,0,0,1)'\n            ctx.setLineDash([])\n          } else {\n            ctx.strokeStyle = 'rgba(0,0,0,0.5)'\n            ctx.setLineDash([10, 3, 2, 3])\n          }\n          ctx.stroke()\n        },\n      )\n      ctx.beginPath()\n      ctx.moveTo(-data.xOffset + 0.5, index * lh - data.yOffset)\n      ctx.lineTo(\n        -data.xOffset + 0.5,\n        index * lh - data.yOffset + maxBaseLine - minBaseLine,\n      )\n      ctx.strokeStyle = 'rgba(0,0,0,1)'\n      ctx.setLineDash([])\n      ctx.stroke()\n    }\n  }, [\n    alphabetic,\n    bottom,\n    data,\n    hanging,\n    ideographic,\n    isPacking,\n    lineHeight,\n    maxBaseLine,\n    middle,\n    minBaseLine,\n    size,\n    top,\n  ])\n\n  useEffect(() => {\n    if (!canvasRef.current || isPacking) return\n\n    const canvas = canvasRef.current\n    const ctx = canvas.getContext('2d')\n    if (!ctx) return\n\n    const { chars, kernings } = toOutputInfo(project)\n    const kerningMap: Map<number, Map<number, number>> = new Map()\n    kernings.list.forEach(({ first, second, amount }) => {\n      if (!kerningMap.has(first)) kerningMap.set(first, new Map())\n      const k = kerningMap.get(first)\n      k?.set(second, amount)\n    })\n    const charMap: Map<string, BMFontChar> = new Map()\n    chars.list.forEach((char) => {\n      charMap.set(char.letter, char)\n    })\n    const lh = size * lineHeight\n    const obj = getPreviewCanvas(\n      ui.previewText,\n      charMap,\n      kerningMap,\n      lh,\n      maxBaseLine - minBaseLine,\n    )\n    setData(() => obj)\n  }, [\n    isPacking,\n    lineHeight,\n    maxBaseLine,\n    minBaseLine,\n    project,\n    size,\n    ui.previewText,\n  ])\n\n  return (\n    <div\n      aria-hidden\n      ref={domRef}\n      className={classes.root}\n      onMouseDown={handleMouseDown}\n      onClick={() => ui.setSelectLetter('', '')}\n    >\n      <div className={classes.wrap}>\n        <canvas ref={canvasRef} className={classes.canvas} />\n        {data ? <LetterList data={data} /> : null}\n      </div>\n    </div>\n  )\n}\n\nexport default observer(PreviewCanvas)\n","import { BMFontChar } from 'src/file/toOutputInfo'\n\ninterface PreviewItem {\n  x: number\n  y: number\n  width: number\n  height: number\n  source: HTMLImageElement | HTMLCanvasElement | null\n  letter: string\n  next: string\n}\n\nexport interface PreviewObject {\n  xOffset: number\n  yOffset: number\n  width: number\n  height: number\n  list: PreviewItem[]\n  lines: number\n}\n\nexport default function getPreviewCanvas(\n  text: string,\n  chars: Map<string, BMFontChar>,\n  kernings: Map<number, Map<number, number>>,\n  lineHeight: number,\n  fontHeight: number,\n): PreviewObject {\n  // const letters = Array.from(new Set(text.replace(/\\r\\n|\\r|\\n/g, '').split('')))\n  const list: PreviewItem[] = []\n  const lines = text.split(/\\r\\n|\\r|\\n/)\n  let minX = 0\n  let minY = 0\n  let maxX = 0\n  let maxY = 0\n  let y = 0\n  let x = 0\n\n  lines.forEach((str, index) => {\n    y = lineHeight * index\n    x = 0\n    const arr = Array.from(str)\n    arr.forEach((letter, idx) => {\n      const char = chars.get(letter)\n      if (!char) return\n      const next = arr[idx + 1]\n      const lk = kernings.get(letter.charCodeAt(0))\n      let kering = 0\n      if (next && lk && lk.has(next.charCodeAt(0))) {\n        kering = lk.get(next.charCodeAt(0)) || 0\n      }\n      const obj = {\n        x: x + char.xoffset,\n        y: y + char.yoffset,\n        width: char.width || char.xadvance,\n        height: char.height || fontHeight,\n        source: char.source,\n        letter: char.letter,\n        next,\n      }\n      x += char.xadvance + kering\n      minX = Math.min(obj.x, minX)\n      minY = Math.min(obj.y, minY)\n      maxX = Math.max(obj.x + obj.width, maxX)\n      maxY = Math.max(obj.y + char.height, maxY)\n      list.push(obj)\n    })\n  })\n\n  return {\n    lines: lines.length,\n    list,\n    xOffset: minX,\n    yOffset: minY,\n    width: maxX - minX,\n    height: Math.max(maxY - minY, lines.length * lineHeight - minY),\n  }\n}\n","import React, { useState, FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\n\nimport Box from '@material-ui/core/Box'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\n\nimport { useProjectUi } from 'src/store/hooks'\n\nconst Preview: FunctionComponent<unknown> = () => {\n  const { previewText, setPreviewText } = useProjectUi()\n  const [isIME, setIsIME] = useState(false)\n  const [inputText, setInputText] = useState(previewText)\n\n  const handleInput = (event: React.ChangeEvent<HTMLTextAreaElement>): void => {\n    const { value } = event.target\n    if (isIME) {\n      setInputText(value)\n    } else {\n      setInputText(value)\n      if (value !== previewText) setPreviewText(value)\n    }\n  }\n\n  const handleCompositionEnd = (): void => {\n    setIsIME(false)\n    setInputText(inputText)\n    if (inputText !== previewText) setPreviewText(inputText)\n  }\n\n  return (\n    <Box>\n      <Box paddingX={2} marginY={4}>\n        <Typography>Glyphs</Typography>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <TextField\n          margin='none'\n          value={isIME ? inputText : previewText}\n          fullWidth\n          multiline\n          rows={7}\n          variant='outlined'\n          inputProps={{ spellCheck: false }}\n          onChange={handleInput}\n          onCompositionStart={() => setIsIME(true)}\n          onCompositionEnd={handleCompositionEnd}\n        />\n      </Box>\n    </Box>\n  )\n}\n\nexport default observer(Preview)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\n\nimport { useProject } from 'src/store/hooks'\n\nimport FormAdjustMetric from 'src/app/layout/common/FormAdjustMetric'\n\nconst GlobalMetric: FunctionComponent<unknown> = () => {\n  const project = useProject()\n  const { glyphList, ui } = project\n  const glyph = glyphList.find((gl) => gl.letter === ui.selectLetter)\n  if (!glyph) return null\n  const { adjustMetric, letter } = glyph\n  const {\n    xAdvance,\n    xOffset,\n    yOffset,\n    setXAdvance,\n    setXOffset,\n    setYOffset,\n  } = adjustMetric\n\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <Typography>{`\"${letter}\" Adjustment`}</Typography>\n      </Box>\n      <FormAdjustMetric\n        xAdvance={xAdvance}\n        xOffset={xOffset}\n        yOffset={yOffset}\n        setXAdvance={setXAdvance}\n        setXOffset={setXOffset}\n        setYOffset={setYOffset}\n      />\n    </>\n  )\n}\n\nexport default observer(GlobalMetric)\n","import React, { useState, useEffect, FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport { deepObserve } from 'mobx-utils'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport Input from '@material-ui/core/Input'\nimport GridInput from 'src/app/components/GridInput'\n\nimport { useProject } from 'src/store/hooks'\nimport { GlyphFont, GlyphImage } from 'src/store'\n\nconst GlobalMetric: FunctionComponent<unknown> = () => {\n  const {\n    glyphList,\n    ui,\n    style: {\n      font: { opentype, size },\n    },\n  } = useProject()\n  const [offset, setOffset] = useState(0)\n  const [glyph, setGlyph] = useState<GlyphFont | GlyphImage | undefined>()\n  const [kerning, setKerning] = useState(0)\n\n  useEffect(() => {\n    setGlyph(glyphList.find((gl) => gl.letter === ui.selectLetter))\n  }, [glyphList, ui.selectLetter])\n\n  useEffect(() => {\n    if (glyph && ui.selectNextLetter && opentype) {\n      const fontScale = (1 / opentype.unitsPerEm) * size\n      setOffset(\n        Math.round(\n          opentype.getKerningValue(\n            opentype.charToGlyphIndex(glyph.letter),\n            opentype.charToGlyphIndex(ui.selectNextLetter),\n          ) * fontScale,\n        ),\n      )\n    }\n  }, [glyph, opentype, size, ui.selectNextLetter])\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ) => {\n    if (glyph)\n      glyph.steKerning(ui.selectNextLetter, Number(e.target.value) - offset)\n  }\n\n  useEffect(() => {\n    let disposer\n\n    if (glyph) {\n      setKerning(glyph.kerning.get(ui.selectNextLetter) || 0)\n      disposer = deepObserve(glyph.kerning, () => {\n        setKerning(glyph.kerning.get(ui.selectNextLetter) || 0)\n      })\n    }\n\n    return disposer\n  }, [glyph, ui.selectNextLetter])\n\n  if (!glyph || !ui.selectNextLetter) return null\n\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <Typography>{`\"${glyph.letter}\" - \"${ui.selectNextLetter}\" Kerning`}</Typography>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <GridInput before='Amount:' after='px'>\n          <Input\n            value={kerning + offset}\n            fullWidth\n            type='number'\n            onChange={handleChange}\n          />\n        </GridInput>\n      </Box>\n    </>\n  )\n}\n\nexport default observer(GlobalMetric)\n","import React, { FunctionComponent } from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport PreviewCanvas from './PreviewCanvas'\nimport PreviewText from './PreviewText'\nimport PreviewMertic from './PreviewMertic'\nimport PreviewKerning from './PreviewKerning'\n\nconst Preview: FunctionComponent<unknown> = () => {\n  return (\n    <>\n      <PreviewCanvas />\n      <Grid container alignItems='flex-start'>\n        <Grid item xs={4}>\n          <PreviewText />\n        </Grid>\n        <Grid item xs={4}>\n          <PreviewMertic />\n        </Grid>\n        <Grid item xs={4}>\n          <PreviewKerning />\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nexport default Preview\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport { useProjectUi } from 'src/store/hooks'\n\nimport PackCanvas from '../PackCanvas'\nimport Preview from '../Preview'\n\nconst useStyles = makeStyles(({ palette }) =>\n  createStyles({\n    root: {\n      backgroundColor: palette.background.default,\n      position: 'relative',\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'column',\n    },\n  }),\n)\n\nconst MainView: FunctionComponent<unknown> = () => {\n  const { showPreview } = useProjectUi()\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      {showPreview ? <Preview /> : <PackCanvas />}\n    </div>\n  )\n}\n\nexport default observer(MainView)\n","import React, { useRef, useState, useEffect, FunctionComponent } from 'react'\n// import { observer } from 'mobx-react'\nimport clsx from 'clsx'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n// import Input from '@material-ui/core/Input'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst useStyles = makeStyles(({ palette }) =>\n  createStyles({\n    root: {\n      minHeight: 'auto',\n      minWidth: '80px',\n      maxWidth: 'none',\n      height: '34px',\n      lineHeight: '16px',\n      padding: '10px',\n      color: 'rgba(255,255,255,0.5)',\n      backgroundColor: 'rgb(45, 45, 45)',\n      borderRight: `1px solid ${palette.background.default}`,\n      textTransform: 'none',\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      cursor: 'pointer',\n      '&:hover': {\n        '& $icon': {\n          opacity: 1,\n        },\n      },\n      '&:last-child': {\n        borderRight: '0 none',\n      },\n    },\n    selected: {\n      background: palette.background.default,\n      color: '#fff',\n      '& $icon': {\n        opacity: 1,\n      },\n    },\n    name: {\n      whiteSpace: 'nowrap',\n      position: 'relative',\n      background: 'inherit',\n    },\n    editor: {\n      color: 'rgba(0,0,0,0)',\n    },\n    input: {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      left: 0,\n      fontSize: 'inherit',\n      padding: 0,\n      border: '0 none',\n      appearance: 'none',\n      color: 'inherit',\n      background: 'inherit',\n    },\n    icon: {\n      width: '16px',\n      height: '16px',\n      marginLeft: '10px',\n      opacity: 0,\n    },\n  }),\n)\n\ninterface ProjectTabProps {\n  name: string\n  value: number\n  selected?: boolean\n  useRemove?: boolean\n  onRemove?: (\n    e: React.MouseEvent<SVGSVGElement, MouseEvent>,\n    value: number,\n  ) => void\n  onChange?: (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    value: number,\n  ) => void\n  onClick?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\n  onRename?: (name: string, value: number) => void\n}\n\nconst ProjectTab: FunctionComponent<ProjectTabProps> = (\n  props: ProjectTabProps,\n) => {\n  const {\n    name,\n    useRemove,\n    selected,\n    value,\n    onChange,\n    onClick,\n    onRemove,\n    onRename,\n  } = props\n  const [editor, setEditor] = useState(false)\n  const [sname, setSName] = useState(name)\n  const editorRef = useRef<HTMLInputElement>(null)\n  const classes = useStyles()\n\n  const handleRemove = (e: React.MouseEvent<SVGSVGElement, MouseEvent>) => {\n    e.stopPropagation()\n    if (onRemove) onRemove(e, value)\n  }\n\n  const handleSelect = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n  ): void => {\n    e.stopPropagation()\n    if (onChange) onChange(e, value)\n    if (onClick) onClick(e)\n  }\n\n  const handleDoubleClick = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n  ): void => {\n    e.stopPropagation()\n    if (editorRef.current) {\n      setEditor(true)\n    }\n  }\n\n  const handleEditorEnd = (e: { preventDefault?(): void }) => {\n    if (e.preventDefault) e.preventDefault()\n    setEditor(false)\n  }\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.keyCode === 13 && editorRef.current) {\n      editorRef.current.blur()\n    }\n  }\n\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSName(e.target.value)\n  }\n\n  useEffect(() => {\n    if (editor && editorRef.current) editorRef.current.focus()\n    if (!editor && onRename) onRename(sname, value)\n  }, [editor, onRename, sname, value])\n\n  useEffect(() => {\n    setSName(name)\n  }, [name])\n\n  return (\n    <div\n      aria-hidden\n      className={clsx(classes.root, {\n        [classes.selected]: selected,\n      })}\n      onClick={handleSelect}\n      onDoubleClick={handleDoubleClick}\n      title='Double click rename'\n    >\n      <span aria-hidden className={classes.name}>\n        {editor ? sname : name}\n        <input\n          className={classes.input}\n          hidden={!editor}\n          ref={editorRef}\n          value={editor ? sname : name}\n          type='text'\n          onKeyDown={handleKeyDown}\n          onBlur={handleEditorEnd}\n          //   onInput={handleInput}\n          onChange={handleInput}\n        />\n      </span>\n      {useRemove ? (\n        <CloseIcon\n          className={classes.icon}\n          onClick={handleRemove}\n          onDoubleClick={handleRemove}\n        />\n      ) : null}\n    </div>\n  )\n}\n\nexport default ProjectTab\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport Tabs from '@material-ui/core/Tabs'\nimport { useWorkspace } from 'src/store/hooks'\nimport ProjectTab from './ProjectTab'\n\nconst useStyles = makeStyles(({ palette, shadows }) =>\n  createStyles({\n    root: {\n      minHeight: 'auto',\n      width: '100%',\n      boxShadow: shadows[2],\n      background: palette.background.sidebar,\n      position: 'relative',\n      zIndex: 1,\n    },\n  }),\n)\n\nconst ProjectTabs: FunctionComponent<unknown> = () => {\n  const classes = useStyles()\n  const workSpace = useWorkspace()\n  const {\n    addProject,\n    selectProject,\n    removeProject,\n    setProjectName,\n    namedList,\n    activeId,\n  } = workSpace\n\n  const handleChange = (e: unknown, value: number): void => {\n    selectProject(value)\n  }\n\n  const handleRemove = (\n    e: React.MouseEvent<SVGSVGElement, MouseEvent>,\n    value?: number,\n  ): void => {\n    if (typeof value !== 'undefined') removeProject(value)\n  }\n\n  const handleDoubleClick = (): void => {\n    addProject()\n  }\n\n  return (\n    <Tabs\n      classes={classes}\n      value={activeId}\n      onChange={handleChange}\n      indicatorColor='primary'\n      textColor='primary'\n      variant='scrollable'\n      scrollButtons='off'\n      selectionFollowsFocus\n      TabIndicatorProps={{ hidden: true }}\n      onDoubleClick={handleDoubleClick}\n    >\n      {namedList.map((item) => {\n        return (\n          <ProjectTab\n            useRemove={namedList.length > 1}\n            name={item.name}\n            value={item.id}\n            key={item.id}\n            onRename={setProjectName}\n            onRemove={handleRemove}\n          />\n        )\n      })}\n    </Tabs>\n  )\n}\n\nexport default observer(ProjectTabs)\n","import React, { FunctionComponent, useState, useRef } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Paper from '@material-ui/core/Paper'\nimport Button from '@material-ui/core/Button'\nimport Popper from '@material-ui/core/Popper'\nimport Slider from '@material-ui/core/Slider'\nimport Switch from '@material-ui/core/Switch'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport MenuList from '@material-ui/core/MenuList'\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener'\n\nimport { useProjectUi } from 'src/store/hooks'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    slider: {\n      width: '200px',\n    },\n  }),\n)\n\nconst ControlerBar: FunctionComponent<unknown> = () => {\n  const {\n    scale,\n    setTransform,\n    previewScale,\n    setPreviewTransform,\n    showPreview,\n    setShowPreview,\n  } = useProjectUi()\n  const classes = useStyles()\n  const [open, setOpen] = useState(false)\n  const anchorRef = useRef<HTMLButtonElement>(null)\n  const [list] = useState([0.25, 0.5, 0.75, 1, 1.25, 1.5, 5, 10])\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen)\n  }\n\n  const handleClose = (event: React.MouseEvent<EventTarget>) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return\n    }\n\n    setOpen(false)\n  }\n\n  const handleChange = (event: unknown, val: number | number[]) => {\n    if (showPreview) {\n      setPreviewTransform({ previewScale: val as number })\n    } else {\n      setTransform({ scale: val as number })\n    }\n  }\n\n  const handleSelect = (val: number) => {\n    // setTransform({ scale: val })\n    handleChange(null, val)\n    setOpen(false)\n  }\n\n  return (\n    <Box paddingX={2} display='flex' justifyContent='space-between'>\n      <Box component='label' display='flex' alignItems='center'>\n        Preview\n        <Switch\n          size='small'\n          color='primary'\n          checked={showPreview}\n          onChange={(e) => setShowPreview(e.target.checked)}\n        />\n      </Box>\n      <Slider\n        className={classes.slider}\n        value={showPreview ? previewScale : scale}\n        min={0.01}\n        max={10}\n        step={0.01}\n        onChange={handleChange}\n      />\n      <Button ref={anchorRef} onClick={handleToggle}>\n        {`${Math.round((showPreview ? previewScale : scale) * 1000) / 10}%`}\n      </Button>\n      <Popper open={open} anchorEl={anchorRef.current} placement='top-end'>\n        <Paper>\n          <ClickAwayListener onClickAway={handleClose}>\n            <MenuList>\n              {list.map((n) => (\n                <MenuItem key={n} onClick={() => handleSelect(n)}>\n                  {`${n * 100}%`}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </ClickAwayListener>\n        </Paper>\n      </Popper>\n    </Box>\n  )\n}\n\nexport default observer(ControlerBar)\n","import React, { useState, FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\n\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport InputBase from '@material-ui/core/InputBase'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nimport { GlyphImage } from 'src/store'\nimport { useProject } from 'src/store/hooks'\n\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      width: theme.spacing(24),\n      height: theme.spacing(24),\n      margin: theme.spacing(2),\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      position: 'relative',\n    },\n    image: {\n      maxWidth: '100%',\n      maxHeight: '100%',\n      pointerEvents: 'none',\n    },\n    actions: {\n      width: '100%',\n      height: '100%',\n      position: 'absolute',\n      left: 0,\n      top: 0,\n    },\n    inputLabel: {\n      width: '100%',\n      height: '100%',\n      '& input': {\n        textAlign: 'center',\n      },\n    },\n  }),\n)\n\ninterface ImageGlyphProps {\n  glyph: GlyphImage\n  selected?: boolean\n}\n\nconst ImageGlyph: FunctionComponent<ImageGlyphProps> = (\n  props: ImageGlyphProps,\n) => {\n  const classes = useStyles()\n  const { removeImage } = useProject()\n  const [isIME, setIsIME] = useState(false)\n  const { glyph } = props\n  const [inputValue, setInputValue] = useState(glyph.letter)\n  const { changeSelect, selected, setGlyph } = glyph\n\n  const handleChangeGlyph = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const { value } = e.target\n    if (!isIME) {\n      setGlyph(value)\n    } else {\n      setInputValue(value.slice(0, 1))\n      setGlyph(value.slice(0, 1))\n    }\n  }\n\n  const handleCompositionEnd = (): void => {\n    setIsIME(false)\n    setInputValue((iv) => iv.slice(0, 1))\n    setGlyph(inputValue.slice(0, 1))\n  }\n\n  return (\n    <Paper variant='outlined' className={classes.root}>\n      <img className={classes.image} src={glyph.src} alt={glyph.fileName} />\n      <Grid container direction='column' className={classes.actions}>\n        <Grid item container justify='space-between' alignItems='center'>\n          <Checkbox\n            checked={selected}\n            size='small'\n            color='default'\n            onChange={(e) => changeSelect(e.target.checked)}\n          />\n          <IconButton\n            color='primary'\n            size='small'\n            onClick={() => removeImage(glyph)}\n          >\n            <DeleteIcon fontSize='small' />\n          </IconButton>\n        </Grid>\n        <Grid\n          item\n          xs\n          component='label'\n          className={classes.inputLabel}\n          container\n          alignItems='flex-end'\n        >\n          <InputBase\n            fullWidth\n            value={isIME ? inputValue : glyph.letter}\n            onFocus={(e) => e.target.select()}\n            onInput={handleChangeGlyph}\n            onCompositionEnd={handleCompositionEnd}\n            onCompositionStart={() => setIsIME(true)}\n          />\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n}\n\nexport default observer(ImageGlyph)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles, createStyles } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\n\nimport { useProject } from 'src/store/hooks'\n\nimport ImageGlyph from './ImageGlyph'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      width: '100%',\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n  }),\n)\n\nconst ImageGlyphList: FunctionComponent<unknown> = () => {\n  const { glyphImages } = useProject()\n  const classes = useStyles()\n  return (\n    <Box className={classes.root}>\n      {glyphImages.map((glyph) => {\n        return <ImageGlyph glyph={glyph} key={glyph.src} />\n      })}\n    </Box>\n  )\n}\n\nexport default observer(ImageGlyphList)\n","import React, { FunctionComponent, useState, useEffect } from 'react'\nimport { observer } from 'mobx-react'\nimport clsx from 'clsx'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport Box from '@material-ui/core/Box'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport Accordion from '@material-ui/core/Accordion'\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\nimport Typography from '@material-ui/core/Typography'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport FullscreenIcon from '@material-ui/icons/Fullscreen'\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit'\nimport IconButton from '@material-ui/core/IconButton'\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary'\n\nimport { FileInfo } from 'src/store'\nimport { useProject } from 'src/store/hooks'\n\nimport readFile from 'src/utils/readFile'\n\nimport ImageGlyphList from './ImageGlyphList'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      display: 'flex',\n      position: 'relative',\n    },\n    fixed: {\n      position: 'fixed',\n      left: 0,\n      top: 0,\n      zIndex: 999999,\n      width: '100%',\n      height: '100%',\n      '& $panel': {\n        maxHeight: 'none',\n      },\n    },\n    panel: {\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      maxHeight: '305px',\n    },\n    continer: {\n      flex: 1,\n      overflow: 'hidden',\n      overflowY: 'auto',\n    },\n    listWrap: {\n      minHeight: '224px',\n      height: '100%',\n      width: '100%',\n      overflow: 'hidden',\n      overflowY: 'auto',\n    },\n  }),\n)\n\nconst LayerBox: FunctionComponent<unknown> = () => {\n  const classes = useStyles()\n  const { addImages } = useProject()\n  const [isFullscreen, setFullscreen] = useState(false)\n  const [open, setOpen] = useState(false)\n  // const [isDroping, setIsDroping] = useState(false)\n\n  const handleLoadFile = (files: FileList) => {\n    const list = Array.from(files).filter((file) => /^image\\//.test(file.type))\n    if (!list.length) return\n    Promise.all(\n      list.map((file) =>\n        readFile(file).then((buffer) => {\n          if (!buffer || typeof buffer === 'string') return null\n\n          const matched = file.name.match(/(\\S)\\.[a-zA-Z0-9]+$/i)\n          return {\n            letter: matched ? matched[1] : '',\n            fileName: file.name,\n            fileType: file.type,\n            buffer,\n          }\n        }),\n      ),\n    ).then((fileList) => {\n      addImages(fileList.filter((f) => f) as FileInfo[])\n    })\n  }\n\n  const handleDrop = (e: React.DragEvent<HTMLElement>): void => {\n    e.preventDefault()\n    handleLoadFile(e.dataTransfer.files)\n  }\n\n  const hanfleToggleFullScreen = (\n    e?: React.MouseEvent<HTMLDivElement, MouseEvent>,\n  ) => {\n    if (e) e.stopPropagation()\n    setFullscreen((f) => !f)\n  }\n\n  const handleToggleOpen = () => {\n    setOpen((o) => isFullscreen || !o)\n  }\n  const handleFilesChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    if (!e.target.files) return\n    const { files } = e.target\n    handleLoadFile(files)\n  }\n\n  const handleKeyDown = (e: KeyboardEvent) => {\n    const target = e.target as HTMLElement\n    if (e.keyCode === 27) {\n      if (!target || target.tagName !== 'INPUT') setFullscreen(false)\n      else if (target) target.blur()\n    }\n  }\n\n  useEffect(() => {\n    if (isFullscreen) window.addEventListener('keydown', handleKeyDown)\n    else window.removeEventListener('keydown', handleKeyDown)\n    return () => window.removeEventListener('keydown', handleKeyDown)\n  }, [isFullscreen])\n\n  return (\n    <Box\n      onDragEnter={(e) => e.preventDefault()}\n      onDragOver={(e) => e.preventDefault()}\n      // onDragLeave={handleDrop}\n      onDrop={handleDrop}\n      className={clsx(classes.root, {\n        [classes.fixed]: isFullscreen,\n      })}\n    >\n      <Accordion\n        className={classes.panel}\n        expanded={isFullscreen || open}\n        onChange={handleToggleOpen}\n        TransitionProps={{\n          style:\n            isFullscreen || open\n              ? { flex: 1, overflow: 'hidden', overflowY: 'auto' }\n              : {},\n        }}\n      >\n        <AccordionSummary\n          expandIcon={isFullscreen ? undefined : <ExpandMoreIcon />}\n        >\n          <Grid container alignItems='center'>\n            <Grid item>\n              <Typography>Image Glyph List</Typography>\n            </Grid>\n            <Grid item xs container justify='center'>\n              <Button\n                component='label'\n                color='primary'\n                size='small'\n                variant='contained'\n                startIcon={<PhotoLibraryIcon />}\n              >\n                Select Images\n                <input\n                  hidden\n                  type='file'\n                  multiple\n                  accept='image/*'\n                  onChange={handleFilesChange}\n                />\n              </Button>\n            </Grid>\n            <Grid item>\n              <IconButton component='div' onClick={hanfleToggleFullScreen}>\n                {isFullscreen ? <FullscreenExitIcon /> : <FullscreenIcon />}\n              </IconButton>\n            </Grid>\n          </Grid>\n        </AccordionSummary>\n        <AccordionDetails className={classes.continer}>\n          <Box className={classes.listWrap}>\n            <ImageGlyphList />\n          </Box>\n        </AccordionDetails>\n      </Accordion>\n    </Box>\n  )\n}\nexport default observer(LayerBox)\n","import React, { FunctionComponent } from 'react'\nimport Box from '@material-ui/core/Box'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport MainView from './modules/MainView'\nimport ProjectTabs from './modules/ProjectTabs'\nimport ControlerBar from './modules/ControlerBar'\nimport ImageGlyphList from './modules/ImageGlyphList'\n\nconst useStyles = makeStyles(({ palette, shadows }) =>\n  createStyles({\n    root: {\n      position: 'relative',\n      flex: 1,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      width: 0,\n    },\n    tabsRoot: {\n      minHeight: 'auto',\n      width: '100%',\n      boxShadow: shadows[2],\n      background: palette.background.sidebar,\n      position: 'relative',\n      zIndex: 1,\n    },\n    tabRoot: {\n      minHeight: 'auto',\n      minWidth: 'auto',\n      maxWidth: 'none',\n      height: '34px',\n      color: 'rgba(255,255,255,0.5)',\n      borderRight: `1px solid ${palette.background.default}`,\n      textTransform: 'none',\n    },\n    tabSelected: {\n      background: palette.background.default,\n    },\n    tabWrapper: {\n      color: '#FFF',\n    },\n  }),\n)\n\nconst WorkSpace: FunctionComponent<unknown> = () => {\n  const classes = useStyles()\n\n  return (\n    <Box className={classes.root}>\n      <ProjectTabs />\n      <MainView />\n      <ControlerBar />\n      <ImageGlyphList />\n    </Box>\n  )\n}\n\nexport default WorkSpace\n","import React from 'react'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    close: {\n      padding: theme.spacing(0.5),\n    },\n  }),\n)\n\nexport interface SnackbarMessage {\n  message: string\n  key: number\n}\n\nexport interface State {\n  open: boolean\n  snackPack: SnackbarMessage[]\n  messageInfo?: SnackbarMessage\n}\n\nexport default function ConsecutiveSnackbars() {\n  const classes = useStyles()\n  const [open, setOpen] = React.useState(false)\n  const [worker, setWorker] = React.useState<ServiceWorker | null>(null)\n\n  const handleClose = (\n    event: React.SyntheticEvent | MouseEvent,\n    reason?: string,\n  ) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setOpen(false)\n  }\n\n  const updateVersion = React.useCallback((newWorker) => {\n    setWorker(newWorker || null)\n    setOpen(!!newWorker)\n  }, [])\n\n  const handleReload = () => {\n    if (!worker) return\n\n    const channel = new MessageChannel()\n\n    channel.port1.onmessage = (event) => {\n      window.location.reload()\n    }\n\n    worker.postMessage({ type: 'SKIP_WAITING' }, [channel.port2])\n  }\n\n  React.useEffect(() => {\n    window.addEventListener('updateVerion', updateVersion, false)\n    return () =>\n      window.removeEventListener('updateVerion', updateVersion, false)\n  }, [updateVersion])\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      open={open}\n      onClose={handleClose}\n      message='New version is available.'\n      action={\n        <React.Fragment>\n          <Button color='secondary' size='small' onClick={handleReload}>\n            Reload\n          </Button>\n          <IconButton\n            aria-label='close'\n            color='inherit'\n            className={classes.close}\n            onClick={handleClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        </React.Fragment>\n      }\n    />\n  )\n}\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Box from '@material-ui/core/Box'\nimport Backdrop from '@material-ui/core/Backdrop'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport useStores from 'src/store/hooks'\n\nimport LeftBar from '../LeftBar'\nimport TitleBar from '../TitleBar'\nimport RightBar from '../RightBar'\nimport WorkSpace from '../WorkSpace'\nimport UpdateToast from './UpdateToast'\n\nconst useStyles = makeStyles(({ zIndex }) =>\n  createStyles({\n    root: {\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    content: {\n      display: 'flex',\n      flex: 1,\n      position: 'relative',\n      height: '0',\n      overflow: 'hidden',\n    },\n    loadingBackdrop: {\n      zIndex: zIndex.drawer + 1,\n      color: '#fff',\n    },\n  }),\n)\n\nconst Wrap: FunctionComponent<unknown> = () => {\n  const classes = useStyles()\n  const { ui } = useStores()\n\n  return (\n    <Box className={classes.root}>\n      <TitleBar />\n      <UpdateToast />\n      <Box className={classes.content}>\n        <LeftBar />\n        <WorkSpace />\n        <RightBar />\n      </Box>\n      <Backdrop className={classes.loadingBackdrop} open={!!ui.globalLoader}>\n        <CircularProgress color='inherit' />\n      </Backdrop>\n    </Box>\n  )\n}\n\nexport default observer(Wrap)\n","import React from 'react'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { Provider } from 'mobx-react'\n\nimport createStore from 'src/store'\nimport theme from './theme'\n\nimport Wrap from './layout/Wrap'\n\nfunction App(): JSX.Element {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Provider {...createStore()}>\n        <Wrap />\n      </Provider>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './app/App'\n\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register({\n  onUpdate(registration) {\n    const worker = registration.waiting\n    if (!worker) return\n  },\n})\n"],"sourceRoot":""}