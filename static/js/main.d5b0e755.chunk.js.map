{"version":3,"sources":["store/ui.ts","workers/RectanglePacker.worker.ts","utils/is.ts","utils/getTextBaselines.ts","utils/use.ts","store/base/ui.ts","utils/fontStyleStringify.ts","utils/updateFontFace.ts","store/base/gradient.ts","store/base/font.ts","store/base/patternTexture.ts","store/base/fill.ts","utils/base64ToArrayBuffer.ts","utils/getTextSize.ts","store/base/stroke.ts","store/base/shadow.ts","store/base/style.ts","store/base/layout.ts","store/base/metric.ts","utils/trimImageData.ts","utils/getPointOnCircle.ts","utils/getCanvasStyle.ts","utils/getGlyphInfo.ts","store/base/glyphBase.ts","store/base/glyphFont.ts","store/base/glyphImage.ts","utils/getTrimImageInfo.ts","store/project.ts","store/workspace.ts","store/index.ts","app/theme/props.ts","app/theme/overrides.ts","app/theme/index.ts","store/hooks.ts","utils/readFile.ts","app/layout/LeftBar/modules/Font/FontFamily.tsx","app/components/GridInput/GridInput.tsx","app/layout/LeftBar/modules/Font/FontSize.tsx","app/layout/LeftBar/modules/Font/LineHeight.tsx","app/layout/LeftBar/modules/Font/Font.tsx","app/layout/LeftBar/modules/Glyphs/Glyphs.tsx","app/layout/LeftBar/modules/PackConfig/Padding.tsx","app/layout/LeftBar/modules/PackConfig/Spacing.tsx","app/layout/LeftBar/modules/PackConfig/AutoPack.tsx","app/layout/LeftBar/modules/PackConfig/FixedSize.tsx","app/layout/LeftBar/modules/PackConfig/PackWidth.tsx","app/layout/LeftBar/modules/PackConfig/PackHeight.tsx","app/layout/LeftBar/modules/PackConfig/PackConfig.tsx","app/layout/common/FormAdjustMetric/FormAdjustMetric.tsx","app/layout/LeftBar/modules/GlobalMetric/GlobalMetric.tsx","app/layout/LeftBar/LeftBar.tsx","utils/formatStr.ts","file/getXmlString.ts","file/getLuaString.ts","file/getTextString.ts","file/toOutputInfo.ts","proto/project.js","file/prefix.ts","utils/getVersionNumber.ts","file/updateOldProject.ts","file/decodeProject.ts","app/layout/TitleBar/ExportButton.tsx","app/layout/TitleBar/TitleBar.tsx","file/saveProject.ts","file/outputFile.ts","app/components/WrappedSketchPicker/WrappedSketchPicker.tsx","app/components/ColorInput/ColorInput.tsx","app/layout/common/FormColor/FormColor.tsx","app/components/GradientPicker/ColorStop.tsx","app/components/GradientPicker/ColorStopsHolder.tsx","app/components/Palette/Palette.tsx","app/components/GradientPicker/GradientBuilder.tsx","app/components/AnglePicker/AnglePicker.tsx","app/layout/common/FormAngle/FormAngle.tsx","app/layout/common/FormGradient/FormGradient.tsx","app/layout/common/FormImage/FileSelector.tsx","app/layout/common/FormImage/FormImage.tsx","app/layout/common/FormFill/FormFill.tsx","app/layout/RightBar/modules/Fill/Fill.tsx","app/layout/RightBar/modules/Stroke/Stroke.tsx","app/layout/RightBar/modules/Shadow/Shadow.tsx","app/layout/RightBar/modules/BackgroundColor/BackgroundColor.tsx","app/layout/RightBar/RightBar.tsx","app/hooks/useWheel.ts","app/hooks/useSpaceDrag.ts","app/layout/WorkSpace/modules/PackView/PackCanvas.tsx","app/layout/WorkSpace/modules/PackView/PackSizeBar.tsx","app/layout/WorkSpace/modules/PackView/PackView.tsx","app/layout/WorkSpace/modules/Preview/LetterList.tsx","app/layout/WorkSpace/modules/Preview/PreviewCanvas.tsx","app/layout/WorkSpace/modules/Preview/getPreviewCanvas.ts","app/layout/WorkSpace/modules/Preview/PreviewText.tsx","app/layout/WorkSpace/modules/Preview/PreviewMertic.tsx","app/layout/WorkSpace/modules/Preview/PreviewKerning.tsx","app/layout/WorkSpace/modules/Preview/Preview.tsx","app/layout/WorkSpace/modules/MainView/MainView.tsx","app/layout/WorkSpace/modules/ProjectTabs/ProjectTab.tsx","app/layout/WorkSpace/modules/ProjectTabs/ProjectTabs.tsx","app/layout/WorkSpace/modules/ControlerBar/ControlerBar.tsx","app/layout/WorkSpace/modules/ImageGlyphList/ImageGlyph.tsx","app/layout/WorkSpace/modules/ImageGlyphList/ImageGlyphList.tsx","app/layout/WorkSpace/modules/ImageGlyphList/LayerBox.tsx","app/layout/WorkSpace/WorkSpace.tsx","app/layout/Wrap/UpdateToast.tsx","app/layout/Wrap/Wrap.tsx","app/App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["Ui","action","bound","num","this","globalLoader","observable","Worker_fn","Worker","canvas","is","n","Number","isNaN","use","a","b","ui","previewText","offsetX","Math","min","max","width","offsetY","height","scale","trans","reOffset","text","showPreview","previewScale","previewOffsetX","previewOffsetY","letter","next","selectLetter","selectNextLetter","packFailed","defaultConfig","fontSize","fontFamily","fontStyleStringify","fontStyleConfig","config","arr","fontStyle","push","fontVariant","fontWeight","lineHeight","join","fontTargeCache","loadDiv","GradientType","Font","ref","font","size","byteLength","setFont","updateBaseines","middle","hanging","top","alphabetic","ideographic","bottom","opentype","family","bls","styleConig","document","createElement","ctx","getContext","Error","textBaseline","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","getTextBaselines","buffer","parse","lowMemory","e","Promise","resolve","names","fontName","postScriptName","Object","keys","url","URL","createObjectURL","Blob","name","cssNode","createTextNode","appendChild","textNode","head","style","position","left","opacity","pointerEvents","body","setTimeout","updateFontFace","then","runInAction","computed","Gradient","shallow","gradient","type","angle","palette","forEach","item","id","nextId","addColor","offset","color","map","ids","length","FillType","PatternTexture","pt","repetition","setImage","src","img","Image","onload","image","base64","binaryString","atob","len","bytes","Uint8Array","i","charCodeAt","base64ToArrayBuffer","Fill","fill","patternTexture","Stroke","stroke","lineCap","lineJoin","Shadow","shadow","blur","Style","useShadow","useStroke","bgColor","Layout","layout","padding","spacing","power","auto","fixedSize","Metric","metric","xAdvance","xOffset","yOffset","trimImageData","imageData","threshold","data","topTrim","bottomTrim","leftTrim","rightTrim","topStatus","bottomStatus","leftStatus","rightStatus","h","ceil","w","j","trimOffsetLeft","trimOffsetTop","getPointOnCircle","x","y","r","cos","PI","sin","getCanvasStyle","cx","cy","startPoint","endPoint","createLinearGradient","createRadialGradient","addColorStop","createPattern","naturalWidth","naturalHeight","textureCtx","drawImage","getGlyphInfo","trimInfo","textAlign","testA","actualBoundingBoxLeft","parseInt","fontWidth","fontHeight","trimOffsetRight","trimOffsetBottom","testB","actualBoundingBoxRight","getTextSize","lineWidth","addX","addY","styleX","styleY","abs","strokeStyle","strokeText","fillStyle","fillText","cvs","newCtx","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","imgData","getImageData","styleTrimInfo","putImageData","GlyphBase","glyph","adjustMetric","kerning","set","Map","GlyphFont","galyphFont","textStyle","setGlyphInfo","glyphInfo","source","GlyphImage","glyphImage","fileName","fileType","initImage","getTrimImageInfo","isSelect","selected","Project","project","worker","packStart","packTimer","idleId","Date","now","globalAdjustMetric","glyphs","value","key","glyphImages","has","addGlyphs","addAutoRun","pack","terminate","isPacking","packList","rectangleList","sort","packer","GuillotineBinPack","list","filter","InsertSizes","setPack","usedRectangles","RectanglePacker","addEventListener","messageEvent","postMessage","failedList","imgList","maxWidth","maxHeight","rectangle","find","gi","get","setPackFailed","setSize","cancel","tasks","runTasks","request","deadline","tr","timeRemaining","start","shift","window","clearTimeout","isName","obj","deepObserve","throttlePack","change","packStyle","str","oldText","replace","currentList","Array","from","Set","split","oldList","diffList","concat","t","includes","delete","all","idx","indexOf","splice","packCanvas","glyphList","isUnEmpty","Workspace","activeId","projectList","namedList","p","named","match","setName","configure","enforceActions","computedRequiresReaction","props","MuiButton","MuiButtonBase","disableRipple","MuiFilledInput","margin","MuiFormControl","MuiFormHelperText","MuiIconButton","MuiInputBase","MuiInputLabel","MuiListItem","dense","MuiOutlinedInput","MuiFab","MuiTable","MuiTextField","MuiToolbar","variant","overrides","MuiCssBaseline","html","WebkitFontSmoothing","MozOsxFontSmoothing","userSelect","minWidth","marginLeft","background","input","theme","createMuiTheme","primary","main","secondary","paper","default","activityBar","titleBar","sidebar","common","black","white","hover","bgPixel","backgroundColor","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","typography","transitions","create","shape","borderRadius","responsiveFontSizes","useStores","useContext","MobXProviderContext","useWorkspace","workspace","useLayout","currentProject","useProject","useStyle","useFont","useProjectUi","readFile","file","arrayBuffer","reader","FileReader","readAsArrayBuffer","target","result","useStyles","makeStyles","createStyles","clear","cursor","display","observer","classes","useState","loading","setLoading","hasFont","clearFont","Grid","container","alignItems","xs","Button","component","fullWidth","startIcon","CircularProgress","disabled","hidden","onChange","event","files","arrBuf","ArrayBuffer","catch","alert","message","accept","className","onClick","GridInput","before","children","after","childrenWidth","wrap","justify","Typography","noWrap","align","Input","inputProps","setLineHeight","step","Box","paddingX","marginY","setText","isIME","setIsIME","inputText","setInputText","TextField","multiline","rows","spellCheck","onCompositionStart","onCompositionEnd","setPadding","setSpacing","setAuto","Checkbox","checked","setFixedSize","setWidth","setHeight","PackConfig","FormAdjustMetric","setXAdvance","setXOffset","setYOffset","getHandle","handleSet","root","overflow","LeftBar","bgcolor","flexDirection","boxShadow","flex","Divider","formatStr","matchs","returns","storeToXml","bmfont","info","pages","chars","kernings","parser","DOMParser","xmlDOM","implementation","createDocument","infoDoc","parseFromString","documentElement","childNodes","commonDoc","pagesDoc","charsDoc","char","charDoc","count","kerningsDoc","kerningDoc","XMLSerializer","serializeToString","getLuaString","charset","charsCount","kerningsCounts","getTextString","toOutputInfo","fontScale","unitsPerEm","face","bold","italic","unicode","stretchH","smooth","aa","base","scaleW","scaleH","packed","xoffset","yoffset","xadvance","page","chnl","amount","round","getKerningValue","charToGlyphIndex","first","second","$Reader","$protobuf","$Writer","$util","$root","prefix","properties","prototype","encode","writer","hasOwnProperty","call","uint32","sint32","encodeDelimited","ldelim","decode","end","undefined","pos","tag","skipType","decodeDelimited","verify","isInteger","fromObject","object","toObject","options","defaults","toJSON","constructor","toJSONOptions","GradientColor","int32","string","isString","String","emptyArray","float","fork","isArray","error","TypeError","arrays","json","isFinite","newBuffer","double","slice","emptyObject","end2","tag2","isObject","keys2","objects","bool","Boolean","Long","fromBits","int64","low","high","fromValue","unsigned","LongBits","toNumber","long","longs","toString","s","getVersionNumber","version","reverse","reduce","previousValue","currentValue","currentIndex","pow","10000","verions","verion","updateOldProject","v","toOriginBuffer","protoProject","imgKerning","k","gl","glyphKerning","ExportButton","onSave","open","setOpen","val","setVal","ext","handleClickOpen","handleClose","useEffect","hotkeys","unbind","title","Dialog","onClose","DialogTitle","DialogContent","dividers","Select","displayEmpty","MenuItem","toUpperCase","DialogActions","autoFocus","zIndex","appBar","appName","marginRight","appNameSup","btn","textTransform","toast","setToast","worckSpace","labelRef","useRef","addProject","handleNewProject","useCallback","preventDefault","handleSaveProject","proto","projectBuffer","finish","perfixBuffer","saveAs","saveProject","toJS","handleSaveBitmapFont","zip","JSZip","getXmlString","toBlob","blob","generateAsync","content","outputFile","handleOpenProject","current","click","perfixName","latestVersionBuffer","u8","filePrefix","versionBuffer","isSbf","currentVersion","fileVersion","decodeProject","err","IconButton","href","Snackbar","anchorOrigin","vertical","horizontal","picker","borderColor","divider","border","WrappedSketchPicker","anchorEl","placement","pickerStyle","useTheme","shadows","alpha","usePickerStyle","Popper","styles","rgb","g","swatch","ColorInput","ClickAwayListener","mouseEvent","onClickAway","aria-hidden","FormColor","borderWidth","isActive","borderStyle","dark","activeColor","grey","ColorStop","divProps","clsx","ColorStopsHolder","onAdd","onUpdate","onSelect","setStartPoint","isDragging","setIsDragging","rootRef","clientWidth","handleMouseMove","buttons","findIndex","paletteItem","newPalette","clientY","clientX","handleMouseUp","stopPropagation","removeEventListener","onMouseDown","getBoundingClientRect","handleMouseDown","svg","verticalAlign","Palette","random","substr","sortedPalette","x1","y1","x2","y2","stopColor","GradientBuilder","rootEl","oldPalette","setOldPalette","setActiveId","setActiveColor","isAdd","setIsAdd","newIds","oldIds","diff","handleUpdate","isDelete","updateItem","right","offsetSpace","leftColor","Color","rightColor","red","green","blue","React","cloneElement","point","marginTop","transformOrigin","transform","AnglePicker","bounds","radians","atan2","FormAngle","updatePalette","setAngle","setType","RadioGroup","row","flexWrap","FormControlLabel","LINEAR","control","Radio","label","RADIAL","justifyContent","FileSelector","multiple","alt","FormImage","setRepetition","setScale","setColor","SOLID","GRADIENT","IMAGE","setUseStroke","setLineJoin","setLineCap","Switch","ButtonGroup","setUseShadow","setOffsetX","setOffsetY","setBlur","setBgColor","RightBar","useWheel","onWheel","deps","callback","handleWheel","ctrlKey","altKey","deltaX","deltaY","d","deltaScale","dom","passive","useSpaceDrag","onMove","ks","ms","moveState","setMoveState","dragStatus","useMemo","moveCallback","handleKeyEvent","state","keyCode","handleMove","handleEnd","dragState","imageRendering","packWidth","packHeight","setCanvas","canvasRef","domRef","offsetInfo","ix","iy","os","ox","oy","setTransform","fillRect","animationDuration","LinearProgress","PackView","outline","select","setSelectLetter","handleSelect","setData","minBaseLine","maxBaseLine","setPreviewTransform","lh","index","baseLine","basey","beginPath","moveTo","lineTo","setLineDash","lines","kerningMap","charMap","minX","minY","maxX","maxY","lk","kering","getPreviewCanvas","setPreviewText","setOffset","setGlyph","setKerning","disposer","steKerning","Preview","PreviewText","PreviewMertic","PreviewKerning","to","animationName","icon","minHeight","borderRight","whiteSpace","editor","appearance","ProjectTab","useRemove","onRemove","onRename","setEditor","sname","setSName","editorRef","handleRemove","focus","onDoubleClick","onKeyDown","onBlur","workSpace","selectProject","removeProject","setProjectName","Tabs","indicatorColor","textColor","scrollButtons","selectionFollowsFocus","TabIndicatorProps","slider","setShowPreview","anchorRef","handleChange","Slider","prevOpen","Paper","contains","MenuList","actions","inputLabel","removeImage","inputValue","setInputValue","changeSelect","direction","InputBase","onFocus","onInput","iv","fixed","panel","continer","overflowY","listWrap","addImages","isFullscreen","setFullscreen","handleLoadFile","test","matched","fileList","f","handleKeyDown","tagName","onDragEnter","onDragOver","onDrop","dataTransfer","Accordion","expanded","o","TransitionProps","AccordionSummary","expandIcon","AccordionDetails","tabsRoot","tabRoot","tabSelected","tabWrapper","WorkSpace","close","ConsecutiveSnackbars","reason","updateVersion","detail","Fragment","location","reload","aria-label","loadingBackdrop","drawer","Backdrop","App","ThemeProvider","CssBaseline","isLocalhost","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onSuccess","ReactDOM","render","getElementById","process","origin","fetch","headers","response","contentType","status","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration","waiting","channel","MessageChannel","port1","onmessage","dispatchEvent","CustomEvent","port2"],"mappings":"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","file":"static/js/main.d5b0e755.chunk.js","sourcesContent":["import { action, observable } from 'mobx'\n\nclass Ui {\n  @observable globalLoader = 0\n\n  @action.bound showGlobalLoader(num = 1): void {\n    this.globalLoader += num\n  }\n\n  @action.bound hideGlobalLoader(num = -1): void {\n    this.globalLoader += num\n  }\n}\n\nexport default Ui\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/RectanglePacker.89b15b65e604634cf633.worker.js\");\n}\n","type UseType<T, U> = T extends U ? true : false\r\n\r\ntype IsNumber<T> = UseType<T, number>\r\n\r\nconst num = <T>(n: T): IsNumber<T> => {\r\n  return (typeof n === 'number' && !Number.isNaN(n)) as IsNumber<T>\r\n}\r\n\r\nconst is = {\r\n  num,\r\n}\r\n\r\nexport default is\r\n","import fontStyleStringify from './fontStyleStringify'\n\ninterface StyleConig {\n  fontFamily: string\n  fontSize: number\n}\ninterface Baselines {\n  middle: number\n  hanging: number\n  top: number\n  alphabetic: number\n  ideographic: number\n  bottom: number\n}\n\nlet canvas: HTMLCanvasElement\n\nexport default function getTextBaselines(\n  text: string,\n  styleConig: StyleConig,\n): Baselines {\n  if (!canvas) canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n  if (!ctx) throw new Error('Get context 2d failed.')\n  const font = fontStyleStringify(styleConig)\n\n  // clear before settings\n  canvas.width = 1\n  canvas.height = 1\n\n  ctx.font = font\n\n  ctx.textBaseline = 'middle'\n  const middle = ctx.measureText(text)\n  ctx.textBaseline = 'hanging'\n  const hanging = ctx.measureText(text)\n  ctx.textBaseline = 'top'\n  const top = ctx.measureText(text)\n  ctx.textBaseline = 'alphabetic'\n  const alphabetic = ctx.measureText(text)\n  ctx.textBaseline = 'ideographic'\n  const ideographic = ctx.measureText(text)\n  ctx.textBaseline = 'bottom'\n  const bottom = ctx.measureText(text)\n\n  return {\n    middle: 0,\n    hanging: hanging.actualBoundingBoxAscent - middle.actualBoundingBoxAscent,\n    top: top.actualBoundingBoxAscent - middle.actualBoundingBoxAscent,\n    alphabetic:\n      middle.actualBoundingBoxDescent - alphabetic.actualBoundingBoxDescent,\n    ideographic:\n      middle.actualBoundingBoxDescent - ideographic.actualBoundingBoxDescent,\n    bottom: middle.actualBoundingBoxDescent - bottom.actualBoundingBoxDescent,\n  }\n}\n","import is from './is'\r\n\r\nconst num = <T extends unknown>(a: T, b: number): number => {\r\n  if (is.num(a)) return a as number\r\n  return b\r\n}\r\n\r\nconst use = {\r\n  num,\r\n}\r\n\r\nexport default use\r\n","import { action, observable } from 'mobx'\r\nimport use from 'src/utils/use'\r\n\r\nclass Ui {\r\n  @observable scale = 1\r\n\r\n  @observable offsetX = 0\r\n\r\n  @observable offsetY = 0\r\n\r\n  @observable width = 0\r\n\r\n  @observable height = 0\r\n\r\n  @observable previewText = 'Hello World!\\nHello Snow Bamboo!' // /\\r\\n|\\r|\\n/\r\n\r\n  @observable selectLetter = ''\r\n\r\n  @observable selectNextLetter = ''\r\n\r\n  @observable showPreview = false\r\n\r\n  @observable previewScale = 1\r\n\r\n  @observable previewOffsetX = 0\r\n\r\n  @observable previewOffsetY = 0\r\n\r\n  @observable packFailed = false\r\n\r\n  constructor(ui: Partial<Ui> = {}) {\r\n    if (ui.previewText) {\r\n      this.previewText = ui.previewText\r\n    }\r\n  }\r\n\r\n  reOffset() {\r\n    this.offsetX = Math.min(\r\n      Math.max(this.width / -2, this.offsetX),\r\n      this.width / 2,\r\n    )\r\n    this.offsetY = Math.min(\r\n      Math.max(this.height / -2, this.offsetY),\r\n      this.height / 2,\r\n    )\r\n    this.scale = Math.max(this.scale, 0.01)\r\n  }\r\n\r\n  @action.bound setTransform(trans: Partial<Ui>): void {\r\n    this.scale = use.num(trans.scale, this.scale)\r\n    this.offsetX = use.num(trans.offsetX, this.offsetX)\r\n    this.offsetY = use.num(trans.offsetY, this.offsetY)\r\n    this.reOffset()\r\n  }\r\n\r\n  @action.bound setSize(width: number, height: number): void {\r\n    this.width = width\r\n    this.height = height\r\n    this.reOffset()\r\n  }\r\n\r\n  @action.bound setPreviewText(text: string): void {\r\n    this.previewText = text\r\n  }\r\n\r\n  @action.bound setShowPreview(showPreview: boolean): void {\r\n    this.showPreview = showPreview\r\n  }\r\n\r\n  @action.bound setPreviewTransform(trans: Partial<Ui>): void {\r\n    this.previewScale = Math.max(\r\n      use.num(trans.previewScale, this.previewScale),\r\n      0.01,\r\n    )\r\n    this.previewOffsetX = use.num(trans.previewOffsetX, this.previewOffsetX)\r\n    this.previewOffsetY = use.num(trans.previewOffsetY, this.previewOffsetY)\r\n  }\r\n\r\n  @action.bound setSelectLetter(letter: string = '', next: string = ''): void {\r\n    this.selectLetter = letter\r\n    this.selectNextLetter = next\r\n  }\r\n\r\n  @action.bound setPackFailed(packFailed: boolean): void {\r\n    this.packFailed = packFailed\r\n  }\r\n}\r\n\r\nexport default Ui\r\n","import is from './is'\n\nexport interface FontStyleConfig {\n  fontStyle?: 'normal' | 'italic' | 'oblique' | string\n  fontVariant?: 'normal' | 'none' | 'small-caps' | string\n  fontWeight?:\n    | 'normal'\n    | 'bold'\n    | 'lighter'\n    | 'bolder'\n    | '100'\n    | '200'\n    | '300'\n    | '400'\n    | '500'\n    | '600'\n    | '700'\n    | '800'\n    | '900'\n    | 100\n    | 200\n    | 300\n    | 400\n    | 500\n    | 600\n    | 700\n    | 800\n    | 900\n    | 'inherit'\n    | 'initial'\n    | 'unset'\n  fontSize?: string | number\n  lineHeight?: string | number\n  fontFamily?: string\n}\n\nconst defaultConfig: FontStyleConfig = {\n  fontSize: '14px',\n  fontFamily: 'sans-serif',\n}\n\n// https://developer.mozilla.org/zh-CN/docs/Web/CSS/font\nexport default function fontStyleStringify(\n  fontStyleConfig: FontStyleConfig,\n): string {\n  const config = { ...defaultConfig, ...fontStyleConfig }\n  const arr = []\n\n  if (config.fontStyle) arr.push(config.fontStyle)\n\n  if (config.fontVariant) arr.push(config.fontVariant)\n\n  if (config.fontWeight) arr.push(config.fontWeight)\n\n  if (is.num(config.fontSize)) {\n    config.fontSize = `${config.fontSize}px`\n  } else {\n    config.fontSize = defaultConfig.fontSize\n  }\n\n  if (config.lineHeight) {\n    arr.push(`${config.fontSize}/${config.lineHeight}`)\n  } else {\n    arr.push(config.fontSize)\n  }\n\n  arr.push(config.fontFamily)\n\n  return arr.join(' ')\n}\n","let fontTargeCache: HTMLStyleElement\nlet loadDiv: HTMLDivElement\n\nexport default function updateFontFace(\n  name: string,\n  url: string,\n): Promise<void> {\n  const cssNode = document.createTextNode(`\n    @font-face {\n        font-family: \"${name}\";\n        src: url(\"${url}\") format('truetype');\n    }`)\n\n  if (!fontTargeCache) {\n    const textNode = document.createTextNode(`A`)\n    fontTargeCache = document.createElement('style')\n    loadDiv = document.createElement('div')\n    document.head.appendChild(fontTargeCache)\n    fontTargeCache.appendChild(cssNode)\n    loadDiv.appendChild(textNode)\n    loadDiv.style.position = 'absolute'\n    loadDiv.style.left = '-1000px'\n    loadDiv.style.top = '-1000px'\n    loadDiv.style.opacity = '0'\n    loadDiv.style.fontSize = '12px'\n    loadDiv.style.pointerEvents = 'none'\n    document.body.appendChild(loadDiv)\n  } else {\n    fontTargeCache.appendChild(cssNode)\n  }\n  loadDiv.style.fontFamily = name\n  return new Promise((resolve) => setTimeout(resolve, 200))\n}\n","import { action, computed, observable } from 'mobx'\n\n// import GradientPaletteItem from './gradientPaletteItem'\n\nexport enum GradientType {\n  LINEAR,\n  RADIAL,\n}\n\nexport interface GradientColor {\n  offset: number\n  color: string\n}\n\nexport interface GradientPaletteItem extends GradientColor {\n  id: number\n}\n\nexport interface GradientColorOption extends GradientColor {\n  id?: number\n}\n\nclass Gradient {\n  @observable type: GradientType = 0\n\n  @observable angle: number\n\n  @observable.shallow palette: GradientPaletteItem[] = []\n\n  constructor(gradient: Partial<Gradient> = {}) {\n    this.type = gradient.type && GradientType[gradient.type] ? gradient.type : 0\n    this.angle = gradient.angle || 0\n    if (gradient.palette) {\n      gradient.palette.forEach((item) => {\n        this.palette.push({\n          ...item,\n          id: item.id || this.nextId,\n        })\n      })\n    } else {\n      this.addColor(0, '#FFF')\n      this.addColor(1)\n    }\n  }\n\n  @computed get ids(): number[] {\n    return this.palette.map((color) => color.id)\n  }\n\n  @computed get nextId(): number {\n    if (this.ids.length === 0) return 1\n    return Math.max(...this.ids) + 1\n  }\n\n  @action.bound setType(type: GradientType): void {\n    this.type = type\n  }\n\n  @action.bound setAngle(angle: number): void {\n    this.angle = angle\n  }\n\n  @action.bound addColor(offset = 0, color = '#000000'): void {\n    this.palette.push({ offset, color, id: this.nextId })\n  }\n\n  @action.bound updatePalette(palette: GradientPaletteItem[]): void {\n    this.palette = palette\n  }\n}\n\nexport default Gradient\n","import { action, observable, computed, runInAction } from 'mobx'\r\nimport getTextBaselines from 'src/utils/getTextBaselines'\r\nimport { parse, Font as OpenType } from 'opentype.js'\r\nimport updateFontFace from 'src/utils/updateFontFace'\r\n\r\nclass Font {\r\n  @observable.ref font: ArrayBuffer | null = null\r\n\r\n  @observable family: string = 'sans-serif'\r\n\r\n  @observable size: number\r\n\r\n  @observable lineHeight = 1.25\r\n\r\n  @observable middle = 0\r\n\r\n  @observable hanging = 0\r\n\r\n  @observable top = 0\r\n\r\n  @observable alphabetic = 0\r\n\r\n  @observable ideographic = 0\r\n\r\n  @observable bottom = 0\r\n\r\n  @observable.ref opentype: OpenType | null = null\r\n\r\n  @computed get minBaseLine() {\r\n    const min = Math.min(\r\n      this.middle,\r\n      this.hanging,\r\n      this.top,\r\n      this.alphabetic,\r\n      this.ideographic,\r\n      this.bottom,\r\n    )\r\n    if (Number.isNaN(Number(min))) return 0\r\n    return min\r\n  }\r\n\r\n  @computed get maxBaseLine() {\r\n    const max = Math.max(\r\n      this.middle,\r\n      this.hanging,\r\n      this.top,\r\n      this.alphabetic,\r\n      this.ideographic,\r\n      this.bottom,\r\n    )\r\n    if (Number.isNaN(Number(max))) return this.size\r\n    return max\r\n  }\r\n\r\n  @computed get hasFont() {\r\n    if (this.font && this.opentype && this.family !== 'sans-serif') return true\r\n    return false\r\n  }\r\n\r\n  constructor(font: Partial<Font> = {}) {\r\n    this.size = font.size || 72\r\n    this.lineHeight = font.lineHeight || 1.25\r\n\r\n    if (font.font && font.font.byteLength) {\r\n      this.setFont(font.font)\r\n    } else {\r\n      this.updateBaseines()\r\n    }\r\n  }\r\n\r\n  updateBaseines(): void {\r\n    const bls = getTextBaselines('a', {\r\n      fontFamily: this.family,\r\n      fontSize: this.size,\r\n    })\r\n\r\n    this.middle = bls.middle\r\n    this.hanging = bls.hanging\r\n    this.top = bls.top\r\n    this.alphabetic = bls.alphabetic\r\n    this.ideographic = bls.ideographic\r\n    this.bottom = bls.bottom\r\n  }\r\n\r\n  @action.bound setFont(buffer: ArrayBuffer): Promise<void> {\r\n    try {\r\n      this.opentype = parse(buffer, { lowMemory: true })\r\n    } catch (e) {\r\n      return Promise.resolve()\r\n    }\r\n    const { names } = this.opentype\r\n    const fontName = names.postScriptName[Object.keys(names.postScriptName)[0]]\r\n    const url = URL.createObjectURL(new Blob([buffer]))\r\n    return updateFontFace(fontName, url).then(() => {\r\n      runInAction(() => {\r\n        this.family = fontName\r\n        this.font = buffer\r\n        this.updateBaseines()\r\n      })\r\n    })\r\n  }\r\n\r\n  @action.bound setSize(size: number): void {\r\n    this.size = size\r\n    this.updateBaseines()\r\n  }\r\n\r\n  @action.bound setLineHeight(lineHeight: number): void {\r\n    this.lineHeight = lineHeight\r\n  }\r\n\r\n  @action.bound clearFont(): void {\r\n    this.font = null\r\n    this.opentype = null\r\n    this.family = 'sans-serif'\r\n    this.updateBaseines()\r\n  }\r\n}\r\n\r\nexport default Font\r\n","import { action, observable, runInAction } from 'mobx'\nimport use from 'src/utils/use'\nimport base64ToArrayBuffer from 'src/utils/base64ToArrayBuffer'\n\nexport type Repetition = 'repeat' | 'repeat-x' | 'repeat-y' | 'no-repeat'\n\nconst DEFAULT_IMAGE =\n  'iVBORw0KGgoAAAANSUhEUgAAAAgAAAAIAQMAAAD+wSzIAAAABlBMVEX////MzMw46qqDAAAADklEQVQI12Pgh8IPEAgAEeAD/Xk4HBcAAAAASUVORK5CYII='\n\nclass PatternTexture {\n  @observable.ref buffer: ArrayBuffer = base64ToArrayBuffer(DEFAULT_IMAGE)\n\n  @observable.ref image: HTMLImageElement | null = null\n\n  @observable src = ''\n\n  @observable repetition: Repetition = 'repeat'\n\n  @observable scale: number\n\n  constructor(pt: Partial<PatternTexture> = {}) {\n    this.scale = use.num(pt.scale, 1)\n    this.repetition = pt.repetition || 'repeat'\n    this.setImage(pt.buffer || this.buffer)\n  }\n\n  @action.bound setImage(buffer: ArrayBuffer): void {\n    const src = URL.createObjectURL(new Blob([buffer]))\n    const img = new Image()\n    img.onload = () => {\n      runInAction('setPatternTextureImage', () => {\n        this.buffer = buffer\n        this.image = img\n        this.src = src\n        img.onload = null\n      })\n    }\n    img.src = src\n  }\n\n  @action.bound setRepetition(repetition: Repetition): void {\n    this.repetition = repetition\n  }\n\n  @action.bound setScale(scale: number): void {\n    this.scale = scale\n  }\n}\n\nexport default PatternTexture\n","import { action, observable } from 'mobx'\n\nimport Gradient from './gradient'\nimport PatternTexture from './patternTexture'\n\nexport enum FillType {\n  SOLID,\n  GRADIENT,\n  IMAGE,\n}\n\nclass Fill {\n  @observable type: FillType\n\n  @observable color: string\n\n  @observable.shallow gradient: Gradient\n\n  @observable.shallow patternTexture: PatternTexture\n\n  constructor(fill: Partial<Fill> = {}) {\n    this.color = fill.color || '#000000'\n    this.type = fill.type && FillType[fill.type] ? fill.type : 0\n    this.gradient = new Gradient(fill.gradient)\n    this.patternTexture = new PatternTexture(fill.patternTexture)\n  }\n\n  @action.bound setType(type: FillType = 0): void {\n    this.type = type\n  }\n\n  @action.bound setColor(color = '#000000'): void {\n    this.color = color\n  }\n}\n\nexport default Fill\n","export default function base64ToArrayBuffer(base64: string): ArrayBuffer {\n  const binaryString = atob(base64)\n  const len = binaryString.length\n  const bytes = new Uint8Array(len)\n  for (let i = 0; i < len; i += 1) {\n    bytes[i] = binaryString.charCodeAt(i)\n  }\n  return bytes.buffer\n}\n","import fontStyleStringify, { FontStyleConfig } from './fontStyleStringify'\n\nexport interface TextSize {\n  text: string\n  font: string\n  width: number\n  height: number\n  fontWidth: number\n  fontHeight: number\n  trimOffsetTop: number\n  trimOffsetLeft: number\n  trimOffsetRight: number\n  trimOffsetBottom: number\n}\n\nlet canvas: HTMLCanvasElement\n\nexport default function getTextSize(\n  text: string,\n  config: FontStyleConfig,\n): TextSize {\n  if (!canvas) canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n  if (!ctx) throw new Error('Get context 2d failed.')\n\n  // clear before settings\n  canvas.width = 1\n  canvas.height = 1\n\n  const font = fontStyleStringify(config)\n\n  ctx.font = font\n\n  ctx.textAlign = 'left'\n  ctx.textBaseline = 'bottom'\n\n  const testA = ctx.measureText(text)\n\n  if (typeof testA.actualBoundingBoxLeft === 'undefined') {\n    return {\n      text,\n      font,\n      width: testA.width,\n      height: parseInt(`${config.fontSize ?? '14'}`, 10),\n      fontWidth: testA.width,\n      fontHeight: parseInt(`${config.fontSize ?? '14'}`, 10),\n      trimOffsetTop: 0,\n      trimOffsetLeft: 0,\n      trimOffsetRight: 0,\n      trimOffsetBottom: 0,\n    }\n  }\n\n  ctx.textAlign = 'right'\n  ctx.textBaseline = 'top'\n\n  const testB = ctx.measureText(text)\n\n  const trimOffsetLeft = Math.ceil(testA.actualBoundingBoxLeft)\n  const trimOffsetRight = Math.ceil(testB.actualBoundingBoxRight)\n  const trimOffsetTop = Math.ceil(testB.actualBoundingBoxAscent)\n  const trimOffsetBottom = Math.ceil(testA.actualBoundingBoxDescent)\n  const width = trimOffsetLeft + Math.ceil(testA.actualBoundingBoxRight)\n  const height = trimOffsetBottom + Math.ceil(testA.actualBoundingBoxAscent)\n  const fontWidth = Math.ceil(testA.width)\n  const fontHeight =\n    testA.actualBoundingBoxAscent - testB.actualBoundingBoxAscent\n\n  return {\n    text,\n    font,\n    width,\n    height,\n    fontWidth,\n    fontHeight,\n    trimOffsetTop,\n    trimOffsetLeft,\n    trimOffsetRight,\n    trimOffsetBottom,\n  }\n}\n","import { action, observable } from 'mobx'\nimport use from 'src/utils/use'\n\nimport Fill from './fill'\n\nclass Stroke extends Fill {\n  @observable width = 1\n\n  /**\n   * butt   默认。向线条的每个末端添加平直的边缘。\n   * round  向线条的每个末端添加圆形线帽。\n   * square 向线条的每个末端添加正方形线帽。\n   */\n  @observable lineCap: CanvasLineCap\n\n  /**\n   * bevel 创建斜角。\n   * round 创建圆角。\n   * miter 默认。创建尖角。\n   */\n  @observable lineJoin: CanvasLineJoin\n\n  constructor(stroke: Partial<Stroke> = {}) {\n    super(stroke)\n    this.width = use.num(stroke.width, 1)\n    this.lineCap = stroke.lineCap || 'round'\n    this.lineJoin = stroke.lineJoin || 'round'\n  }\n\n  @action.bound setWidth(width: number): void {\n    this.width = width\n  }\n\n  @action.bound setLineCap(lineCap: CanvasLineCap): void {\n    this.lineCap = lineCap\n  }\n\n  @action.bound setLineJoin(lineJoin: CanvasLineJoin): void {\n    this.lineJoin = lineJoin\n  }\n}\n\nexport default Stroke\n","import { action, observable } from 'mobx'\nimport use from 'src/utils/use'\n\nclass Shadow {\n  @observable color: string\n\n  @observable blur = 1\n\n  @observable offsetX = 1\n\n  @observable offsetY = 1\n\n  constructor(shadow: Partial<Shadow> = {}) {\n    this.color = shadow.color || '#000000'\n    this.blur = use.num(shadow.blur, 1)\n    this.offsetX = use.num(shadow.offsetX, 1)\n    this.offsetY = use.num(shadow.offsetY, 1)\n  }\n\n  @action.bound setColor(color: string): void {\n    this.color = color\n  }\n\n  @action.bound setBlur(blur: number): void {\n    this.blur = blur\n  }\n\n  @action.bound setOffsetX(offsetX: number): void {\n    this.offsetX = offsetX\n  }\n\n  @action.bound setOffsetY(offsetY: number): void {\n    this.offsetY = offsetY\n  }\n\n  @action.bound setOffset(offsetX: number, offsetY: number): void {\n    this.offsetX = offsetX\n    this.offsetY = offsetY\n  }\n}\n\nexport default Shadow\n","import { action, observable } from 'mobx'\n\nimport Font from './font'\nimport Fill from './fill'\nimport Stroke from './stroke'\nimport Shadow from './shadow'\n\nclass Style {\n  @observable readonly font: Font\n\n  @observable readonly fill: Fill\n\n  @observable useStroke: boolean\n\n  @observable readonly stroke: Stroke\n\n  @observable useShadow: boolean\n\n  @observable readonly shadow: Shadow\n\n  @observable bgColor = 'rgba(0,0,0,0)'\n\n  constructor(style: Partial<Style> = {}) {\n    this.font = new Font(style.font)\n    this.fill = new Fill(style.fill)\n    this.stroke = new Stroke(style.stroke)\n    this.shadow = new Shadow(style.shadow)\n    this.useShadow = !!style.useShadow\n    this.useStroke = !!style.useStroke\n  }\n\n  @action.bound setUseStroke(useStroke: boolean): void {\n    this.useStroke = useStroke\n  }\n\n  @action.bound setUseShadow(useShadow: boolean): void {\n    this.useShadow = useShadow\n  }\n\n  @action.bound setBgColor(bgColor: string): void {\n    this.bgColor = bgColor\n  }\n}\n\nexport default Style\n","import { action, observable } from 'mobx'\r\nimport use from 'src/utils/use'\r\n\r\nclass Layout {\r\n  @observable padding = 1\r\n\r\n  @observable spacing = 1\r\n\r\n  @observable power = false\r\n\r\n  @observable width = 1024\r\n\r\n  @observable height = 1024\r\n\r\n  @observable auto = true\r\n\r\n  @observable fixedSize = false\r\n\r\n  constructor(layout: Partial<Layout> = {}) {\r\n    this.padding = use.num(layout.padding, 1)\r\n\r\n    this.spacing = use.num(layout.spacing, 1)\r\n\r\n    this.power = !!layout.power\r\n\r\n    this.width = use.num(layout.width, 1024)\r\n\r\n    this.height = use.num(layout.height, 1024)\r\n\r\n    // Compatible with old files, default true.\r\n    this.auto = layout.auto === false ? false : true\r\n\r\n    this.fixedSize = !!layout.fixedSize\r\n  }\r\n\r\n  @action.bound setPadding(padding: number): void {\r\n    this.padding = padding\r\n  }\r\n\r\n  @action.bound setSpacing(spacing: number): void {\r\n    this.spacing = spacing\r\n  }\r\n\r\n  @action.bound setPower(power: boolean): void {\r\n    this.power = power\r\n  }\r\n\r\n  @action.bound setWidth(width: number): void {\r\n    this.width = width\r\n  }\r\n\r\n  @action.bound setHeight(height: number): void {\r\n    this.height = height\r\n  }\r\n\r\n  @action.bound setAuto(auto: boolean): void {\r\n    this.auto = auto\r\n  }\r\n\r\n  @action.bound setFixedSize(fixedSize: boolean): void {\r\n    this.fixedSize = fixedSize\r\n  }\r\n}\r\n\r\nexport default Layout\r\n","import { action, observable } from 'mobx'\n\nclass Metric {\n  @observable xAdvance = 0\n\n  @observable xOffset = 0\n\n  @observable yOffset = 0\n\n  constructor(metric: Partial<Metric> = {}) {\n    this.xAdvance = metric.xAdvance || 0\n    this.xOffset = metric.xOffset || 0\n    this.yOffset = metric.yOffset || 0\n  }\n\n  @action.bound setXAdvance(xAdvance: number): void {\n    this.xAdvance = xAdvance\n  }\n\n  @action.bound setXOffset(xOffset: number): void {\n    this.xOffset = xOffset\n  }\n\n  @action.bound setYOffset(yOffset: number): void {\n    this.yOffset = yOffset\n  }\n}\n\nexport default Metric\n","export interface TrimImageInfo {\n  width: number\n  height: number\n  trimOffsetTop: number\n  trimOffsetLeft: number\n}\n\nexport default function trimImageData(\n  imageData: ImageData,\n  threshold = 0,\n): TrimImageInfo {\n  const { data, width, height } = imageData\n  let topTrim = 0\n  let bottomTrim = 0\n  let leftTrim = 0\n  let rightTrim = 0\n  let topStatus = true\n  let bottomStatus = true\n  let leftStatus = true\n  let rightStatus = true\n\n  let h: number = Math.ceil(height / 2)\n  const w: number = Math.ceil(width / 2)\n\n  for (let i = 0; i < h; i += 1) {\n    for (let j = 0; j < width; j += 1) {\n      if (topStatus && data[(i * width + j) * 4 + 3] > threshold) {\n        topStatus = false\n      }\n      if (\n        bottomStatus &&\n        data[((height - i - 1) * width + j) * 4 + 3] > threshold\n      ) {\n        bottomStatus = false\n      }\n      if (!topStatus && !bottomStatus) {\n        break\n      }\n    }\n    if (!topStatus && !bottomStatus) {\n      break\n    }\n    if (topStatus) topTrim += 1\n    if (bottomStatus) bottomTrim += 1\n  }\n\n  if (topTrim + bottomTrim >= height) {\n    // Is empty image.\n    return {\n      trimOffsetLeft: width * -1,\n      trimOffsetTop: height * -1,\n      width: 0,\n      height: 0,\n    }\n  }\n\n  h = height - bottomTrim\n\n  for (let i = 0; i < w; i += 1) {\n    for (let j = topTrim; j < h; j += 1) {\n      if (leftStatus && data[(width * j + i) * 4 + 3] > threshold) {\n        leftStatus = false\n      }\n      if (\n        rightStatus &&\n        data[(width * j + width - i - 1) * 4 + 3] > threshold\n      ) {\n        rightStatus = false\n      }\n      if (!leftStatus && !rightStatus) {\n        break\n      }\n    }\n    if (!leftStatus && !rightStatus) {\n      break\n    }\n    if (leftStatus) leftTrim += 1\n    if (rightStatus) rightTrim += 1\n  }\n\n  return {\n    trimOffsetLeft: leftTrim * -1,\n    trimOffsetTop: topTrim * -1,\n    width: width - leftTrim - rightTrim,\n    height: height - topTrim - bottomTrim,\n  }\n}\n","export interface Point {\n  x: number\n  y: number\n}\n\nexport default function getPointOnCircle(\n  x: number,\n  y: number,\n  r: number,\n  angle: number,\n): Point {\n  return {\n    x: x + r * Math.cos((Math.PI / 180) * angle),\n    y: y + r * Math.sin((Math.PI / 180) * angle),\n  }\n}\n","import getPointOnCircle from './getPointOnCircle'\n\ninterface GarentColor {\n  offset: number\n  color: string\n}\n\ninterface Pradient {\n  type: 0 | 1\n  palette: GarentColor[]\n  angle: number\n}\n\ninterface PatternTexture {\n  image: HTMLImageElement | null\n  repetition: string\n  scale: number\n}\n\ninterface Config {\n  type: number\n  color: string\n  gradient: Pradient\n  patternTexture: PatternTexture\n}\n\nexport default function getCanvasStyle(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  config: Config,\n): string | CanvasGradient | CanvasPattern {\n  // 纯色\n  if (config.type === 0) {\n    return config.color\n  }\n\n  // 渐变\n  if (config.type === 1) {\n    const { type, palette, angle } = config.gradient\n    let gradient: CanvasGradient\n    const cx = x + width / 2\n    const cy = y + height / 2\n    const r = Math.max(width, height) / 2\n    if (type === 0) {\n      const startPoint = getPointOnCircle(cx, cy, r, angle + 180)\n      const endPoint = getPointOnCircle(cx, cy, r, angle)\n      gradient = ctx.createLinearGradient(\n        startPoint.x,\n        startPoint.y,\n        endPoint.x,\n        endPoint.y,\n      )\n    } else {\n      gradient = ctx.createRadialGradient(cx, cy, 0, cx, cy, r)\n    }\n\n    palette.forEach((color) => {\n      gradient.addColorStop(color.offset, color.color)\n    })\n\n    return gradient\n  }\n\n  const { image, repetition, scale } = config.patternTexture\n  if (!image) return 'rgba(0,0,0,0)'\n\n  if (scale === 1)\n    return ctx.createPattern(image, repetition) || 'rgba(0,0,0,0)'\n\n  const { naturalWidth, naturalHeight } = image\n  const canvas: HTMLCanvasElement = document.createElement('canvas')\n  canvas.width = Math.ceil(naturalWidth * scale)\n  canvas.height = Math.ceil(naturalHeight * scale)\n  const textureCtx = canvas.getContext('2d')\n\n  if (!textureCtx) return 'rgba(0,0,0,0)'\n\n  textureCtx.drawImage(image, 0, 0, canvas.width, canvas.height)\n  return ctx.createPattern(canvas, repetition) || 'rgba(0,0,0,0)'\n}\n","import trimImageData from './trimImageData'\nimport getTextSize, { TextSize } from './getTextSize'\nimport fontStyleStringify from './fontStyleStringify'\nimport getCanvasStyle from './getCanvasStyle'\n\nexport interface GlyphInfo extends TextSize {\n  canvas: HTMLCanvasElement | null\n}\n\ninterface ParentColor {\n  offset: number\n  color: string\n}\n\ninterface Gradient {\n  type: 0 | 1\n  palette: ParentColor[]\n  angle: number\n}\n\ninterface PatternTexture {\n  image: HTMLImageElement | null\n  repetition: string\n  scale: number\n}\n\ninterface Fill {\n  type: number\n  color: string\n  gradient: Gradient\n  patternTexture: PatternTexture\n}\n\ninterface Stroke extends Fill {\n  width: number\n  lineJoin: CanvasLineJoin\n  lineCap: CanvasLineCap\n}\n\ninterface Font {\n  family: string\n  size: number\n}\n\ninterface Shadow {\n  color: string\n  blur: number\n  offsetX: number\n  offsetY: number\n}\n\nexport interface Config {\n  font: Font\n  fill: Fill\n  stroke?: Stroke\n  shadow?: Shadow\n}\n\nexport default function getGlyphInfo(text: string, config: Config): GlyphInfo {\n  const { font, stroke, shadow, fill } = config\n\n  const styleConig = {\n    fontSize: font.size,\n    fontFamily: font.family,\n  }\n\n  const trimInfo = getTextSize(text, styleConig)\n  const { width, height, trimOffsetLeft, trimOffsetTop } = trimInfo\n  if (width === 0 || height === 0) return { canvas: null, ...trimInfo }\n\n  const lineWidth = stroke ? stroke.width * 2 : 0 // canvas is center stroke\n  let addX = lineWidth\n  let addY = lineWidth\n  let styleX = (width - font.size) / 2\n  let styleY = (height - font.size) / 2\n\n  if (shadow) {\n    const blur = Math.ceil(shadow.blur * 1.5)\n    addX = Math.abs(shadow.offsetX) + blur\n    addY = Math.abs(shadow.offsetY) + blur\n  }\n\n  styleX += addX\n  styleY += addY\n\n  let canvas = document.createElement('canvas')\n  let ctx = canvas.getContext('2d') as CanvasRenderingContext2D\n  canvas.width = width + addX * 2\n  canvas.height = height + addY * 2\n\n  ctx.textAlign = 'left'\n  ctx.textBaseline = 'top'\n\n  ctx.font = fontStyleStringify({\n    fontSize: font.size,\n    fontFamily: font.family,\n  })\n\n  if (stroke && lineWidth) {\n    ctx.lineWidth = lineWidth\n    ctx.lineCap = stroke.lineCap\n    ctx.lineJoin = stroke.lineJoin\n    ctx.strokeStyle = getCanvasStyle(\n      ctx,\n      styleX,\n      styleY,\n      font.size,\n      font.size,\n      stroke,\n    )\n    ctx.strokeText(text, addX + trimOffsetLeft, addY + trimOffsetTop)\n  }\n\n  ctx.fillStyle = getCanvasStyle(\n    ctx,\n    styleX,\n    styleY,\n    font.size,\n    font.size,\n    fill,\n  )\n  ctx.fillText(text, addX + trimOffsetLeft, addY + trimOffsetTop)\n\n  if (shadow) {\n    const cvs = document.createElement('canvas')\n    cvs.width = width + addX * 2\n    cvs.height = height + addY * 2\n    const newCtx = cvs.getContext('2d') as CanvasRenderingContext2D\n\n    newCtx.shadowColor = shadow.color\n    newCtx.shadowBlur = shadow.blur\n    newCtx.shadowOffsetX = shadow.offsetX\n    newCtx.shadowOffsetY = shadow.offsetY\n\n    newCtx.drawImage(canvas, 0, 0)\n\n    canvas = cvs\n    ctx = newCtx\n  }\n\n  if (canvas.width === 0 || canvas.height === 0) {\n    return {\n      canvas,\n      ...trimInfo,\n    }\n  }\n\n  const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height)\n  const styleTrimInfo = trimImageData(imgData)\n  canvas.width = styleTrimInfo.width\n  canvas.height = styleTrimInfo.height\n  trimInfo.width = styleTrimInfo.width\n  trimInfo.height = styleTrimInfo.height\n  ctx.putImageData(\n    imgData,\n    styleTrimInfo.trimOffsetLeft,\n    styleTrimInfo.trimOffsetTop,\n  )\n  trimInfo.trimOffsetLeft += addX + styleTrimInfo.trimOffsetLeft\n  trimInfo.trimOffsetTop += addY + styleTrimInfo.trimOffsetTop\n  trimInfo.trimOffsetBottom +=\n    addY +\n    (height + addY * 2 + styleTrimInfo.trimOffsetTop - styleTrimInfo.height)\n\n  return {\n    canvas,\n    ...trimInfo,\n  }\n}\n","import { observable, action } from 'mobx'\n\nimport Metric from './metric'\n\nexport type GlyphType = 'text' | 'image'\n\nclass GlyphBase {\n  readonly type: GlyphType = 'text'\n\n  @observable letter = ''\n\n  @observable.ref source: HTMLImageElement | HTMLCanvasElement | null = null\n\n  @observable width = 0\n\n  @observable height = 0\n\n  @observable x = 0\n\n  @observable y = 0\n\n  @observable fontWidth = 0\n\n  @observable fontHeight = 0\n\n  @observable trimOffsetTop = 0\n\n  @observable trimOffsetLeft = 0\n\n  @observable trimOffsetRight = 0\n\n  @observable trimOffsetBottom = 0\n\n  @observable.ref adjustMetric: Metric\n\n  @observable kerning: Map<string, number> = new Map()\n\n  constructor(glyph: Partial<GlyphBase> = {}) {\n    this.letter = glyph.letter || ''\n    this.adjustMetric = new Metric(glyph.adjustMetric)\n\n    if (glyph.kerning) {\n      this.kerning = glyph.kerning\n    }\n  }\n\n  @action.bound steKerning(text: string, kerning: number) {\n    this.kerning.set(text, kerning)\n  }\n}\n\nexport default GlyphBase\n","import { action } from 'mobx'\nimport getGlyphInfo, { Config } from 'src/utils/getGlyphInfo'\nimport GlyphBase from './glyphBase'\n\nimport Style from './style'\n\nclass GlyphFont extends GlyphBase {\n  constructor(galyphFont: Partial<GlyphFont> = {}, textStyle: Style) {\n    super(galyphFont)\n    this.setGlyphInfo(textStyle)\n  }\n\n  @action setGlyphInfo(textStyle: Style): void {\n    const { font, fill, useStroke, stroke, useShadow, shadow } = textStyle\n    const config: Config = { font, fill }\n    if (useStroke) config.stroke = stroke\n    if (useShadow) config.shadow = shadow\n\n    const glyphInfo = getGlyphInfo(this.letter, config)\n    this.source = glyphInfo.canvas\n    this.width = glyphInfo.width\n    this.height = glyphInfo.height\n    this.fontWidth = glyphInfo.fontWidth\n    this.fontHeight = glyphInfo.fontHeight\n    this.trimOffsetTop = glyphInfo.trimOffsetTop\n    this.trimOffsetLeft = glyphInfo.trimOffsetLeft\n    this.trimOffsetRight = glyphInfo.trimOffsetRight\n    this.trimOffsetBottom = glyphInfo.trimOffsetBottom\n  }\n}\n\nexport default GlyphFont\n","import { action, observable, runInAction } from 'mobx'\r\nimport getTrimImageInfo from 'src/utils/getTrimImageInfo'\r\n\r\nimport GlyphBase, { GlyphType } from './glyphBase'\r\n\r\nexport interface FileInfo {\r\n  letter?: string\r\n  fileName: string\r\n  fileType: string\r\n  buffer: ArrayBuffer\r\n}\r\n\r\nclass GlyphImage extends GlyphBase {\r\n  readonly type: GlyphType = 'image'\r\n\r\n  @observable src = '' // 仅显示列表中\r\n\r\n  @observable.ref buffer: ArrayBuffer | null = null\r\n\r\n  @observable fileName = ''\r\n\r\n  @observable fileType = ''\r\n\r\n  @observable selected = true\r\n\r\n  constructor(glyphImage: Partial<GlyphImage>) {\r\n    super(glyphImage)\r\n    this.letter = glyphImage.letter || ''\r\n    this.fileName = glyphImage.fileName || ''\r\n    this.fileType = glyphImage.fileType || ''\r\n    this.buffer = glyphImage.buffer || null\r\n    if (glyphImage.buffer) {\r\n      this.src = URL.createObjectURL(new Blob([glyphImage.buffer]))\r\n      this.initImage()\r\n    }\r\n  }\r\n\r\n  @action.bound initImage(): Promise<void> {\r\n    return new Promise((resolve) => {\r\n      const image = new Image()\r\n      image.onload = () => {\r\n        runInAction('trimImage', () => {\r\n          const { naturalWidth, naturalHeight } = image\r\n          this.fontWidth = naturalWidth\r\n          this.fontHeight = naturalHeight\r\n\r\n          const trimInfo = getTrimImageInfo(image)\r\n          this.width = trimInfo.width\r\n          this.height = trimInfo.height\r\n          this.trimOffsetLeft = trimInfo.trimOffsetLeft\r\n          this.trimOffsetTop = trimInfo.trimOffsetTop\r\n          this.trimOffsetRight =\r\n            trimInfo.width - trimInfo.trimOffsetLeft - naturalWidth\r\n          this.trimOffsetBottom =\r\n            trimInfo.height - trimInfo.trimOffsetTop - naturalHeight\r\n\r\n          this.source = trimInfo.canvas\r\n          resolve()\r\n        })\r\n      }\r\n      image.src = this.src\r\n    })\r\n  }\r\n\r\n  @action.bound setGlyph(text: string): void {\r\n    this.letter = text[0] || ''\r\n  }\r\n\r\n  @action.bound changeSelect(isSelect: boolean): void {\r\n    this.selected = isSelect\r\n  }\r\n}\r\n\r\nexport default GlyphImage\r\n","import trimImageData, { TrimImageInfo } from './trimImageData'\n\ninterface TrimInfo extends TrimImageInfo {\n  canvas: HTMLCanvasElement\n}\n\nexport default function getTrimImageInfo(\n  image: HTMLImageElement,\n  threshold = 10,\n): TrimInfo {\n  const width = image.naturalWidth\n  const height = image.naturalHeight\n\n  const canvas = document.createElement('canvas')\n  canvas.width = width\n  canvas.height = height\n  const ctx = canvas.getContext('2d') as CanvasRenderingContext2D\n  ctx.drawImage(image, 0, 0)\n  const imageData = ctx.getImageData(0, 0, width, height)\n  const trimInfo = trimImageData(imageData, threshold)\n  canvas.width = trimInfo.width\n  canvas.height = trimInfo.height\n  ctx.drawImage(image, trimInfo.trimOffsetLeft, trimInfo.trimOffsetTop)\n\n  return {\n    canvas,\n    ...trimInfo,\n  }\n}\n","import { observable, action, computed } from 'mobx'\r\nimport { deepObserve } from 'mobx-utils'\r\nimport { cancel, request } from 'requestidlecallback'\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport RectanglePacker from 'worker-loader?filename=static/js/RectanglePacker.[hash].worker.js!src/workers/RectanglePacker.worker'\r\n\r\nimport Ui from './base/ui'\r\nimport Style from './base/style'\r\nimport Layout from './base/layout'\r\nimport Metric from './base/metric'\r\nimport GlyphFont from './base/glyphFont'\r\nimport GlyphImage, { FileInfo } from './base/glyphImage'\r\nimport { GlyphType } from './base/glyphBase'\r\nimport { GuillotineBinPack } from 'rectangle-packer'\r\ninterface TextRectangle {\r\n  width: number\r\n  height: number\r\n  x: number\r\n  y: number\r\n  letter: string\r\n  type: GlyphType\r\n}\r\n\r\nclass Project {\r\n  @observable name = 'Unnamed'\r\n\r\n  id: number\r\n\r\n  worker: RectanglePacker | null = null\r\n\r\n  packStart = 0\r\n\r\n  packTimer = 0\r\n\r\n  idleId = 0\r\n\r\n  @observable isPacking = false\r\n\r\n  @observable text =\r\n    '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!№;%:?*()_+-=.,/|\"\\'@#$^&{}[]'\r\n\r\n  @observable.shallow glyphs: Map<string, GlyphFont> = new Map()\r\n\r\n  @observable.shallow glyphImages: GlyphImage[] = []\r\n\r\n  @observable.ref style: Style\r\n\r\n  @observable.ref layout: Layout\r\n\r\n  @observable.ref globalAdjustMetric: Metric\r\n\r\n  @observable.ref packCanvas: HTMLCanvasElement | null = null\r\n\r\n  @observable.ref ui: Ui = new Ui()\r\n\r\n  constructor(project: Partial<Project> = {}) {\r\n    this.id = project.id || Date.now()\r\n    this.name = project.name || 'Unnamed'\r\n    this.text = project.text || this.text\r\n    this.ui = new Ui(project.ui)\r\n    this.style = new Style(project.style)\r\n    this.layout = new Layout(project.layout)\r\n    this.globalAdjustMetric = new Metric(project.globalAdjustMetric)\r\n\r\n    if (project.glyphs) {\r\n      project.glyphs.forEach((value, key) => {\r\n        this.glyphs.set(key, new GlyphFont(value, this.style))\r\n      })\r\n    }\r\n\r\n    project.glyphImages?.forEach((img) => {\r\n      this.glyphImages.push(new GlyphImage(img))\r\n    })\r\n\r\n    if (!this.glyphs.has(' '))\r\n      this.glyphs.set(' ', new GlyphFont({ letter: ' ' }, this.style))\r\n\r\n    this.addGlyphs(project.text || '')\r\n    this.addAutoRun()\r\n    this.pack()\r\n  }\r\n\r\n  @computed get glyphList(): (GlyphFont | GlyphImage)[] {\r\n    const obj: { [key: string]: GlyphImage } = {}\r\n\r\n    this.glyphImages.forEach((glyph) => {\r\n      if (glyph.letter && glyph.selected) {\r\n        obj[glyph.letter] = glyph\r\n      }\r\n    })\r\n\r\n    return ` ${this.text}`.split('').map((letter) => {\r\n      if (obj[letter]) return obj[letter]\r\n      return this.glyphs.get(letter) as GlyphFont\r\n    })\r\n  }\r\n\r\n  @computed get rectangleList(): TextRectangle[] {\r\n    const { padding, spacing } = this.layout\r\n    return this.glyphList.map((glyph) => {\r\n      const isUnEmpty = !!(glyph.width && glyph.height)\r\n      return {\r\n        letter: glyph.letter,\r\n        type: glyph.type,\r\n        width: isUnEmpty ? glyph.width + padding * 2 + spacing : 0,\r\n        height: isUnEmpty ? glyph.height + padding * 2 + spacing : 0,\r\n        x: 0,\r\n        y: 0,\r\n      }\r\n    })\r\n  }\r\n\r\n  @action.bound pack(): void {\r\n    if (this.idleId) return\r\n    if (this.worker) this.worker.terminate()\r\n    this.isPacking = true\r\n    const packList = this.rectangleList.sort((a, b) => b.height - a.height)\r\n    if (!this.layout.auto) {\r\n      const packer = new GuillotineBinPack<TextRectangle>(\r\n        this.layout.width + this.layout.spacing,\r\n        this.layout.height + this.layout.spacing,\r\n      )\r\n\r\n      const list = packList.filter(({ width, height }) => !!(width && height))\r\n\r\n      packer.InsertSizes(list, true, 1, 1)\r\n\r\n      this.setPack(packer.usedRectangles, list)\r\n\r\n      this.isPacking = false\r\n      return\r\n    }\r\n    this.worker = new RectanglePacker()\r\n    this.worker.addEventListener(\r\n      'message',\r\n      action('PackerWorkerCallback', (messageEvent) => {\r\n        const { data } = messageEvent\r\n        this.setPack(data)\r\n\r\n        this.isPacking = false\r\n        this.worker?.terminate()\r\n        this.worker = null\r\n      }),\r\n      false,\r\n    )\r\n\r\n    this.worker.postMessage(\r\n      packList.filter(({ width, height }) => !!(width && height)),\r\n    )\r\n  }\r\n\r\n  @action.bound setPack(\r\n    list: TextRectangle[],\r\n    failedList?: TextRectangle[],\r\n  ): void {\r\n    const imgList = this.glyphImages\r\n    let maxWidth = 0\r\n    let maxHeight = 0\r\n    const { auto, fixedSize, width, height, spacing } = this.layout\r\n\r\n    list.forEach((rectangle) => {\r\n      const { letter, x, y, type, width, height } = rectangle\r\n      let glyph: GlyphFont | GlyphImage | undefined\r\n\r\n      if (type === 'image') {\r\n        glyph = imgList.find((gi) => {\r\n          if (gi && gi.letter === letter) return true\r\n          return false\r\n        })\r\n      }\r\n\r\n      if (!glyph) {\r\n        glyph = this.glyphs.get(letter)\r\n      }\r\n\r\n      if (glyph) {\r\n        glyph.x = x || 0\r\n        glyph.y = y || 0\r\n      }\r\n\r\n      maxWidth = Math.max(maxWidth, x + width)\r\n      maxHeight = Math.max(maxHeight, y + height)\r\n    })\r\n\r\n    if (failedList?.length) {\r\n      failedList.forEach((rectangle) => {\r\n        const { letter, type } = rectangle\r\n        let glyph: GlyphFont | GlyphImage | undefined\r\n\r\n        if (type === 'image') {\r\n          glyph = imgList.find((gi) => {\r\n            if (gi && gi.letter === letter) return true\r\n            return false\r\n          })\r\n        }\r\n\r\n        if (!glyph) {\r\n          glyph = this.glyphs.get(letter)\r\n        }\r\n\r\n        if (glyph) {\r\n          glyph.x = 0\r\n          glyph.y = 0\r\n        }\r\n      })\r\n      this.ui.setPackFailed(true)\r\n    } else {\r\n      this.ui.setPackFailed(false)\r\n    }\r\n\r\n    if (!auto && fixedSize) {\r\n      this.ui.setSize(width, height)\r\n      return\r\n    }\r\n\r\n    this.ui.setSize(maxWidth - spacing, maxHeight - spacing)\r\n  }\r\n\r\n  @action.bound packStyle(): void {\r\n    this.isPacking = true\r\n    if (this.worker) {\r\n      this.worker.terminate()\r\n      this.worker = null\r\n    }\r\n    cancel(this.idleId)\r\n\r\n    const tasks: GlyphFont[] = []\r\n\r\n    this.glyphs.forEach((glyph) => {\r\n      tasks.push(glyph)\r\n    })\r\n\r\n    const runTasks = () => {\r\n      this.idleId = request((deadline) => {\r\n        const tr = deadline.timeRemaining()\r\n        const start = Date.now()\r\n        while (tasks.length && tr - (Date.now() - start) > -100) {\r\n          // while (tasks.length) {\r\n          const glyph = tasks.shift()\r\n          if (glyph) glyph.setGlyphInfo(this.style)\r\n        }\r\n\r\n        if (tasks.length) {\r\n          runTasks()\r\n        } else {\r\n          this.idleId = 0\r\n          this.pack()\r\n        }\r\n      })\r\n    }\r\n\r\n    runTasks()\r\n  }\r\n\r\n  @action.bound throttlePack(): void {\r\n    if (this.idleId) return\r\n    window.clearTimeout(this.packTimer)\r\n    if (Date.now() - this.packStart > 500) {\r\n      Promise.resolve().then(this.pack)\r\n    } else {\r\n      this.packTimer = window.setTimeout(() => {\r\n        this.pack()\r\n      }, 500)\r\n    }\r\n    this.packStart = Date.now()\r\n  }\r\n\r\n  addAutoRun(): void {\r\n    const isName = (obj: { name?: unknown }, name: string): boolean =>\r\n      !!(obj.name && obj.name === name)\r\n\r\n    deepObserve(this.glyphs, () => {\r\n      this.throttlePack()\r\n    })\r\n\r\n    deepObserve(this.glyphImages, () => {\r\n      this.throttlePack()\r\n    })\r\n\r\n    deepObserve(this.layout, () => {\r\n      this.throttlePack()\r\n    })\r\n\r\n    deepObserve(this.style, (change) => {\r\n      if (isName(change, 'bgColor') || isName(change, 'lineHeight')) return\r\n      this.packStyle()\r\n    })\r\n  }\r\n\r\n  @action.bound setText(str: string): void {\r\n    const oldText = this.text\r\n    this.text = str.replace(/\\s/gm, '')\r\n    this.addGlyphs(oldText)\r\n  }\r\n\r\n  @action.bound addGlyphs(oldText = ''): void {\r\n    const currentList = Array.from(new Set(this.text.split('')))\r\n    const oldList = Array.from(new Set(oldText.split('')))\r\n    this.text = currentList.join('')\r\n    const diffList = oldText\r\n      ? Array.from(new Set(currentList.concat(oldList))).filter(\r\n          (t) => !(currentList.includes(t) && oldList.includes(t)),\r\n        )\r\n      : currentList\r\n\r\n    if (!diffList.length) return\r\n\r\n    diffList.forEach((letter) => {\r\n      if (currentList.includes(letter)) {\r\n        this.glyphs.set(letter, new GlyphFont({ letter }, this.style))\r\n      } else {\r\n        // in diff\r\n        this.glyphs.delete(letter)\r\n      }\r\n    })\r\n  }\r\n\r\n  @action.bound addImages<T extends FileInfo>(list: T[]): void {\r\n    Promise.all(\r\n      list.map((img) => {\r\n        const glyphImage = new GlyphImage(img)\r\n        this.glyphImages.push(glyphImage)\r\n        return glyphImage.initImage()\r\n      }),\r\n    ).then(this.pack)\r\n  }\r\n\r\n  @action.bound removeImage(image: GlyphImage): void {\r\n    const idx = this.glyphImages.indexOf(image)\r\n    if (idx > -1) this.glyphImages.splice(idx, 1)\r\n  }\r\n\r\n  @action.bound setCanvas(canvas: HTMLCanvasElement): void {\r\n    this.packCanvas = canvas\r\n  }\r\n\r\n  @action.bound setName(name: string): void {\r\n    this.name = name || this.name\r\n  }\r\n}\r\n\r\nexport default Project\r\n","import { action, observable, runInAction, computed } from 'mobx'\n\nimport Project from './project'\n\nclass Workspace {\n  @observable activeId = 0\n\n  @observable.shallow projectList: Map<number, Project> = new Map()\n\n  constructor() {\n    runInAction(() => {\n      this.activeId = Date.now()\n      const project = new Project({ id: this.activeId })\n      this.projectList.set(project.id, project)\n    })\n  }\n\n  @computed get currentProject(): Project {\n    return this.projectList.get(this.activeId) as Project\n  }\n\n  @computed get namedList(): { id: number; name: string }[] {\n    const list: { id: number; name: string }[] = []\n    this.projectList.forEach((value) => {\n      list.push({\n        id: value.id,\n        name: value.name,\n      })\n    })\n    return list\n  }\n\n  @action.bound selectProject(id: number): void {\n    if (this.projectList.has(id)) this.activeId = id\n  }\n\n  @action.bound removeProject(id: number): void {\n    const list = this.namedList.filter((item) => item.id !== id)\n    if (list.length === 0) return\n    this.activeId = list[0].id\n    this.projectList.delete(id)\n  }\n\n  @action.bound addProject(p: Partial<Project> = {}): void {\n    if (p.id && this.projectList.has(p.id)) {\n      this.activeId = p.id\n      return\n    }\n    if (!p.name) {\n      p.name = 'Unnamed'\n      const namedList: number[] = []\n      this.projectList.forEach((item) => {\n        const named = item.name.match(/^Unnamed-?(\\d+)?$/)\n        if (named) {\n          namedList.push(Number(named[1]) || 0)\n        }\n      })\n      if (namedList.length > 0) {\n        p.name += `-${Math.max(...namedList) + 1}`\n      }\n    }\n\n    const project = new Project(p)\n    this.projectList.set(project.id, project)\n    this.activeId = project.id\n  }\n\n  @action.bound setProjectName(name: string, value: number): void {\n    const project = this.projectList.get(value)\n    if (project) {\n      project.setName(name)\n    }\n  }\n}\n\nexport default Workspace\n","import { configure } from 'mobx'\n\nimport Ui from './ui'\nimport Workspace from './workspace'\n\nconfigure({\n  enforceActions: 'always',\n  computedRequiresReaction: true,\n})\n\nexport interface Store {\n  ui: Ui\n  workspace: Workspace\n}\n\nexport default function createStore(): Store {\n  return { ui: new Ui(), workspace: new Workspace() }\n}\n\nexport type TStore = ReturnType<typeof createStore>\n\nexport { default as Ui } from './ui'\nexport { default as Project } from './project'\nexport { default as Workspace } from './workspace'\n\nexport * from './base'\n","import { ComponentsProps } from '@material-ui/core/styles/props'\n\nconst props: ComponentsProps = {\n  MuiButton: {\n    size: 'small',\n  },\n  MuiButtonBase: {\n    disableRipple: true,\n  },\n  MuiFilledInput: {\n    margin: 'dense',\n  },\n  MuiFormControl: {\n    margin: 'dense',\n  },\n  MuiFormHelperText: {\n    margin: 'dense',\n  },\n  MuiIconButton: {\n    size: 'small',\n  },\n  MuiInputBase: {\n    margin: 'dense',\n  },\n  MuiInputLabel: {\n    margin: 'dense',\n  },\n  MuiListItem: {\n    dense: true,\n  },\n  MuiOutlinedInput: {\n    margin: 'dense',\n  },\n  MuiFab: {\n    size: 'small',\n  },\n  MuiTable: {\n    size: 'small',\n  },\n  MuiTextField: {\n    margin: 'dense',\n  },\n  MuiToolbar: {\n    variant: 'dense',\n  },\n}\n\nexport default props\n","import { Overrides } from '@material-ui/core/styles/overrides'\r\n\r\nconst overrides: Overrides = {\r\n  MuiCssBaseline: {\r\n    '@global': {\r\n      'html,body,#root': {\r\n        width: '100%',\r\n        height: '100%',\r\n      },\r\n      html: {\r\n        fontSize: '14px',\r\n      },\r\n      body: {\r\n        margin: 0,\r\n        // fontFamily: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\r\n        WebkitFontSmoothing: 'antialiased',\r\n        MozOsxFontSmoothing: 'grayscale',\r\n        userSelect: 'none',\r\n      },\r\n      '#root': {\r\n        minWidth: 900,\r\n      },\r\n      'input::-webkit-inner-spin-button': {\r\n        marginLeft: '10px',\r\n      },\r\n      'input:enabled:read-write:-webkit-any(:focus,:hover)::-webkit-inner-spin-button': {\r\n        opacity: 0.3,\r\n      },\r\n      '::-webkit-scrollbar': {\r\n        width: '4px',\r\n        height: '4px',\r\n      },\r\n      '::-webkit-scrollbar-thumb': {\r\n        background: 'rgba(255, 255, 255, 0.2)',\r\n      },\r\n      '::-webkit-scrollbar-track': {\r\n        background: 'rgba(0, 0, 0, 0.1)',\r\n      },\r\n    },\r\n  },\r\n  MuiInputBase: {\r\n    input: {\r\n      '&[type=number]': {\r\n        textAlign: 'right',\r\n      },\r\n    },\r\n  },\r\n}\r\n\r\nexport default overrides\r\n","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles'\n\nimport props from './props'\nimport overrides from './overrides'\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: { main: '#444' },\n    secondary: { main: '#424242' },\n    background: {\n      paper: 'rgb(37, 37, 37)',\n      default: 'rgb(30, 30, 30)',\n      activityBar: 'rgb(51, 51, 51)',\n      titleBar: 'rgb(50, 50, 50)',\n      sidebar: 'rgb(37, 37, 37)',\n    },\n    common: {\n      black: 'rgb(30,30,30)',\n      white: 'rgb(204,204,204)',\n    },\n    action: {\n      hover: 'rgba(255, 255, 255, 0.1)',\n    },\n  },\n  bgPixel: {\n    backgroundColor: '#fff',\n    backgroundImage: `\n    linear-gradient(45deg, #ccc 25%, transparent 0, transparent 75%, #ccc 0),\n    linear-gradient(45deg, #ccc 25%, transparent 0, transparent 75%, #ccc 0)`,\n    backgroundSize: '8px 8px',\n    backgroundPosition: '0 0, 4px 4px',\n    backgroundRepeat: 'repeat',\n  },\n  spacing: 4,\n  typography: { fontSize: 13 },\n  transitions: {\n    create: () => 'none',\n  },\n  shape: { borderRadius: 0 },\n  props,\n  overrides,\n})\n\nexport default responsiveFontSizes(theme)\n","import { useContext } from 'react'\nimport { MobXProviderContext } from 'mobx-react'\nimport {\n  TStore,\n  Workspace,\n  Layout,\n  Project,\n  Style,\n  Font,\n  ProjectUi,\n  FontStyleConfig,\n} from '.'\n\nexport default function useStores(): TStore {\n  return useContext(MobXProviderContext) as TStore\n}\n\nexport function useWorkspace(): Workspace {\n  const store = useStores()\n  return store.workspace\n}\n\nexport function useLayout(): Layout {\n  const store = useStores()\n  return store.workspace.currentProject.layout\n}\n\nexport function useProject(): Project {\n  const store = useStores()\n  return store.workspace.currentProject\n}\n\nexport function useStyle(): Style {\n  const { style } = useProject()\n  return style\n}\n\nexport function useFont(): Font {\n  const { font } = useStyle()\n  return font\n}\n\nexport function useFill(): FontStyleConfig {\n  const { fill } = useStyle()\n  return fill\n}\n\nexport function useProjectUi(): ProjectUi {\n  const { ui } = useProject()\n  return ui\n}\n","export default function readFile(\r\n  file: File,\r\n): Promise<string | ArrayBuffer | null> {\r\n  if (file.arrayBuffer) return file.arrayBuffer()\r\n\r\n  return new Promise((resolve) => {\r\n    const reader = new FileReader()\r\n    reader.readAsArrayBuffer(file)\r\n    reader.onload = (e) => {\r\n      resolve(e?.target?.result || null)\r\n    }\r\n  })\r\n}\r\n","import React, { useState, FunctionComponent } from 'react'\r\nimport { observer } from 'mobx-react'\r\n\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport FontDownload from '@material-ui/icons/FontDownload'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff'\r\n\r\nimport { useFont } from 'src/store/hooks'\r\nimport readFile from 'src/utils/readFile'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    clear: {\r\n      padding: theme.spacing(0.5),\r\n      cursor: 'pointer',\r\n      display: 'block',\r\n    },\r\n  }),\r\n)\r\n\r\nconst FontFamily: FunctionComponent<unknown> = () => {\r\n  const classes = useStyles()\r\n  const [loading, setLoading] = useState(false)\r\n  const { hasFont, setFont, clearFont } = useFont()\r\n\r\n  const hanleUploadFile = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n  ): void => {\r\n    if (\r\n      !event ||\r\n      !event.target ||\r\n      !event.target.files ||\r\n      !event.target.files[0]\r\n    )\r\n      return\r\n\r\n    const file = event.target.files[0]\r\n    const ext = file.name.match(/\\.([A-Z0-9]+)$/i)\r\n    if (!ext) return\r\n\r\n    setLoading(true)\r\n\r\n    readFile(file).then((arrBuf) => {\r\n      if (!(arrBuf instanceof ArrayBuffer)) {\r\n        setLoading(false)\r\n        return\r\n      }\r\n\r\n      event.target.value = ''\r\n\r\n      setFont(arrBuf)\r\n        .then(() => setLoading(false))\r\n        .catch((e) => {\r\n          setLoading(false)\r\n          window.alert(e.message)\r\n        })\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={2} alignItems='center'>\r\n      <Grid item xs={true}>\r\n        <Button\r\n          component='label'\r\n          variant='contained'\r\n          color='primary'\r\n          fullWidth\r\n          size='large'\r\n          startIcon={\r\n            loading ? (\r\n              <CircularProgress size={22} color='inherit' />\r\n            ) : (\r\n              <FontDownload />\r\n            )\r\n          }\r\n          disabled={loading}\r\n        >\r\n          Select Font File\r\n          <input\r\n            hidden\r\n            type='file'\r\n            onChange={hanleUploadFile}\r\n            accept='.ttf,.otf,.woff'\r\n          />\r\n        </Button>\r\n      </Grid>\r\n      {hasFont ? (\r\n        <Grid item xs='auto'>\r\n          <HighlightOffIcon className={classes.clear} onClick={clearFont} />\r\n        </Grid>\r\n      ) : null}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default observer(FontFamily)\r\n","import React, {\n  ReactNode,\n  FunctionComponent,\n  PropsWithChildren,\n  ElementType,\n} from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\n\ninterface GridInputProps {\n  before?: ReactNode\n  after?: ReactNode\n  component?: ElementType\n  childrenWidth?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8\n}\n\nconst GridInput: FunctionComponent<GridInputProps> = (\n  props: PropsWithChildren<GridInputProps>,\n): JSX.Element => {\n  const { before, children, component, after, childrenWidth } = props\n  return (\n    <Grid\n      component={component || 'label'}\n      container\n      spacing={2}\n      wrap='nowrap'\n      justify='center'\n      alignItems='center'\n    >\n      <Grid item xs={4}>\n        {typeof before === 'object' ? (\n          before\n        ) : (\n          <Typography noWrap align='right'>\n            {before}\n          </Typography>\n        )}\n      </Grid>\n      <Grid item xs={childrenWidth || 5}>\n        {children}\n      </Grid>\n      <Grid item xs>\n        {typeof after === 'object' ? (\n          after\n        ) : (\n          <Typography noWrap variant='caption'>\n            {after}\n          </Typography>\n        )}\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default GridInput\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Input from '@material-ui/core/Input'\n\nimport GridInput from 'src/app/components/GridInput/GridInput'\n\nimport { useFont } from 'src/store/hooks'\n\nconst FontSize: FunctionComponent<unknown> = () => {\n  const { size, setSize } = useFont()\n\n  const handleInput = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ): void => {\n    setSize(Number(event.target.value))\n  }\n\n  return (\n    <GridInput before='Font Size:' after='px'>\n      <Input\n        value={size}\n        fullWidth\n        type='number'\n        inputProps={{ min: 1 }}\n        onChange={handleInput}\n      />\n    </GridInput>\n  )\n}\n\nexport default observer(FontSize)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Input from '@material-ui/core/Input'\n\nimport GridInput from 'src/app/components/GridInput/GridInput'\n\nimport { useFont } from 'src/store/hooks'\n\nconst LineHeight: FunctionComponent<unknown> = () => {\n  const { lineHeight, setLineHeight } = useFont()\n\n  const handleInput = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ): void => {\n    setLineHeight(Number(event.target.value))\n  }\n\n  return (\n    <GridInput before='Line Height:' after='multiple'>\n      <Input\n        value={lineHeight}\n        fullWidth\n        type='number'\n        inputProps={{ min: 0.5, step: 0.1 }}\n        onChange={handleInput}\n      />\n    </GridInput>\n  )\n}\n\nexport default observer(LineHeight)\n","import React, { FunctionComponent } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\n\nimport FontFamily from './FontFamily'\nimport FontSize from './FontSize'\nimport LineHeight from './LineHeight'\n\nconst Font: FunctionComponent<unknown> = () => {\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <Typography>Font</Typography>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <FontFamily />\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <FontSize />\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <LineHeight />\n      </Box>\n    </>\n  )\n}\n\nexport default Font\n","import React, { useState, FunctionComponent } from 'react'\n\nimport Box from '@material-ui/core/Box'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\n\nimport { observer } from 'mobx-react'\n\nimport { useProject } from 'src/store/hooks'\n\nconst Glyphs: FunctionComponent<unknown> = () => {\n  const { text, setText } = useProject()\n  const [isIME, setIsIME] = useState(false)\n  const [inputText, setInputText] = useState(text)\n\n  const handleInput = (event: React.ChangeEvent<HTMLTextAreaElement>): void => {\n    const { value } = event.target\n    const str = Array.from(new Set(value.split(''))).join('')\n    if (isIME) {\n      setInputText(value)\n    } else {\n      setInputText(str)\n      if (str !== text) setText(str)\n    }\n  }\n\n  const handleCompositionEnd = (): void => {\n    setIsIME(false)\n    const str = Array.from(new Set(inputText.split(''))).join('')\n    setInputText(str)\n    if (str !== text) setText(str)\n  }\n\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <Typography>Glyphs</Typography>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <TextField\n          margin='none'\n          value={isIME ? inputText : text}\n          fullWidth\n          multiline\n          rows={4}\n          variant='outlined'\n          inputProps={{ spellCheck: false }}\n          onChange={handleInput}\n          onCompositionStart={() => setIsIME(true)}\n          onCompositionEnd={handleCompositionEnd}\n        />\n      </Box>\n    </>\n  )\n}\n\nexport default observer(Glyphs)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Input from '@material-ui/core/Input'\n\nimport GridInput from 'src/app/components/GridInput'\n\nimport { useLayout } from 'src/store/hooks'\n\nconst Padding: FunctionComponent<unknown> = () => {\n  const { padding, setPadding } = useLayout()\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setPadding(Number(event.target.value))\n  }\n\n  return (\n    <GridInput before='Padding:' after='px'>\n      <Input\n        value={padding}\n        fullWidth\n        type='number'\n        inputProps={{ min: 0 }}\n        onChange={handleInput}\n      />\n    </GridInput>\n  )\n}\n\nexport default observer(Padding)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Input from '@material-ui/core/Input'\n\nimport { useLayout } from 'src/store/hooks'\n\nimport GridInput from 'src/app/components/GridInput'\n\nconst Spacing: FunctionComponent<unknown> = () => {\n  const { spacing, setSpacing } = useLayout()\n\n  return (\n    <GridInput before='Spacing:' after='px'>\n      <Input\n        value={spacing}\n        fullWidth\n        type='number'\n        inputProps={{ min: 0 }}\n        onChange={(e) => setSpacing(Number(e.target.value))}\n      />\n    </GridInput>\n  )\n}\n\nexport default observer(Spacing)\n","import React, { FunctionComponent } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\n\r\nimport { useLayout } from 'src/store/hooks'\r\n\r\nimport GridInput from 'src/app/components/GridInput'\r\n\r\nconst AutoPack: FunctionComponent<unknown> = () => {\r\n  const { auto, setAuto } = useLayout()\r\n\r\n  return (\r\n    <GridInput before='Auto Pack:'>\r\n      <Checkbox\r\n        checked={auto}\r\n        size='small'\r\n        color='default'\r\n        onChange={(e) => setAuto(e.target.checked)}\r\n      />\r\n    </GridInput>\r\n  )\r\n}\r\n\r\nexport default observer(AutoPack)\r\n","import React, { FunctionComponent } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\n\r\nimport { useLayout } from 'src/store/hooks'\r\n\r\nimport GridInput from 'src/app/components/GridInput'\r\n\r\nconst FixedSize: FunctionComponent<unknown> = () => {\r\n  const { auto, fixedSize, setFixedSize } = useLayout()\r\n\r\n  return (\r\n    <GridInput before='Fixed Size:'>\r\n      <Checkbox\r\n        checked={fixedSize}\r\n        size='small'\r\n        color='default'\r\n        onChange={(e) => setFixedSize(e.target.checked)}\r\n        disabled={auto}\r\n      />\r\n    </GridInput>\r\n  )\r\n}\r\n\r\nexport default observer(FixedSize)\r\n","import React, { FunctionComponent } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport Input from '@material-ui/core/Input'\r\n\r\nimport GridInput from 'src/app/components/GridInput'\r\n\r\nimport { useLayout } from 'src/store/hooks'\r\n\r\nconst PackWidth: FunctionComponent<unknown> = () => {\r\n  const { width, auto, fixedSize, setWidth } = useLayout()\r\n\r\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setWidth(Number(event.target.value))\r\n  }\r\n\r\n  return (\r\n    <GridInput before={fixedSize ? 'Width:' : 'Max Width:'} after='px'>\r\n      <Input\r\n        value={width}\r\n        fullWidth\r\n        type='number'\r\n        inputProps={{ min: 0 }}\r\n        onChange={handleInput}\r\n        disabled={auto}\r\n      />\r\n    </GridInput>\r\n  )\r\n}\r\n\r\nexport default observer(PackWidth)\r\n","import React, { FunctionComponent } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport Input from '@material-ui/core/Input'\r\n\r\nimport GridInput from 'src/app/components/GridInput'\r\n\r\nimport { useLayout } from 'src/store/hooks'\r\n\r\nconst PackHeight: FunctionComponent<unknown> = () => {\r\n  const { height, auto, fixedSize, setHeight } = useLayout()\r\n\r\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setHeight(Number(event.target.value))\r\n  }\r\n\r\n  return (\r\n    <GridInput before={fixedSize ? 'Height:' : 'Max Height:'} after='px'>\r\n      <Input\r\n        value={height}\r\n        fullWidth\r\n        type='number'\r\n        inputProps={{ min: 0 }}\r\n        onChange={handleInput}\r\n        disabled={auto}\r\n      />\r\n    </GridInput>\r\n  )\r\n}\r\n\r\nexport default observer(PackHeight)\r\n","import React, { FunctionComponent } from 'react'\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Box from '@material-ui/core/Box'\r\n\r\nimport Padding from './Padding'\r\nimport Spacing from './Spacing'\r\n// import Power from './Power'\r\nimport AutoPack from './AutoPack'\r\nimport FixedSize from './FixedSize'\r\nimport PackWidth from './PackWidth'\r\nimport PackHeight from './PackHeight'\r\n\r\nconst PackConfig: FunctionComponent<unknown> = () => {\r\n  return (\r\n    <>\r\n      <Box paddingX={2} marginY={4}>\r\n        <Typography>Layout</Typography>\r\n      </Box>\r\n      <Box paddingX={2} marginY={4}>\r\n        <Padding />\r\n      </Box>\r\n      <Box paddingX={2} marginY={4}>\r\n        <Spacing />\r\n      </Box>\r\n      <Box paddingX={2} marginY={4}>\r\n        <AutoPack />\r\n      </Box>\r\n      <Box paddingX={2} marginY={4}>\r\n        <FixedSize />\r\n      </Box>\r\n      <Box paddingX={2} marginY={4}>\r\n        <PackWidth />\r\n      </Box>\r\n      <Box paddingX={2} marginY={4}>\r\n        <PackHeight />\r\n      </Box>\r\n      {/* <Box paddingX={2} marginY={4}>\r\n        <Power />\r\n      </Box> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PackConfig\r\n","import React, { FunctionComponent } from 'react'\nimport Box from '@material-ui/core/Box'\nimport Input from '@material-ui/core/Input'\nimport GridInput from 'src/app/components/GridInput'\n\ninterface SetHandle {\n  (value: number): void\n}\n\ninterface FormAdjustMetricProps {\n  xAdvance: number\n  xOffset: number\n  yOffset: number\n  setXAdvance: SetHandle\n  setXOffset: SetHandle\n  setYOffset: SetHandle\n}\n\nconst FormAdjustMetric: FunctionComponent<FormAdjustMetricProps> = (\n  props: FormAdjustMetricProps,\n) => {\n  const {\n    xAdvance,\n    xOffset,\n    yOffset,\n    setXAdvance,\n    setXOffset,\n    setYOffset,\n  } = props\n\n  const getHandle = (handleSet: SetHandle) => (\n    e: React.ChangeEvent<HTMLInputElement>,\n  ) => handleSet(Number(e.target.value))\n\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <GridInput before='xAdvance:' after='px'>\n          <Input\n            value={xAdvance}\n            fullWidth\n            type='number'\n            onChange={getHandle(setXAdvance)}\n          />\n        </GridInput>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <GridInput before='xOffset:' after='px'>\n          <Input\n            value={xOffset}\n            fullWidth\n            type='number'\n            onChange={getHandle(setXOffset)}\n          />\n        </GridInput>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <GridInput before='yOffset:' after='px'>\n          <Input\n            value={yOffset}\n            fullWidth\n            type='number'\n            onChange={getHandle(setYOffset)}\n          />\n        </GridInput>\n      </Box>\n    </>\n  )\n}\n\nexport default FormAdjustMetric\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\n\nimport { useProject } from 'src/store/hooks'\n\nimport FormAdjustMetric from 'src/app/layout/common/FormAdjustMetric'\n\nconst GlobalMetric: FunctionComponent<unknown> = () => {\n  const { globalAdjustMetric } = useProject()\n  const {\n    xAdvance,\n    xOffset,\n    yOffset,\n    setXAdvance,\n    setXOffset,\n    setYOffset,\n  } = globalAdjustMetric\n\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <Typography>Global Metric Adjustment</Typography>\n      </Box>\n      <FormAdjustMetric\n        xAdvance={xAdvance}\n        xOffset={xOffset}\n        yOffset={yOffset}\n        setXAdvance={setXAdvance}\n        setXOffset={setXOffset}\n        setYOffset={setYOffset}\n      />\n    </>\n  )\n}\n\nexport default observer(GlobalMetric)\n","import React, { FunctionComponent } from 'react'\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\r\nimport Box from '@material-ui/core/Box'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport Font from './modules/Font'\r\nimport Glyphs from './modules/Glyphs'\r\nimport PackConfig from './modules/PackConfig'\r\nimport GlobalMetric from './modules/GlobalMetric'\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    root: {\r\n      overflow: 'hidden',\r\n      width: '256px',\r\n    },\r\n  }),\r\n)\r\n\r\nconst LeftBar: FunctionComponent<unknown> = () => {\r\n  const classes = useStyles()\r\n  return (\r\n    <Box\r\n      bgcolor='background.sidebar'\r\n      display='flex'\r\n      flexDirection='column'\r\n      overflow='hidden'\r\n      className={classes.root}\r\n    >\r\n      <Box bgcolor='background.sidebar' boxShadow={2} padding={2}>\r\n        <Typography variant='subtitle2'>Font Config</Typography>\r\n      </Box>\r\n      <Box flex={1} height={0} overflow='hidden auto'>\r\n        <Glyphs />\r\n        <Divider />\r\n        <Font />\r\n        <Divider />\r\n        <PackConfig />\r\n        <Divider />\r\n        <GlobalMetric />\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default LeftBar\r\n","export default function formatStr(\n  str: string,\n  obj: Record<string, unknown>,\n): string {\n  return str.replace(/\\$\\w+\\$/gi, (matchs: string): string => {\n    const returns = obj[matchs.replace(/\\$/g, '')]\n    return `${returns}` === 'undefined' ? '' : `${returns}`\n  })\n}\n","import formatStr from 'src/utils/formatStr'\n\nimport { BMFont } from './toOutputInfo'\n\nconst TEMP_INFO = `<info face=\"$face$\" size=\"$size$\" bold=\"$bold$\" italic=\"$italic$\" charset=\"$charset$\" unicode=\"$unicode$\" stretchH=\"$stretchH$\" smooth=\"$smooth$\" aa=\"$aa$\" padding=\"$padding$\" spacing=\"$spacing$\" />`\nconst TEMP_COMMON = `<common lineHeight=\"$lineHeight$\" base=\"$base$\" scaleW=\"$scaleW$\" scaleH=\"$scaleH$\" pages=\"$pages$\" packed=\"$packed$\" />`\nconst TEMP_PAGE = `<page id=\"$id$\" file=\"$file$\" />`\nconst TEMP_CHARS = `<chars count=\"$count$\" />`\nconst TEMP_CHAR = `<char id=\"$id$\" x=\"$x$\" y=\"$y$\" width=\"$width$\" height=\"$height$\" xoffset=\"$xoffset$\" yoffset=\"$yoffset$\" xadvance=\"$xadvance$\" page=\"$page$\" chnl=\"$chnl$\" />`\nconst TEMP_KERNINGS = `<kernings count=\"$count$\" />`\nconst TEMP_KERNING = `<kerning first=\"$first$\" second=\"$second$\" amount=\"$amount$\" />`\n// http://www.angelcode.com/products/bmfont/doc/file_format.html\nexport default function storeToXml(bmfont: BMFont): string {\n  const { info, common, pages, chars, kernings } = bmfont\n\n  const parser = new DOMParser()\n  const xmlDOM = document.implementation.createDocument('', 'font', null)\n\n  const infoDoc = parser.parseFromString(formatStr(TEMP_INFO, info), 'text/xml')\n  xmlDOM.documentElement.appendChild(infoDoc.childNodes[0])\n\n  const commonDoc = parser.parseFromString(\n    formatStr(TEMP_COMMON, common),\n    'text/xml',\n  )\n  xmlDOM.documentElement.appendChild(commonDoc.childNodes[0])\n\n  const pagesDoc = parser.parseFromString(\n    `<pages>${pages.map((p) => formatStr(TEMP_PAGE, p))}</pages>`,\n    'text/xml',\n  )\n  xmlDOM.documentElement.appendChild(pagesDoc.childNodes[0])\n\n  const charsDoc = parser.parseFromString(\n    formatStr(TEMP_CHARS, chars),\n    'text/xml',\n  )\n\n  chars.list.forEach((char) => {\n    const charDoc = parser.parseFromString(\n      formatStr(TEMP_CHAR, char),\n      'text/xml',\n    )\n    charsDoc.childNodes[0].appendChild(charDoc.childNodes[0])\n  })\n\n  xmlDOM.documentElement.appendChild(charsDoc.childNodes[0])\n\n  if (kernings.count) {\n    const kerningsDoc = parser.parseFromString(\n      formatStr(TEMP_KERNINGS, kernings),\n      'text/xml',\n    )\n\n    kernings.list.forEach((kerning) => {\n      const kerningDoc = parser.parseFromString(\n        formatStr(TEMP_KERNING, kerning),\n        'text/xml',\n      )\n      kerningsDoc.childNodes[0].appendChild(kerningDoc.childNodes[0])\n    })\n\n    xmlDOM.documentElement.appendChild(kerningsDoc.childNodes[0])\n  }\n\n  return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>${new XMLSerializer().serializeToString(\n    xmlDOM,\n  )}`\n}\n","import formatStr from 'src/utils/formatStr'\n\nimport { BMFont } from './toOutputInfo'\n\nconst TEMP_INFO = `Font.info = {\\n\\tface = \"$face$\",\\n\\tfile = \"$file$\",\\n\\tsize = $size$,\\n\\tbold = $bold$,\\n\\titalic = $italic$,\\n\\tcharset = $charset$\\n\\tunicode = $unicode$,\\n\\tstretchH = $stretchH$,\\n\\tsmooth = $smooth$,\\n\\taa = $aa$,\\n\\tpadding = {$padding$},\\n\\tspacing = $spacing$,\\n\\tcharsCount = $charsCount$,\\n\\tkerningsCounts = $kerningsCounts$\\n}\\n\\n`\nconst TEMP_COMMON = `Font.common = {\\n\\tlineHeight = $lineHeight$,\\n\\tbase = $base$,\\n\\tscaleW = $scaleW$,\\n\\tscaleH = $scaleH$,\\n\\tpages = $pages$,\\n\\tpacked = $packed$\\n}\\n\\n`\nconst TEMP_PAGE = `\\t{ id=$id$, file=\"$file$\" }`\nconst TEMP_CHARS = `Font.chars = {\\n`\nconst TEMP_CHAR = `\\t{\\n\\t\\tid = $id$,\\n\\t\\tx = $x$,\\n\\t\\ty = $y$,\\n\\t\\twidth = $width$,\\n\\t\\theight = $height$,\\n\\t\\txoffset = $xoffset$,\\n\\t\\tyoffset = $yoffset$,\\n\\t\\txadvance = $xadvance$,\\n\\t\\tpage = 0,\\n\\t\\tchnl = 15\\n\\t}`\nconst TEMP_KERNINGS = `Font.kerning = {\\n`\nconst TEMP_KERNING = `\\t{first = $first$, second = $second$, amount = $amount$}`\n\nexport default function getLuaString(bmfont: BMFont): string {\n  const { info, common, pages, chars, kernings } = bmfont\n\n  let str = ''\n\n  str += formatStr(TEMP_INFO, {\n    ...info,\n    charset: info.charset || '\"\"',\n    charsCount: chars.count,\n    kerningsCounts: kernings.count,\n    file: pages[0].file,\n  })\n  str += formatStr(TEMP_COMMON, common)\n\n  str += `Font.pages = {\\n`\n  str += pages.map((p) => formatStr(TEMP_PAGE, p)).join(',\\n')\n  str += '\\n}\\n\\n'\n\n  str += TEMP_CHARS\n  str += chars.list.map((char) => formatStr(TEMP_CHAR, char)).join(',\\n')\n  str += '\\n}\\n\\n'\n\n  str += TEMP_KERNINGS\n  str += kernings.list\n    .map((kerning) => formatStr(TEMP_KERNING, kerning))\n    .join(',\\n')\n  str += '\\n}'\n\n  return `local Font = {}\n\n${str.replace(/\\t/g, '    ')}\n\nreturn Font\n`\n}\n","import formatStr from 'src/utils/formatStr'\n\nimport { BMFont } from './toOutputInfo'\n\nconst TEMP_INFO = `info face=\"$face$\" size=$size$ bold=$bold$ italic=$italic$ charset=$charset$ unicode=$unicode$ stretchH=$stretchH$ smooth=$smooth$ aa=$aa$ padding=$padding$ spacing=$spacing$\\n`\nconst TEMP_COMMON = `common lineHeight=$lineHeight$ base=$base$ scaleW=$scaleW$ scaleH=$scaleH$ pages=$pages$ packed=$packed$\\n`\nconst TEMP_PAGE = `page id=$id$ file=\"$file$\"\\n`\nconst TEMP_CHARS = `chars count=$count$\\n`\nconst TEMP_CHAR = `char id=$id$ x=$x$ y=$y$ width=$width$ height=$height$ xoffset=$xoffset$ yoffset=$yoffset$ xadvance=$xadvance$ page=$page$ chnl=$chnl$\\n`\nconst TEMP_KERNINGS = `kernings count=$count$\\n`\nconst TEMP_KERNING = `kerning first=$first$ second=$second$ amount=$amount$\\n`\n\nexport default function getTextString(bmfont: BMFont): string {\n  const { info, common, pages, chars, kernings } = bmfont\n\n  let str = ''\n\n  str += formatStr(TEMP_INFO, { ...info, charset: info.charset || '\"\"' })\n\n  str += formatStr(TEMP_COMMON, common)\n\n  pages.forEach((p) => {\n    str += formatStr(TEMP_PAGE, p)\n  })\n\n  str += formatStr(TEMP_CHARS, chars)\n\n  chars.list.forEach((char) => {\n    str += formatStr(TEMP_CHAR, char)\n  })\n\n  if (kernings.count) {\n    str += formatStr(TEMP_KERNINGS, kernings)\n\n    kernings.list.forEach((kerning) => {\n      str += formatStr(TEMP_KERNING, kerning)\n    })\n  }\n\n  return str\n}\n","import { Project } from 'src/store'\n\ninterface BMFontInfo extends Record<string, unknown> {\n  face: string\n  size: number\n  bold: number\n  italic: number\n  charset: string\n  unicode: number\n  stretchH: number\n  smooth: number\n  aa: number\n  padding: number[]\n  spacing: number[]\n}\n\ninterface BMFontCommon extends Record<string, unknown> {\n  lineHeight: number\n  base: number\n  scaleW: number\n  scaleH: number\n  pages: number\n  packed: number\n}\n\ninterface BMFontPage extends Record<string, unknown> {\n  id: number\n  file: string\n}\n\nexport interface BMFontChar extends Record<string, unknown> {\n  letter: string\n  id: number\n  source: HTMLImageElement | HTMLCanvasElement | null\n  x: number\n  y: number\n  width: number\n  height: number\n  xoffset: number\n  yoffset: number\n  xadvance: number\n  page: number\n  chnl: number\n}\n\ninterface BMFontChars extends Record<string, unknown> {\n  count: number\n  list: BMFontChar[]\n}\n\nexport interface BMFontKerning extends Record<string, unknown> {\n  first: number\n  second: number\n  amount: number\n}\n\ninterface BMFontKernings extends Record<string, unknown> {\n  count: number\n  list: BMFontKerning[]\n}\n\nexport interface BMFont {\n  info: BMFontInfo\n  common: BMFontCommon\n  pages: BMFontPage[]\n  chars: BMFontChars\n  kernings: BMFontKernings\n}\n\n// http://www.angelcode.com/products/bmfont/doc/file_format.html\nexport default function toOutputInfo(project: Project): BMFont {\n  const {\n    name,\n    style,\n    layout,\n    globalAdjustMetric,\n    glyphList,\n    ui: { width, height },\n  } = project\n  const { opentype, size } = style.font\n  let fontScale = 1\n  if (opentype) {\n    fontScale = (1 / opentype.unitsPerEm) * size\n  }\n  const info: BMFontInfo = {\n    face: style.font.family,\n    size: style.font.size,\n    bold: 0,\n    italic: 0,\n    charset: '',\n    unicode: 1,\n    stretchH: 100,\n    smooth: 1,\n    aa: 1,\n    padding: new Array(4).fill(layout.padding),\n    spacing: new Array(2).fill(layout.spacing),\n  }\n\n  const common: BMFontCommon = {\n    lineHeight: style.font.size,\n    base: style.font.size,\n    scaleW: width,\n    scaleH: height,\n    pages: 1,\n    packed: 0,\n  }\n\n  const pages: BMFontPage[] = [\n    {\n      id: 0,\n      file: `${name}.png`,\n    },\n  ]\n\n  const chars: BMFontChars = {\n    count: glyphList.length,\n    list: [],\n  }\n\n  const kernings: BMFontKernings = {\n    count: 0,\n    list: [],\n  }\n\n  glyphList.forEach((glyph) => {\n    const isUnEmpty = !!(glyph.width && glyph.height)\n    chars.list.push({\n      letter: glyph.letter,\n      id: glyph.letter.charCodeAt(0),\n      source: glyph.source,\n      x: glyph.x,\n      y: glyph.y,\n      width: isUnEmpty ? glyph.width + layout.padding * 2 : 0,\n      height: isUnEmpty ? glyph.height + layout.padding * 2 : 0,\n      xoffset:\n        globalAdjustMetric.xOffset +\n        glyph.adjustMetric.xOffset -\n        (isUnEmpty ? glyph.trimOffsetLeft : 0),\n      yoffset:\n        globalAdjustMetric.yOffset +\n        glyph.adjustMetric.yOffset -\n        (isUnEmpty ? glyph.trimOffsetTop : 0),\n      xadvance:\n        Math.ceil(glyph.fontWidth) +\n        globalAdjustMetric.xAdvance +\n        glyph.adjustMetric.xAdvance,\n      page: 0,\n      chnl: 15,\n    })\n    if (opentype) {\n      glyphList.forEach(({ letter }) => {\n        const amount = Math.round(\n          opentype.getKerningValue(\n            opentype.charToGlyphIndex(glyph.letter),\n            opentype.charToGlyphIndex(letter),\n          ) *\n            fontScale +\n            (glyph.kerning.get(letter) || 0),\n        )\n        if (amount) {\n          kernings.list.push({\n            first: glyph.letter.charCodeAt(0),\n            second: letter.charCodeAt(0),\n            amount,\n          })\n        }\n      })\n    } else {\n      glyph.kerning.forEach((amount, letter) => {\n        if (amount)\n          kernings.list.push({\n            first: glyph.letter.charCodeAt(0),\n            second: letter.charCodeAt(0),\n            amount,\n          })\n      })\n    }\n  })\n  kernings.count = kernings.list.length\n\n  chars.list.sort((a, b) => a.id - b.id)\n\n  return {\n    info,\n    common,\n    pages,\n    chars,\n    kernings,\n  }\n}\n","/* eslint-disable */\r\nimport * as $protobuf from 'protobufjs/minimal'\r\n\r\n// Common aliases\r\nconst $Reader = $protobuf.Reader,\r\n  $Writer = $protobuf.Writer,\r\n  $util = $protobuf.util\r\n\r\n// Exported root namespace\r\nconst $root = $protobuf.roots['default'] || ($protobuf.roots['default'] = {})\r\n\r\nexport const Metric = ($root.Metric = (() => {\r\n  /**\r\n   * Properties of a Metric.\r\n   * @exports IMetric\r\n   * @interface IMetric\r\n   * @property {number|null} [xAdvance] Metric xAdvance\r\n   * @property {number|null} [xOffset] Metric xOffset\r\n   * @property {number|null} [yOffset] Metric yOffset\r\n   */\r\n\r\n  /**\r\n   * Constructs a new Metric.\r\n   * @exports Metric\r\n   * @classdesc Represents a Metric.\r\n   * @implements IMetric\r\n   * @constructor\r\n   * @param {IMetric=} [properties] Properties to set\r\n   */\r\n  function Metric(properties) {\r\n    if (properties)\r\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\r\n  }\r\n\r\n  /**\r\n   * Metric xAdvance.\r\n   * @member {number} xAdvance\r\n   * @memberof Metric\r\n   * @instance\r\n   */\r\n  Metric.prototype.xAdvance = 0\r\n\r\n  /**\r\n   * Metric xOffset.\r\n   * @member {number} xOffset\r\n   * @memberof Metric\r\n   * @instance\r\n   */\r\n  Metric.prototype.xOffset = 0\r\n\r\n  /**\r\n   * Metric yOffset.\r\n   * @member {number} yOffset\r\n   * @memberof Metric\r\n   * @instance\r\n   */\r\n  Metric.prototype.yOffset = 0\r\n\r\n  /**\r\n   * Creates a new Metric instance using the specified properties.\r\n   * @function create\r\n   * @memberof Metric\r\n   * @static\r\n   * @param {IMetric=} [properties] Properties to set\r\n   * @returns {Metric} Metric instance\r\n   */\r\n  Metric.create = function create(properties) {\r\n    return new Metric(properties)\r\n  }\r\n\r\n  /**\r\n   * Encodes the specified Metric message. Does not implicitly {@link Metric.verify|verify} messages.\r\n   * @function encode\r\n   * @memberof Metric\r\n   * @static\r\n   * @param {IMetric} message Metric message or plain object to encode\r\n   * @param {$protobuf.Writer} [writer] Writer to encode to\r\n   * @returns {$protobuf.Writer} Writer\r\n   */\r\n  Metric.encode = function encode(message, writer) {\r\n    if (!writer) writer = $Writer.create()\r\n    if (\r\n      message.xAdvance != null &&\r\n      Object.hasOwnProperty.call(message, 'xAdvance')\r\n    )\r\n      writer.uint32(/* id 1, wireType 0 =*/ 8).sint32(message.xAdvance)\r\n    if (\r\n      message.xOffset != null &&\r\n      Object.hasOwnProperty.call(message, 'xOffset')\r\n    )\r\n      writer.uint32(/* id 2, wireType 0 =*/ 16).sint32(message.xOffset)\r\n    if (\r\n      message.yOffset != null &&\r\n      Object.hasOwnProperty.call(message, 'yOffset')\r\n    )\r\n      writer.uint32(/* id 3, wireType 0 =*/ 24).sint32(message.yOffset)\r\n    return writer\r\n  }\r\n\r\n  /**\r\n   * Encodes the specified Metric message, length delimited. Does not implicitly {@link Metric.verify|verify} messages.\r\n   * @function encodeDelimited\r\n   * @memberof Metric\r\n   * @static\r\n   * @param {IMetric} message Metric message or plain object to encode\r\n   * @param {$protobuf.Writer} [writer] Writer to encode to\r\n   * @returns {$protobuf.Writer} Writer\r\n   */\r\n  Metric.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.encode(message, writer).ldelim()\r\n  }\r\n\r\n  /**\r\n   * Decodes a Metric message from the specified reader or buffer.\r\n   * @function decode\r\n   * @memberof Metric\r\n   * @static\r\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n   * @param {number} [length] Message length if known beforehand\r\n   * @returns {Metric} Metric\r\n   * @throws {Error} If the payload is not a reader or valid buffer\r\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n   */\r\n  Metric.decode = function decode(reader, length) {\r\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\r\n    let end = length === undefined ? reader.len : reader.pos + length,\r\n      message = new $root.Metric()\r\n    while (reader.pos < end) {\r\n      let tag = reader.uint32()\r\n      switch (tag >>> 3) {\r\n        case 1:\r\n          message.xAdvance = reader.sint32()\r\n          break\r\n        case 2:\r\n          message.xOffset = reader.sint32()\r\n          break\r\n        case 3:\r\n          message.yOffset = reader.sint32()\r\n          break\r\n        default:\r\n          reader.skipType(tag & 7)\r\n          break\r\n      }\r\n    }\r\n    return message\r\n  }\r\n\r\n  /**\r\n   * Decodes a Metric message from the specified reader or buffer, length delimited.\r\n   * @function decodeDelimited\r\n   * @memberof Metric\r\n   * @static\r\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n   * @returns {Metric} Metric\r\n   * @throws {Error} If the payload is not a reader or valid buffer\r\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n   */\r\n  Metric.decodeDelimited = function decodeDelimited(reader) {\r\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\r\n    return this.decode(reader, reader.uint32())\r\n  }\r\n\r\n  /**\r\n   * Verifies a Metric message.\r\n   * @function verify\r\n   * @memberof Metric\r\n   * @static\r\n   * @param {Object.<string,*>} message Plain object to verify\r\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n   */\r\n  Metric.verify = function verify(message) {\r\n    if (typeof message !== 'object' || message === null)\r\n      return 'object expected'\r\n    if (message.xAdvance != null && message.hasOwnProperty('xAdvance'))\r\n      if (!$util.isInteger(message.xAdvance))\r\n        return 'xAdvance: integer expected'\r\n    if (message.xOffset != null && message.hasOwnProperty('xOffset'))\r\n      if (!$util.isInteger(message.xOffset)) return 'xOffset: integer expected'\r\n    if (message.yOffset != null && message.hasOwnProperty('yOffset'))\r\n      if (!$util.isInteger(message.yOffset)) return 'yOffset: integer expected'\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * Creates a Metric message from a plain object. Also converts values to their respective internal types.\r\n   * @function fromObject\r\n   * @memberof Metric\r\n   * @static\r\n   * @param {Object.<string,*>} object Plain object\r\n   * @returns {Metric} Metric\r\n   */\r\n  Metric.fromObject = function fromObject(object) {\r\n    if (object instanceof $root.Metric) return object\r\n    let message = new $root.Metric()\r\n    if (object.xAdvance != null) message.xAdvance = object.xAdvance | 0\r\n    if (object.xOffset != null) message.xOffset = object.xOffset | 0\r\n    if (object.yOffset != null) message.yOffset = object.yOffset | 0\r\n    return message\r\n  }\r\n\r\n  /**\r\n   * Creates a plain object from a Metric message. Also converts values to other types if specified.\r\n   * @function toObject\r\n   * @memberof Metric\r\n   * @static\r\n   * @param {Metric} message Metric\r\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n   * @returns {Object.<string,*>} Plain object\r\n   */\r\n  Metric.toObject = function toObject(message, options) {\r\n    if (!options) options = {}\r\n    let object = {}\r\n    if (options.defaults) {\r\n      object.xAdvance = 0\r\n      object.xOffset = 0\r\n      object.yOffset = 0\r\n    }\r\n    if (message.xAdvance != null && message.hasOwnProperty('xAdvance'))\r\n      object.xAdvance = message.xAdvance\r\n    if (message.xOffset != null && message.hasOwnProperty('xOffset'))\r\n      object.xOffset = message.xOffset\r\n    if (message.yOffset != null && message.hasOwnProperty('yOffset'))\r\n      object.yOffset = message.yOffset\r\n    return object\r\n  }\r\n\r\n  /**\r\n   * Converts this Metric to JSON.\r\n   * @function toJSON\r\n   * @memberof Metric\r\n   * @instance\r\n   * @returns {Object.<string,*>} JSON object\r\n   */\r\n  Metric.prototype.toJSON = function toJSON() {\r\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\r\n  }\r\n\r\n  return Metric\r\n})())\r\n\r\nexport const GradientColor = ($root.GradientColor = (() => {\r\n  /**\r\n   * Properties of a GradientColor.\r\n   * @exports IGradientColor\r\n   * @interface IGradientColor\r\n   * @property {number|null} [id] GradientColor id\r\n   * @property {number|null} [offset] GradientColor offset\r\n   * @property {string|null} [color] GradientColor color\r\n   */\r\n\r\n  /**\r\n   * Constructs a new GradientColor.\r\n   * @exports GradientColor\r\n   * @classdesc Represents a GradientColor.\r\n   * @implements IGradientColor\r\n   * @constructor\r\n   * @param {IGradientColor=} [properties] Properties to set\r\n   */\r\n  function GradientColor(properties) {\r\n    if (properties)\r\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\r\n  }\r\n\r\n  /**\r\n   * GradientColor id.\r\n   * @member {number} id\r\n   * @memberof GradientColor\r\n   * @instance\r\n   */\r\n  GradientColor.prototype.id = 0\r\n\r\n  /**\r\n   * GradientColor offset.\r\n   * @member {number} offset\r\n   * @memberof GradientColor\r\n   * @instance\r\n   */\r\n  GradientColor.prototype.offset = 0\r\n\r\n  /**\r\n   * GradientColor color.\r\n   * @member {string} color\r\n   * @memberof GradientColor\r\n   * @instance\r\n   */\r\n  GradientColor.prototype.color = ''\r\n\r\n  /**\r\n   * Creates a new GradientColor instance using the specified properties.\r\n   * @function create\r\n   * @memberof GradientColor\r\n   * @static\r\n   * @param {IGradientColor=} [properties] Properties to set\r\n   * @returns {GradientColor} GradientColor instance\r\n   */\r\n  GradientColor.create = function create(properties) {\r\n    return new GradientColor(properties)\r\n  }\r\n\r\n  /**\r\n   * Encodes the specified GradientColor message. Does not implicitly {@link GradientColor.verify|verify} messages.\r\n   * @function encode\r\n   * @memberof GradientColor\r\n   * @static\r\n   * @param {IGradientColor} message GradientColor message or plain object to encode\r\n   * @param {$protobuf.Writer} [writer] Writer to encode to\r\n   * @returns {$protobuf.Writer} Writer\r\n   */\r\n  GradientColor.encode = function encode(message, writer) {\r\n    if (!writer) writer = $Writer.create()\r\n    if (message.id != null && Object.hasOwnProperty.call(message, 'id'))\r\n      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.id)\r\n    if (message.offset != null && Object.hasOwnProperty.call(message, 'offset'))\r\n      writer.uint32(/* id 2, wireType 0 =*/ 16).sint32(message.offset)\r\n    if (message.color != null && Object.hasOwnProperty.call(message, 'color'))\r\n      writer.uint32(/* id 3, wireType 2 =*/ 26).string(message.color)\r\n    return writer\r\n  }\r\n\r\n  /**\r\n   * Encodes the specified GradientColor message, length delimited. Does not implicitly {@link GradientColor.verify|verify} messages.\r\n   * @function encodeDelimited\r\n   * @memberof GradientColor\r\n   * @static\r\n   * @param {IGradientColor} message GradientColor message or plain object to encode\r\n   * @param {$protobuf.Writer} [writer] Writer to encode to\r\n   * @returns {$protobuf.Writer} Writer\r\n   */\r\n  GradientColor.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.encode(message, writer).ldelim()\r\n  }\r\n\r\n  /**\r\n   * Decodes a GradientColor message from the specified reader or buffer.\r\n   * @function decode\r\n   * @memberof GradientColor\r\n   * @static\r\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n   * @param {number} [length] Message length if known beforehand\r\n   * @returns {GradientColor} GradientColor\r\n   * @throws {Error} If the payload is not a reader or valid buffer\r\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n   */\r\n  GradientColor.decode = function decode(reader, length) {\r\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\r\n    let end = length === undefined ? reader.len : reader.pos + length,\r\n      message = new $root.GradientColor()\r\n    while (reader.pos < end) {\r\n      let tag = reader.uint32()\r\n      switch (tag >>> 3) {\r\n        case 1:\r\n          message.id = reader.int32()\r\n          break\r\n        case 2:\r\n          message.offset = reader.sint32()\r\n          break\r\n        case 3:\r\n          message.color = reader.string()\r\n          break\r\n        default:\r\n          reader.skipType(tag & 7)\r\n          break\r\n      }\r\n    }\r\n    return message\r\n  }\r\n\r\n  /**\r\n   * Decodes a GradientColor message from the specified reader or buffer, length delimited.\r\n   * @function decodeDelimited\r\n   * @memberof GradientColor\r\n   * @static\r\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n   * @returns {GradientColor} GradientColor\r\n   * @throws {Error} If the payload is not a reader or valid buffer\r\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n   */\r\n  GradientColor.decodeDelimited = function decodeDelimited(reader) {\r\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\r\n    return this.decode(reader, reader.uint32())\r\n  }\r\n\r\n  /**\r\n   * Verifies a GradientColor message.\r\n   * @function verify\r\n   * @memberof GradientColor\r\n   * @static\r\n   * @param {Object.<string,*>} message Plain object to verify\r\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n   */\r\n  GradientColor.verify = function verify(message) {\r\n    if (typeof message !== 'object' || message === null)\r\n      return 'object expected'\r\n    if (message.id != null && message.hasOwnProperty('id'))\r\n      if (!$util.isInteger(message.id)) return 'id: integer expected'\r\n    if (message.offset != null && message.hasOwnProperty('offset'))\r\n      if (!$util.isInteger(message.offset)) return 'offset: integer expected'\r\n    if (message.color != null && message.hasOwnProperty('color'))\r\n      if (!$util.isString(message.color)) return 'color: string expected'\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * Creates a GradientColor message from a plain object. Also converts values to their respective internal types.\r\n   * @function fromObject\r\n   * @memberof GradientColor\r\n   * @static\r\n   * @param {Object.<string,*>} object Plain object\r\n   * @returns {GradientColor} GradientColor\r\n   */\r\n  GradientColor.fromObject = function fromObject(object) {\r\n    if (object instanceof $root.GradientColor) return object\r\n    let message = new $root.GradientColor()\r\n    if (object.id != null) message.id = object.id | 0\r\n    if (object.offset != null) message.offset = object.offset | 0\r\n    if (object.color != null) message.color = String(object.color)\r\n    return message\r\n  }\r\n\r\n  /**\r\n   * Creates a plain object from a GradientColor message. Also converts values to other types if specified.\r\n   * @function toObject\r\n   * @memberof GradientColor\r\n   * @static\r\n   * @param {GradientColor} message GradientColor\r\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n   * @returns {Object.<string,*>} Plain object\r\n   */\r\n  GradientColor.toObject = function toObject(message, options) {\r\n    if (!options) options = {}\r\n    let object = {}\r\n    if (options.defaults) {\r\n      object.id = 0\r\n      object.offset = 0\r\n      object.color = ''\r\n    }\r\n    if (message.id != null && message.hasOwnProperty('id'))\r\n      object.id = message.id\r\n    if (message.offset != null && message.hasOwnProperty('offset'))\r\n      object.offset = message.offset\r\n    if (message.color != null && message.hasOwnProperty('color'))\r\n      object.color = message.color\r\n    return object\r\n  }\r\n\r\n  /**\r\n   * Converts this GradientColor to JSON.\r\n   * @function toJSON\r\n   * @memberof GradientColor\r\n   * @instance\r\n   * @returns {Object.<string,*>} JSON object\r\n   */\r\n  GradientColor.prototype.toJSON = function toJSON() {\r\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\r\n  }\r\n\r\n  return GradientColor\r\n})())\r\n\r\nexport const Gradient = ($root.Gradient = (() => {\r\n  /**\r\n   * Properties of a Gradient.\r\n   * @exports IGradient\r\n   * @interface IGradient\r\n   * @property {number|null} [type] Gradient type\r\n   * @property {number|null} [angle] Gradient angle\r\n   * @property {Array.<IGradientColor>|null} [palette] Gradient palette\r\n   */\r\n\r\n  /**\r\n   * Constructs a new Gradient.\r\n   * @exports Gradient\r\n   * @classdesc Represents a Gradient.\r\n   * @implements IGradient\r\n   * @constructor\r\n   * @param {IGradient=} [properties] Properties to set\r\n   */\r\n  function Gradient(properties) {\r\n    this.palette = []\r\n    if (properties)\r\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\r\n  }\r\n\r\n  /**\r\n   * Gradient type.\r\n   * @member {number} type\r\n   * @memberof Gradient\r\n   * @instance\r\n   */\r\n  Gradient.prototype.type = 0\r\n\r\n  /**\r\n   * Gradient angle.\r\n   * @member {number} angle\r\n   * @memberof Gradient\r\n   * @instance\r\n   */\r\n  Gradient.prototype.angle = 0\r\n\r\n  /**\r\n   * Gradient palette.\r\n   * @member {Array.<IGradientColor>} palette\r\n   * @memberof Gradient\r\n   * @instance\r\n   */\r\n  Gradient.prototype.palette = $util.emptyArray\r\n\r\n  /**\r\n   * Creates a new Gradient instance using the specified properties.\r\n   * @function create\r\n   * @memberof Gradient\r\n   * @static\r\n   * @param {IGradient=} [properties] Properties to set\r\n   * @returns {Gradient} Gradient instance\r\n   */\r\n  Gradient.create = function create(properties) {\r\n    return new Gradient(properties)\r\n  }\r\n\r\n  /**\r\n   * Encodes the specified Gradient message. Does not implicitly {@link Gradient.verify|verify} messages.\r\n   * @function encode\r\n   * @memberof Gradient\r\n   * @static\r\n   * @param {IGradient} message Gradient message or plain object to encode\r\n   * @param {$protobuf.Writer} [writer] Writer to encode to\r\n   * @returns {$protobuf.Writer} Writer\r\n   */\r\n  Gradient.encode = function encode(message, writer) {\r\n    if (!writer) writer = $Writer.create()\r\n    if (message.type != null && Object.hasOwnProperty.call(message, 'type'))\r\n      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.type)\r\n    if (message.angle != null && Object.hasOwnProperty.call(message, 'angle'))\r\n      writer.uint32(/* id 2, wireType 5 =*/ 21).float(message.angle)\r\n    if (message.palette != null && message.palette.length)\r\n      for (let i = 0; i < message.palette.length; ++i)\r\n        $root.GradientColor.encode(\r\n          message.palette[i],\r\n          writer.uint32(/* id 3, wireType 2 =*/ 26).fork(),\r\n        ).ldelim()\r\n    return writer\r\n  }\r\n\r\n  /**\r\n   * Encodes the specified Gradient message, length delimited. Does not implicitly {@link Gradient.verify|verify} messages.\r\n   * @function encodeDelimited\r\n   * @memberof Gradient\r\n   * @static\r\n   * @param {IGradient} message Gradient message or plain object to encode\r\n   * @param {$protobuf.Writer} [writer] Writer to encode to\r\n   * @returns {$protobuf.Writer} Writer\r\n   */\r\n  Gradient.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.encode(message, writer).ldelim()\r\n  }\r\n\r\n  /**\r\n   * Decodes a Gradient message from the specified reader or buffer.\r\n   * @function decode\r\n   * @memberof Gradient\r\n   * @static\r\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n   * @param {number} [length] Message length if known beforehand\r\n   * @returns {Gradient} Gradient\r\n   * @throws {Error} If the payload is not a reader or valid buffer\r\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n   */\r\n  Gradient.decode = function decode(reader, length) {\r\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\r\n    let end = length === undefined ? reader.len : reader.pos + length,\r\n      message = new $root.Gradient()\r\n    while (reader.pos < end) {\r\n      let tag = reader.uint32()\r\n      switch (tag >>> 3) {\r\n        case 1:\r\n          message.type = reader.int32()\r\n          break\r\n        case 2:\r\n          message.angle = reader.float()\r\n          break\r\n        case 3:\r\n          if (!(message.palette && message.palette.length)) message.palette = []\r\n          message.palette.push(\r\n            $root.GradientColor.decode(reader, reader.uint32()),\r\n          )\r\n          break\r\n        default:\r\n          reader.skipType(tag & 7)\r\n          break\r\n      }\r\n    }\r\n    return message\r\n  }\r\n\r\n  /**\r\n   * Decodes a Gradient message from the specified reader or buffer, length delimited.\r\n   * @function decodeDelimited\r\n   * @memberof Gradient\r\n   * @static\r\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n   * @returns {Gradient} Gradient\r\n   * @throws {Error} If the payload is not a reader or valid buffer\r\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n   */\r\n  Gradient.decodeDelimited = function decodeDelimited(reader) {\r\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\r\n    return this.decode(reader, reader.uint32())\r\n  }\r\n\r\n  /**\r\n   * Verifies a Gradient message.\r\n   * @function verify\r\n   * @memberof Gradient\r\n   * @static\r\n   * @param {Object.<string,*>} message Plain object to verify\r\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n   */\r\n  Gradient.verify = function verify(message) {\r\n    if (typeof message !== 'object' || message === null)\r\n      return 'object expected'\r\n    if (message.type != null && message.hasOwnProperty('type'))\r\n      if (!$util.isInteger(message.type)) return 'type: integer expected'\r\n    if (message.angle != null && message.hasOwnProperty('angle'))\r\n      if (typeof message.angle !== 'number') return 'angle: number expected'\r\n    if (message.palette != null && message.hasOwnProperty('palette')) {\r\n      if (!Array.isArray(message.palette)) return 'palette: array expected'\r\n      for (let i = 0; i < message.palette.length; ++i) {\r\n        let error = $root.GradientColor.verify(message.palette[i])\r\n        if (error) return 'palette.' + error\r\n      }\r\n    }\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * Creates a Gradient message from a plain object. Also converts values to their respective internal types.\r\n   * @function fromObject\r\n   * @memberof Gradient\r\n   * @static\r\n   * @param {Object.<string,*>} object Plain object\r\n   * @returns {Gradient} Gradient\r\n   */\r\n  Gradient.fromObject = function fromObject(object) {\r\n    if (object instanceof $root.Gradient) return object\r\n    let message = new $root.Gradient()\r\n    if (object.type != null) message.type = object.type | 0\r\n    if (object.angle != null) message.angle = Number(object.angle)\r\n    if (object.palette) {\r\n      if (!Array.isArray(object.palette))\r\n        throw TypeError('.Gradient.palette: array expected')\r\n      message.palette = []\r\n      for (let i = 0; i < object.palette.length; ++i) {\r\n        if (typeof object.palette[i] !== 'object')\r\n          throw TypeError('.Gradient.palette: object expected')\r\n        message.palette[i] = $root.GradientColor.fromObject(object.palette[i])\r\n      }\r\n    }\r\n    return message\r\n  }\r\n\r\n  /**\r\n   * Creates a plain object from a Gradient message. Also converts values to other types if specified.\r\n   * @function toObject\r\n   * @memberof Gradient\r\n   * @static\r\n   * @param {Gradient} message Gradient\r\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n   * @returns {Object.<string,*>} Plain object\r\n   */\r\n  Gradient.toObject = function toObject(message, options) {\r\n    if (!options) options = {}\r\n    let object = {}\r\n    if (options.arrays || options.defaults) object.palette = []\r\n    if (options.defaults) {\r\n      object.type = 0\r\n      object.angle = 0\r\n    }\r\n    if (message.type != null && message.hasOwnProperty('type'))\r\n      object.type = message.type\r\n    if (message.angle != null && message.hasOwnProperty('angle'))\r\n      object.angle =\r\n        options.json && !isFinite(message.angle)\r\n          ? String(message.angle)\r\n          : message.angle\r\n    if (message.palette && message.palette.length) {\r\n      object.palette = []\r\n      for (let j = 0; j < message.palette.length; ++j)\r\n        object.palette[j] = $root.GradientColor.toObject(\r\n          message.palette[j],\r\n          options,\r\n        )\r\n    }\r\n    return object\r\n  }\r\n\r\n  /**\r\n   * Converts this Gradient to JSON.\r\n   * @function toJSON\r\n   * @memberof Gradient\r\n   * @instance\r\n   * @returns {Object.<string,*>} JSON object\r\n   */\r\n  Gradient.prototype.toJSON = function toJSON() {\r\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\r\n  }\r\n\r\n  return Gradient\r\n})())\r\n\r\nexport const PatternTexture = ($root.PatternTexture = (() => {\r\n  /**\r\n   * Properties of a PatternTexture.\r\n   * @exports IPatternTexture\r\n   * @interface IPatternTexture\r\n   * @property {Uint8Array|null} [buffer] PatternTexture buffer\r\n   * @property {number|null} [scale] PatternTexture scale\r\n   * @property {string|null} [repetition] PatternTexture repetition\r\n   */\r\n\r\n  /**\r\n   * Constructs a new PatternTexture.\r\n   * @exports PatternTexture\r\n   * @classdesc Represents a PatternTexture.\r\n   * @implements IPatternTexture\r\n   * @constructor\r\n   * @param {IPatternTexture=} [properties] Properties to set\r\n   */\r\n  function PatternTexture(properties) {\r\n    if (properties)\r\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\r\n  }\r\n\r\n  /**\r\n   * PatternTexture buffer.\r\n   * @member {Uint8Array} buffer\r\n   * @memberof PatternTexture\r\n   * @instance\r\n   */\r\n  PatternTexture.prototype.buffer = $util.newBuffer([])\r\n\r\n  /**\r\n   * PatternTexture scale.\r\n   * @member {number} scale\r\n   * @memberof PatternTexture\r\n   * @instance\r\n   */\r\n  PatternTexture.prototype.scale = 0\r\n\r\n  /**\r\n   * PatternTexture repetition.\r\n   * @member {string} repetition\r\n   * @memberof PatternTexture\r\n   * @instance\r\n   */\r\n  PatternTexture.prototype.repetition = ''\r\n\r\n  /**\r\n   * Creates a new PatternTexture instance using the specified properties.\r\n   * @function create\r\n   * @memberof PatternTexture\r\n   * @static\r\n   * @param {IPatternTexture=} [properties] Properties to set\r\n   * @returns {PatternTexture} PatternTexture instance\r\n   */\r\n  PatternTexture.create = function create(properties) {\r\n    return new PatternTexture(properties)\r\n  }\r\n\r\n  /**\r\n   * Encodes the specified PatternTexture message. Does not implicitly {@link PatternTexture.verify|verify} messages.\r\n   * @function encode\r\n   * @memberof PatternTexture\r\n   * @static\r\n   * @param {IPatternTexture} message PatternTexture message or plain object to encode\r\n   * @param {$protobuf.Writer} [writer] Writer to encode to\r\n   * @returns {$protobuf.Writer} Writer\r\n   */\r\n  PatternTexture.encode = function encode(message, writer) {\r\n    if (!writer) writer = $Writer.create()\r\n    if (message.buffer != null && Object.hasOwnProperty.call(message, 'buffer'))\r\n      writer.uint32(/* id 1, wireType 2 =*/ 10).bytes(message.buffer)\r\n    if (message.scale != null && Object.hasOwnProperty.call(message, 'scale'))\r\n      writer.uint32(/* id 2, wireType 1 =*/ 17).double(message.scale)\r\n    if (\r\n      message.repetition != null &&\r\n      Object.hasOwnProperty.call(message, 'repetition')\r\n    )\r\n      writer.uint32(/* id 3, wireType 2 =*/ 26).string(message.repetition)\r\n    return writer\r\n  }\r\n\r\n  /**\r\n   * Encodes the specified PatternTexture message, length delimited. Does not implicitly {@link PatternTexture.verify|verify} messages.\r\n   * @function encodeDelimited\r\n   * @memberof PatternTexture\r\n   * @static\r\n   * @param {IPatternTexture} message PatternTexture message or plain object to encode\r\n   * @param {$protobuf.Writer} [writer] Writer to encode to\r\n   * @returns {$protobuf.Writer} Writer\r\n   */\r\n  PatternTexture.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.encode(message, writer).ldelim()\r\n  }\r\n\r\n  /**\r\n   * Decodes a PatternTexture message from the specified reader or buffer.\r\n   * @function decode\r\n   * @memberof PatternTexture\r\n   * @static\r\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n   * @param {number} [length] Message length if known beforehand\r\n   * @returns {PatternTexture} PatternTexture\r\n   * @throws {Error} If the payload is not a reader or valid buffer\r\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n   */\r\n  PatternTexture.decode = function decode(reader, length) {\r\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\r\n    let end = length === undefined ? reader.len : reader.pos + length,\r\n      message = new $root.PatternTexture()\r\n    while (reader.pos < end) {\r\n      let tag = reader.uint32()\r\n      switch (tag >>> 3) {\r\n        case 1:\r\n          message.buffer = reader.bytes()\r\n          break\r\n        case 2:\r\n          message.scale = reader.double()\r\n          break\r\n        case 3:\r\n          message.repetition = reader.string()\r\n          break\r\n        default:\r\n          reader.skipType(tag & 7)\r\n          break\r\n      }\r\n    }\r\n    return message\r\n  }\r\n\r\n  /**\r\n   * Decodes a PatternTexture message from the specified reader or buffer, length delimited.\r\n   * @function decodeDelimited\r\n   * @memberof PatternTexture\r\n   * @static\r\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n   * @returns {PatternTexture} PatternTexture\r\n   * @throws {Error} If the payload is not a reader or valid buffer\r\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n   */\r\n  PatternTexture.decodeDelimited = function decodeDelimited(reader) {\r\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\r\n    return this.decode(reader, reader.uint32())\r\n  }\r\n\r\n  /**\r\n   * Verifies a PatternTexture message.\r\n   * @function verify\r\n   * @memberof PatternTexture\r\n   * @static\r\n   * @param {Object.<string,*>} message Plain object to verify\r\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n   */\r\n  PatternTexture.verify = function verify(message) {\r\n    if (typeof message !== 'object' || message === null)\r\n      return 'object expected'\r\n    if (message.buffer != null && message.hasOwnProperty('buffer'))\r\n      if (\r\n        !(\r\n          (message.buffer && typeof message.buffer.length === 'number') ||\r\n          $util.isString(message.buffer)\r\n        )\r\n      )\r\n        return 'buffer: buffer expected'\r\n    if (message.scale != null && message.hasOwnProperty('scale'))\r\n      if (typeof message.scale !== 'number') return 'scale: number expected'\r\n    if (message.repetition != null && message.hasOwnProperty('repetition'))\r\n      if (!$util.isString(message.repetition))\r\n        return 'repetition: string expected'\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * Creates a PatternTexture message from a plain object. Also converts values to their respective internal types.\r\n   * @function fromObject\r\n   * @memberof PatternTexture\r\n   * @static\r\n   * @param {Object.<string,*>} object Plain object\r\n   * @returns {PatternTexture} PatternTexture\r\n   */\r\n  PatternTexture.fromObject = function fromObject(object) {\r\n    if (object instanceof $root.PatternTexture) return object\r\n    let message = new $root.PatternTexture()\r\n    if (object.buffer != null)\r\n      if (typeof object.buffer === 'string')\r\n        $util.base64.decode(\r\n          object.buffer,\r\n          (message.buffer = $util.newBuffer(\r\n            $util.base64.length(object.buffer),\r\n          )),\r\n          0,\r\n        )\r\n      else if (object.buffer.length) message.buffer = object.buffer\r\n    if (object.scale != null) message.scale = Number(object.scale)\r\n    if (object.repetition != null)\r\n      message.repetition = String(object.repetition)\r\n    return message\r\n  }\r\n\r\n  /**\r\n   * Creates a plain object from a PatternTexture message. Also converts values to other types if specified.\r\n   * @function toObject\r\n   * @memberof PatternTexture\r\n   * @static\r\n   * @param {PatternTexture} message PatternTexture\r\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n   * @returns {Object.<string,*>} Plain object\r\n   */\r\n  PatternTexture.toObject = function toObject(message, options) {\r\n    if (!options) options = {}\r\n    let object = {}\r\n    if (options.defaults) {\r\n      if (options.bytes === String) object.buffer = ''\r\n      else {\r\n        object.buffer = []\r\n        if (options.bytes !== Array)\r\n          object.buffer = $util.newBuffer(object.buffer)\r\n      }\r\n      object.scale = 0\r\n      object.repetition = ''\r\n    }\r\n    if (message.buffer != null && message.hasOwnProperty('buffer'))\r\n      object.buffer =\r\n        options.bytes === String\r\n          ? $util.base64.encode(message.buffer, 0, message.buffer.length)\r\n          : options.bytes === Array\r\n          ? Array.prototype.slice.call(message.buffer)\r\n          : message.buffer\r\n    if (message.scale != null && message.hasOwnProperty('scale'))\r\n      object.scale =\r\n        options.json && !isFinite(message.scale)\r\n          ? String(message.scale)\r\n          : message.scale\r\n    if (message.repetition != null && message.hasOwnProperty('repetition'))\r\n      object.repetition = message.repetition\r\n    return object\r\n  }\r\n\r\n  /**\r\n   * Converts this PatternTexture to JSON.\r\n   * @function toJSON\r\n   * @memberof PatternTexture\r\n   * @instance\r\n   * @returns {Object.<string,*>} JSON object\r\n   */\r\n  PatternTexture.prototype.toJSON = function toJSON() {\r\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\r\n  }\r\n\r\n  return PatternTexture\r\n})())\r\n\r\nexport const Fill = ($root.Fill = (() => {\r\n  /**\r\n   * Properties of a Fill.\r\n   * @exports IFill\r\n   * @interface IFill\r\n   * @property {number|null} [type] Fill type\r\n   * @property {string|null} [color] Fill color\r\n   * @property {IGradient|null} [gradient] Fill gradient\r\n   * @property {IPatternTexture|null} [patternTexture] Fill patternTexture\r\n   * @property {number|null} [width] Fill width\r\n   * @property {string|null} [lineCap] Fill lineCap\r\n   * @property {string|null} [lineJoin] Fill lineJoin\r\n   */\r\n\r\n  /**\r\n   * Constructs a new Fill.\r\n   * @exports Fill\r\n   * @classdesc Represents a Fill.\r\n   * @implements IFill\r\n   * @constructor\r\n   * @param {IFill=} [properties] Properties to set\r\n   */\r\n  function Fill(properties) {\r\n    if (properties)\r\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\r\n  }\r\n\r\n  /**\r\n   * Fill type.\r\n   * @member {number} type\r\n   * @memberof Fill\r\n   * @instance\r\n   */\r\n  Fill.prototype.type = 0\r\n\r\n  /**\r\n   * Fill color.\r\n   * @member {string} color\r\n   * @memberof Fill\r\n   * @instance\r\n   */\r\n  Fill.prototype.color = ''\r\n\r\n  /**\r\n   * Fill gradient.\r\n   * @member {IGradient|null|undefined} gradient\r\n   * @memberof Fill\r\n   * @instance\r\n   */\r\n  Fill.prototype.gradient = null\r\n\r\n  /**\r\n   * Fill patternTexture.\r\n   * @member {IPatternTexture|null|undefined} patternTexture\r\n   * @memberof Fill\r\n   * @instance\r\n   */\r\n  Fill.prototype.patternTexture = null\r\n\r\n  /**\r\n   * Fill width.\r\n   * @member {number} width\r\n   * @memberof Fill\r\n   * @instance\r\n   */\r\n  Fill.prototype.width = 0\r\n\r\n  /**\r\n   * Fill lineCap.\r\n   * @member {string} lineCap\r\n   * @memberof Fill\r\n   * @instance\r\n   */\r\n  Fill.prototype.lineCap = ''\r\n\r\n  /**\r\n   * Fill lineJoin.\r\n   * @member {string} lineJoin\r\n   * @memberof Fill\r\n   * @instance\r\n   */\r\n  Fill.prototype.lineJoin = ''\r\n\r\n  /**\r\n   * Creates a new Fill instance using the specified properties.\r\n   * @function create\r\n   * @memberof Fill\r\n   * @static\r\n   * @param {IFill=} [properties] Properties to set\r\n   * @returns {Fill} Fill instance\r\n   */\r\n  Fill.create = function create(properties) {\r\n    return new Fill(properties)\r\n  }\r\n\r\n  /**\r\n   * Encodes the specified Fill message. Does not implicitly {@link Fill.verify|verify} messages.\r\n   * @function encode\r\n   * @memberof Fill\r\n   * @static\r\n   * @param {IFill} message Fill message or plain object to encode\r\n   * @param {$protobuf.Writer} [writer] Writer to encode to\r\n   * @returns {$protobuf.Writer} Writer\r\n   */\r\n  Fill.encode = function encode(message, writer) {\r\n    if (!writer) writer = $Writer.create()\r\n    if (message.type != null && Object.hasOwnProperty.call(message, 'type'))\r\n      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.type)\r\n    if (message.color != null && Object.hasOwnProperty.call(message, 'color'))\r\n      writer.uint32(/* id 2, wireType 2 =*/ 18).string(message.color)\r\n    if (\r\n      message.gradient != null &&\r\n      Object.hasOwnProperty.call(message, 'gradient')\r\n    )\r\n      $root.Gradient.encode(\r\n        message.gradient,\r\n        writer.uint32(/* id 3, wireType 2 =*/ 26).fork(),\r\n      ).ldelim()\r\n    if (\r\n      message.patternTexture != null &&\r\n      Object.hasOwnProperty.call(message, 'patternTexture')\r\n    )\r\n      $root.PatternTexture.encode(\r\n        message.patternTexture,\r\n        writer.uint32(/* id 4, wireType 2 =*/ 34).fork(),\r\n      ).ldelim()\r\n    if (message.width != null && Object.hasOwnProperty.call(message, 'width'))\r\n      writer.uint32(/* id 5, wireType 0 =*/ 40).int32(message.width)\r\n    if (\r\n      message.lineCap != null &&\r\n      Object.hasOwnProperty.call(message, 'lineCap')\r\n    )\r\n      writer.uint32(/* id 6, wireType 2 =*/ 50).string(message.lineCap)\r\n    if (\r\n      message.lineJoin != null &&\r\n      Object.hasOwnProperty.call(message, 'lineJoin')\r\n    )\r\n      writer.uint32(/* id 7, wireType 2 =*/ 58).string(message.lineJoin)\r\n    return writer\r\n  }\r\n\r\n  /**\r\n   * Encodes the specified Fill message, length delimited. Does not implicitly {@link Fill.verify|verify} messages.\r\n   * @function encodeDelimited\r\n   * @memberof Fill\r\n   * @static\r\n   * @param {IFill} message Fill message or plain object to encode\r\n   * @param {$protobuf.Writer} [writer] Writer to encode to\r\n   * @returns {$protobuf.Writer} Writer\r\n   */\r\n  Fill.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.encode(message, writer).ldelim()\r\n  }\r\n\r\n  /**\r\n   * Decodes a Fill message from the specified reader or buffer.\r\n   * @function decode\r\n   * @memberof Fill\r\n   * @static\r\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n   * @param {number} [length] Message length if known beforehand\r\n   * @returns {Fill} Fill\r\n   * @throws {Error} If the payload is not a reader or valid buffer\r\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n   */\r\n  Fill.decode = function decode(reader, length) {\r\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\r\n    let end = length === undefined ? reader.len : reader.pos + length,\r\n      message = new $root.Fill()\r\n    while (reader.pos < end) {\r\n      let tag = reader.uint32()\r\n      switch (tag >>> 3) {\r\n        case 1:\r\n          message.type = reader.int32()\r\n          break\r\n        case 2:\r\n          message.color = reader.string()\r\n          break\r\n        case 3:\r\n          message.gradient = $root.Gradient.decode(reader, reader.uint32())\r\n          break\r\n        case 4:\r\n          message.patternTexture = $root.PatternTexture.decode(\r\n            reader,\r\n            reader.uint32(),\r\n          )\r\n          break\r\n        case 5:\r\n          message.width = reader.int32()\r\n          break\r\n        case 6:\r\n          message.lineCap = reader.string()\r\n          break\r\n        case 7:\r\n          message.lineJoin = reader.string()\r\n          break\r\n        default:\r\n          reader.skipType(tag & 7)\r\n          break\r\n      }\r\n    }\r\n    return message\r\n  }\r\n\r\n  /**\r\n   * Decodes a Fill message from the specified reader or buffer, length delimited.\r\n   * @function decodeDelimited\r\n   * @memberof Fill\r\n   * @static\r\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n   * @returns {Fill} Fill\r\n   * @throws {Error} If the payload is not a reader or valid buffer\r\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n   */\r\n  Fill.decodeDelimited = function decodeDelimited(reader) {\r\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\r\n    return this.decode(reader, reader.uint32())\r\n  }\r\n\r\n  /**\r\n   * Verifies a Fill message.\r\n   * @function verify\r\n   * @memberof Fill\r\n   * @static\r\n   * @param {Object.<string,*>} message Plain object to verify\r\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n   */\r\n  Fill.verify = function verify(message) {\r\n    if (typeof message !== 'object' || message === null)\r\n      return 'object expected'\r\n    if (message.type != null && message.hasOwnProperty('type'))\r\n      if (!$util.isInteger(message.type)) return 'type: integer expected'\r\n    if (message.color != null && message.hasOwnProperty('color'))\r\n      if (!$util.isString(message.color)) return 'color: string expected'\r\n    if (message.gradient != null && message.hasOwnProperty('gradient')) {\r\n      let error = $root.Gradient.verify(message.gradient)\r\n      if (error) return 'gradient.' + error\r\n    }\r\n    if (\r\n      message.patternTexture != null &&\r\n      message.hasOwnProperty('patternTexture')\r\n    ) {\r\n      let error = $root.PatternTexture.verify(message.patternTexture)\r\n      if (error) return 'patternTexture.' + error\r\n    }\r\n    if (message.width != null && message.hasOwnProperty('width'))\r\n      if (!$util.isInteger(message.width)) return 'width: integer expected'\r\n    if (message.lineCap != null && message.hasOwnProperty('lineCap'))\r\n      if (!$util.isString(message.lineCap)) return 'lineCap: string expected'\r\n    if (message.lineJoin != null && message.hasOwnProperty('lineJoin'))\r\n      if (!$util.isString(message.lineJoin)) return 'lineJoin: string expected'\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * Creates a Fill message from a plain object. Also converts values to their respective internal types.\r\n   * @function fromObject\r\n   * @memberof Fill\r\n   * @static\r\n   * @param {Object.<string,*>} object Plain object\r\n   * @returns {Fill} Fill\r\n   */\r\n  Fill.fromObject = function fromObject(object) {\r\n    if (object instanceof $root.Fill) return object\r\n    let message = new $root.Fill()\r\n    if (object.type != null) message.type = object.type | 0\r\n    if (object.color != null) message.color = String(object.color)\r\n    if (object.gradient != null) {\r\n      if (typeof object.gradient !== 'object')\r\n        throw TypeError('.Fill.gradient: object expected')\r\n      message.gradient = $root.Gradient.fromObject(object.gradient)\r\n    }\r\n    if (object.patternTexture != null) {\r\n      if (typeof object.patternTexture !== 'object')\r\n        throw TypeError('.Fill.patternTexture: object expected')\r\n      message.patternTexture = $root.PatternTexture.fromObject(\r\n        object.patternTexture,\r\n      )\r\n    }\r\n    if (object.width != null) message.width = object.width | 0\r\n    if (object.lineCap != null) message.lineCap = String(object.lineCap)\r\n    if (object.lineJoin != null) message.lineJoin = String(object.lineJoin)\r\n    return message\r\n  }\r\n\r\n  /**\r\n   * Creates a plain object from a Fill message. Also converts values to other types if specified.\r\n   * @function toObject\r\n   * @memberof Fill\r\n   * @static\r\n   * @param {Fill} message Fill\r\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n   * @returns {Object.<string,*>} Plain object\r\n   */\r\n  Fill.toObject = function toObject(message, options) {\r\n    if (!options) options = {}\r\n    let object = {}\r\n    if (options.defaults) {\r\n      object.type = 0\r\n      object.color = ''\r\n      object.gradient = null\r\n      object.patternTexture = null\r\n      object.width = 0\r\n      object.lineCap = ''\r\n      object.lineJoin = ''\r\n    }\r\n    if (message.type != null && message.hasOwnProperty('type'))\r\n      object.type = message.type\r\n    if (message.color != null && message.hasOwnProperty('color'))\r\n      object.color = message.color\r\n    if (message.gradient != null && message.hasOwnProperty('gradient'))\r\n      object.gradient = $root.Gradient.toObject(message.gradient, options)\r\n    if (\r\n      message.patternTexture != null &&\r\n      message.hasOwnProperty('patternTexture')\r\n    )\r\n      object.patternTexture = $root.PatternTexture.toObject(\r\n        message.patternTexture,\r\n        options,\r\n      )\r\n    if (message.width != null && message.hasOwnProperty('width'))\r\n      object.width = message.width\r\n    if (message.lineCap != null && message.hasOwnProperty('lineCap'))\r\n      object.lineCap = message.lineCap\r\n    if (message.lineJoin != null && message.hasOwnProperty('lineJoin'))\r\n      object.lineJoin = message.lineJoin\r\n    return object\r\n  }\r\n\r\n  /**\r\n   * Converts this Fill to JSON.\r\n   * @function toJSON\r\n   * @memberof Fill\r\n   * @instance\r\n   * @returns {Object.<string,*>} JSON object\r\n   */\r\n  Fill.prototype.toJSON = function toJSON() {\r\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\r\n  }\r\n\r\n  return Fill\r\n})())\r\n\r\nexport const Font = ($root.Font = (() => {\r\n  /**\r\n   * Properties of a Font.\r\n   * @exports IFont\r\n   * @interface IFont\r\n   * @property {Uint8Array|null} [font] Font font\r\n   * @property {string|null} [family] Font family\r\n   * @property {number|null} [size] Font size\r\n   * @property {number|null} [lineHeight] Font lineHeight\r\n   */\r\n\r\n  /**\r\n   * Constructs a new Font.\r\n   * @exports Font\r\n   * @classdesc Represents a Font.\r\n   * @implements IFont\r\n   * @constructor\r\n   * @param {IFont=} [properties] Properties to set\r\n   */\r\n  function Font(properties) {\r\n    if (properties)\r\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\r\n  }\r\n\r\n  /**\r\n   * Font font.\r\n   * @member {Uint8Array} font\r\n   * @memberof Font\r\n   * @instance\r\n   */\r\n  Font.prototype.font = $util.newBuffer([])\r\n\r\n  /**\r\n   * Font family.\r\n   * @member {string} family\r\n   * @memberof Font\r\n   * @instance\r\n   */\r\n  Font.prototype.family = ''\r\n\r\n  /**\r\n   * Font size.\r\n   * @member {number} size\r\n   * @memberof Font\r\n   * @instance\r\n   */\r\n  Font.prototype.size = 0\r\n\r\n  /**\r\n   * Font lineHeight.\r\n   * @member {number} lineHeight\r\n   * @memberof Font\r\n   * @instance\r\n   */\r\n  Font.prototype.lineHeight = 0\r\n\r\n  /**\r\n   * Creates a new Font instance using the specified properties.\r\n   * @function create\r\n   * @memberof Font\r\n   * @static\r\n   * @param {IFont=} [properties] Properties to set\r\n   * @returns {Font} Font instance\r\n   */\r\n  Font.create = function create(properties) {\r\n    return new Font(properties)\r\n  }\r\n\r\n  /**\r\n   * Encodes the specified Font message. Does not implicitly {@link Font.verify|verify} messages.\r\n   * @function encode\r\n   * @memberof Font\r\n   * @static\r\n   * @param {IFont} message Font message or plain object to encode\r\n   * @param {$protobuf.Writer} [writer] Writer to encode to\r\n   * @returns {$protobuf.Writer} Writer\r\n   */\r\n  Font.encode = function encode(message, writer) {\r\n    if (!writer) writer = $Writer.create()\r\n    if (message.font != null && Object.hasOwnProperty.call(message, 'font'))\r\n      writer.uint32(/* id 1, wireType 2 =*/ 10).bytes(message.font)\r\n    if (message.family != null && Object.hasOwnProperty.call(message, 'family'))\r\n      writer.uint32(/* id 2, wireType 2 =*/ 18).string(message.family)\r\n    if (message.size != null && Object.hasOwnProperty.call(message, 'size'))\r\n      writer.uint32(/* id 3, wireType 0 =*/ 24).int32(message.size)\r\n    if (\r\n      message.lineHeight != null &&\r\n      Object.hasOwnProperty.call(message, 'lineHeight')\r\n    )\r\n      writer.uint32(/* id 4, wireType 0 =*/ 32).int32(message.lineHeight)\r\n    return writer\r\n  }\r\n\r\n  /**\r\n   * Encodes the specified Font message, length delimited. Does not implicitly {@link Font.verify|verify} messages.\r\n   * @function encodeDelimited\r\n   * @memberof Font\r\n   * @static\r\n   * @param {IFont} message Font message or plain object to encode\r\n   * @param {$protobuf.Writer} [writer] Writer to encode to\r\n   * @returns {$protobuf.Writer} Writer\r\n   */\r\n  Font.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.encode(message, writer).ldelim()\r\n  }\r\n\r\n  /**\r\n   * Decodes a Font message from the specified reader or buffer.\r\n   * @function decode\r\n   * @memberof Font\r\n   * @static\r\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n   * @param {number} [length] Message length if known beforehand\r\n   * @returns {Font} Font\r\n   * @throws {Error} If the payload is not a reader or valid buffer\r\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n   */\r\n  Font.decode = function decode(reader, length) {\r\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\r\n    let end = length === undefined ? reader.len : reader.pos + length,\r\n      message = new $root.Font()\r\n    while (reader.pos < end) {\r\n      let tag = reader.uint32()\r\n      switch (tag >>> 3) {\r\n        case 1:\r\n          message.font = reader.bytes()\r\n          break\r\n        case 2:\r\n          message.family = reader.string()\r\n          break\r\n        case 3:\r\n          message.size = reader.int32()\r\n          break\r\n        case 4:\r\n          message.lineHeight = reader.int32()\r\n          break\r\n        default:\r\n          reader.skipType(tag & 7)\r\n          break\r\n      }\r\n    }\r\n    return message\r\n  }\r\n\r\n  /**\r\n   * Decodes a Font message from the specified reader or buffer, length delimited.\r\n   * @function decodeDelimited\r\n   * @memberof Font\r\n   * @static\r\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n   * @returns {Font} Font\r\n   * @throws {Error} If the payload is not a reader or valid buffer\r\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n   */\r\n  Font.decodeDelimited = function decodeDelimited(reader) {\r\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\r\n    return this.decode(reader, reader.uint32())\r\n  }\r\n\r\n  /**\r\n   * Verifies a Font message.\r\n   * @function verify\r\n   * @memberof Font\r\n   * @static\r\n   * @param {Object.<string,*>} message Plain object to verify\r\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n   */\r\n  Font.verify = function verify(message) {\r\n    if (typeof message !== 'object' || message === null)\r\n      return 'object expected'\r\n    if (message.font != null && message.hasOwnProperty('font'))\r\n      if (\r\n        !(\r\n          (message.font && typeof message.font.length === 'number') ||\r\n          $util.isString(message.font)\r\n        )\r\n      )\r\n        return 'font: buffer expected'\r\n    if (message.family != null && message.hasOwnProperty('family'))\r\n      if (!$util.isString(message.family)) return 'family: string expected'\r\n    if (message.size != null && message.hasOwnProperty('size'))\r\n      if (!$util.isInteger(message.size)) return 'size: integer expected'\r\n    if (message.lineHeight != null && message.hasOwnProperty('lineHeight'))\r\n      if (!$util.isInteger(message.lineHeight))\r\n        return 'lineHeight: integer expected'\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * Creates a Font message from a plain object. Also converts values to their respective internal types.\r\n   * @function fromObject\r\n   * @memberof Font\r\n   * @static\r\n   * @param {Object.<string,*>} object Plain object\r\n   * @returns {Font} Font\r\n   */\r\n  Font.fromObject = function fromObject(object) {\r\n    if (object instanceof $root.Font) return object\r\n    let message = new $root.Font()\r\n    if (object.font != null)\r\n      if (typeof object.font === 'string')\r\n        $util.base64.decode(\r\n          object.font,\r\n          (message.font = $util.newBuffer($util.base64.length(object.font))),\r\n          0,\r\n        )\r\n      else if (object.font.length) message.font = object.font\r\n    if (object.family != null) message.family = String(object.family)\r\n    if (object.size != null) message.size = object.size | 0\r\n    if (object.lineHeight != null) message.lineHeight = object.lineHeight | 0\r\n    return message\r\n  }\r\n\r\n  /**\r\n   * Creates a plain object from a Font message. Also converts values to other types if specified.\r\n   * @function toObject\r\n   * @memberof Font\r\n   * @static\r\n   * @param {Font} message Font\r\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n   * @returns {Object.<string,*>} Plain object\r\n   */\r\n  Font.toObject = function toObject(message, options) {\r\n    if (!options) options = {}\r\n    let object = {}\r\n    if (options.defaults) {\r\n      if (options.bytes === String) object.font = ''\r\n      else {\r\n        object.font = []\r\n        if (options.bytes !== Array) object.font = $util.newBuffer(object.font)\r\n      }\r\n      object.family = ''\r\n      object.size = 0\r\n      object.lineHeight = 0\r\n    }\r\n    if (message.font != null && message.hasOwnProperty('font'))\r\n      object.font =\r\n        options.bytes === String\r\n          ? $util.base64.encode(message.font, 0, message.font.length)\r\n          : options.bytes === Array\r\n          ? Array.prototype.slice.call(message.font)\r\n          : message.font\r\n    if (message.family != null && message.hasOwnProperty('family'))\r\n      object.family = message.family\r\n    if (message.size != null && message.hasOwnProperty('size'))\r\n      object.size = message.size\r\n    if (message.lineHeight != null && message.hasOwnProperty('lineHeight'))\r\n      object.lineHeight = message.lineHeight\r\n    return object\r\n  }\r\n\r\n  /**\r\n   * Converts this Font to JSON.\r\n   * @function toJSON\r\n   * @memberof Font\r\n   * @instance\r\n   * @returns {Object.<string,*>} JSON object\r\n   */\r\n  Font.prototype.toJSON = function toJSON() {\r\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\r\n  }\r\n\r\n  return Font\r\n})())\r\n\r\nexport const GlyphFont = ($root.GlyphFont = (() => {\r\n  /**\r\n   * Properties of a GlyphFont.\r\n   * @exports IGlyphFont\r\n   * @interface IGlyphFont\r\n   * @property {string|null} [letter] GlyphFont letter\r\n   * @property {IMetric|null} [adjustMetric] GlyphFont adjustMetric\r\n   * @property {Object.<string,number>|null} [kerning] GlyphFont kerning\r\n   */\r\n\r\n  /**\r\n   * Constructs a new GlyphFont.\r\n   * @exports GlyphFont\r\n   * @classdesc Represents a GlyphFont.\r\n   * @implements IGlyphFont\r\n   * @constructor\r\n   * @param {IGlyphFont=} [properties] Properties to set\r\n   */\r\n  function GlyphFont(properties) {\r\n    this.kerning = {}\r\n    if (properties)\r\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\r\n  }\r\n\r\n  /**\r\n   * GlyphFont letter.\r\n   * @member {string} letter\r\n   * @memberof GlyphFont\r\n   * @instance\r\n   */\r\n  GlyphFont.prototype.letter = ''\r\n\r\n  /**\r\n   * GlyphFont adjustMetric.\r\n   * @member {IMetric|null|undefined} adjustMetric\r\n   * @memberof GlyphFont\r\n   * @instance\r\n   */\r\n  GlyphFont.prototype.adjustMetric = null\r\n\r\n  /**\r\n   * GlyphFont kerning.\r\n   * @member {Object.<string,number>} kerning\r\n   * @memberof GlyphFont\r\n   * @instance\r\n   */\r\n  GlyphFont.prototype.kerning = $util.emptyObject\r\n\r\n  /**\r\n   * Creates a new GlyphFont instance using the specified properties.\r\n   * @function create\r\n   * @memberof GlyphFont\r\n   * @static\r\n   * @param {IGlyphFont=} [properties] Properties to set\r\n   * @returns {GlyphFont} GlyphFont instance\r\n   */\r\n  GlyphFont.create = function create(properties) {\r\n    return new GlyphFont(properties)\r\n  }\r\n\r\n  /**\r\n   * Encodes the specified GlyphFont message. Does not implicitly {@link GlyphFont.verify|verify} messages.\r\n   * @function encode\r\n   * @memberof GlyphFont\r\n   * @static\r\n   * @param {IGlyphFont} message GlyphFont message or plain object to encode\r\n   * @param {$protobuf.Writer} [writer] Writer to encode to\r\n   * @returns {$protobuf.Writer} Writer\r\n   */\r\n  GlyphFont.encode = function encode(message, writer) {\r\n    if (!writer) writer = $Writer.create()\r\n    if (message.letter != null && Object.hasOwnProperty.call(message, 'letter'))\r\n      writer.uint32(/* id 1, wireType 2 =*/ 10).string(message.letter)\r\n    if (\r\n      message.adjustMetric != null &&\r\n      Object.hasOwnProperty.call(message, 'adjustMetric')\r\n    )\r\n      $root.Metric.encode(\r\n        message.adjustMetric,\r\n        writer.uint32(/* id 2, wireType 2 =*/ 18).fork(),\r\n      ).ldelim()\r\n    if (\r\n      message.kerning != null &&\r\n      Object.hasOwnProperty.call(message, 'kerning')\r\n    )\r\n      for (let keys = Object.keys(message.kerning), i = 0; i < keys.length; ++i)\r\n        writer\r\n          .uint32(/* id 3, wireType 2 =*/ 26)\r\n          .fork()\r\n          .uint32(/* id 1, wireType 2 =*/ 10)\r\n          .string(keys[i])\r\n          .uint32(/* id 2, wireType 0 =*/ 16)\r\n          .int32(message.kerning[keys[i]])\r\n          .ldelim()\r\n    return writer\r\n  }\r\n\r\n  /**\r\n   * Encodes the specified GlyphFont message, length delimited. Does not implicitly {@link GlyphFont.verify|verify} messages.\r\n   * @function encodeDelimited\r\n   * @memberof GlyphFont\r\n   * @static\r\n   * @param {IGlyphFont} message GlyphFont message or plain object to encode\r\n   * @param {$protobuf.Writer} [writer] Writer to encode to\r\n   * @returns {$protobuf.Writer} Writer\r\n   */\r\n  GlyphFont.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.encode(message, writer).ldelim()\r\n  }\r\n\r\n  /**\r\n   * Decodes a GlyphFont message from the specified reader or buffer.\r\n   * @function decode\r\n   * @memberof GlyphFont\r\n   * @static\r\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n   * @param {number} [length] Message length if known beforehand\r\n   * @returns {GlyphFont} GlyphFont\r\n   * @throws {Error} If the payload is not a reader or valid buffer\r\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n   */\r\n  GlyphFont.decode = function decode(reader, length) {\r\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\r\n    let end = length === undefined ? reader.len : reader.pos + length,\r\n      message = new $root.GlyphFont(),\r\n      key,\r\n      value\r\n    while (reader.pos < end) {\r\n      let tag = reader.uint32()\r\n      switch (tag >>> 3) {\r\n        case 1:\r\n          message.letter = reader.string()\r\n          break\r\n        case 2:\r\n          message.adjustMetric = $root.Metric.decode(reader, reader.uint32())\r\n          break\r\n        case 3:\r\n          if (message.kerning === $util.emptyObject) message.kerning = {}\r\n          let end2 = reader.uint32() + reader.pos\r\n          key = ''\r\n          value = 0\r\n          while (reader.pos < end2) {\r\n            let tag2 = reader.uint32()\r\n            switch (tag2 >>> 3) {\r\n              case 1:\r\n                key = reader.string()\r\n                break\r\n              case 2:\r\n                value = reader.int32()\r\n                break\r\n              default:\r\n                reader.skipType(tag2 & 7)\r\n                break\r\n            }\r\n          }\r\n          message.kerning[key] = value\r\n          break\r\n        default:\r\n          reader.skipType(tag & 7)\r\n          break\r\n      }\r\n    }\r\n    return message\r\n  }\r\n\r\n  /**\r\n   * Decodes a GlyphFont message from the specified reader or buffer, length delimited.\r\n   * @function decodeDelimited\r\n   * @memberof GlyphFont\r\n   * @static\r\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n   * @returns {GlyphFont} GlyphFont\r\n   * @throws {Error} If the payload is not a reader or valid buffer\r\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n   */\r\n  GlyphFont.decodeDelimited = function decodeDelimited(reader) {\r\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\r\n    return this.decode(reader, reader.uint32())\r\n  }\r\n\r\n  /**\r\n   * Verifies a GlyphFont message.\r\n   * @function verify\r\n   * @memberof GlyphFont\r\n   * @static\r\n   * @param {Object.<string,*>} message Plain object to verify\r\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n   */\r\n  GlyphFont.verify = function verify(message) {\r\n    if (typeof message !== 'object' || message === null)\r\n      return 'object expected'\r\n    if (message.letter != null && message.hasOwnProperty('letter'))\r\n      if (!$util.isString(message.letter)) return 'letter: string expected'\r\n    if (\r\n      message.adjustMetric != null &&\r\n      message.hasOwnProperty('adjustMetric')\r\n    ) {\r\n      let error = $root.Metric.verify(message.adjustMetric)\r\n      if (error) return 'adjustMetric.' + error\r\n    }\r\n    if (message.kerning != null && message.hasOwnProperty('kerning')) {\r\n      if (!$util.isObject(message.kerning)) return 'kerning: object expected'\r\n      let key = Object.keys(message.kerning)\r\n      for (let i = 0; i < key.length; ++i)\r\n        if (!$util.isInteger(message.kerning[key[i]]))\r\n          return 'kerning: integer{k:string} expected'\r\n    }\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * Creates a GlyphFont message from a plain object. Also converts values to their respective internal types.\r\n   * @function fromObject\r\n   * @memberof GlyphFont\r\n   * @static\r\n   * @param {Object.<string,*>} object Plain object\r\n   * @returns {GlyphFont} GlyphFont\r\n   */\r\n  GlyphFont.fromObject = function fromObject(object) {\r\n    if (object instanceof $root.GlyphFont) return object\r\n    let message = new $root.GlyphFont()\r\n    if (object.letter != null) message.letter = String(object.letter)\r\n    if (object.adjustMetric != null) {\r\n      if (typeof object.adjustMetric !== 'object')\r\n        throw TypeError('.GlyphFont.adjustMetric: object expected')\r\n      message.adjustMetric = $root.Metric.fromObject(object.adjustMetric)\r\n    }\r\n    if (object.kerning) {\r\n      if (typeof object.kerning !== 'object')\r\n        throw TypeError('.GlyphFont.kerning: object expected')\r\n      message.kerning = {}\r\n      for (let keys = Object.keys(object.kerning), i = 0; i < keys.length; ++i)\r\n        message.kerning[keys[i]] = object.kerning[keys[i]] | 0\r\n    }\r\n    return message\r\n  }\r\n\r\n  /**\r\n   * Creates a plain object from a GlyphFont message. Also converts values to other types if specified.\r\n   * @function toObject\r\n   * @memberof GlyphFont\r\n   * @static\r\n   * @param {GlyphFont} message GlyphFont\r\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n   * @returns {Object.<string,*>} Plain object\r\n   */\r\n  GlyphFont.toObject = function toObject(message, options) {\r\n    if (!options) options = {}\r\n    let object = {}\r\n    if (options.objects || options.defaults) object.kerning = {}\r\n    if (options.defaults) {\r\n      object.letter = ''\r\n      object.adjustMetric = null\r\n    }\r\n    if (message.letter != null && message.hasOwnProperty('letter'))\r\n      object.letter = message.letter\r\n    if (message.adjustMetric != null && message.hasOwnProperty('adjustMetric'))\r\n      object.adjustMetric = $root.Metric.toObject(message.adjustMetric, options)\r\n    let keys2\r\n    if (message.kerning && (keys2 = Object.keys(message.kerning)).length) {\r\n      object.kerning = {}\r\n      for (let j = 0; j < keys2.length; ++j)\r\n        object.kerning[keys2[j]] = message.kerning[keys2[j]]\r\n    }\r\n    return object\r\n  }\r\n\r\n  /**\r\n   * Converts this GlyphFont to JSON.\r\n   * @function toJSON\r\n   * @memberof GlyphFont\r\n   * @instance\r\n   * @returns {Object.<string,*>} JSON object\r\n   */\r\n  GlyphFont.prototype.toJSON = function toJSON() {\r\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\r\n  }\r\n\r\n  return GlyphFont\r\n})())\r\n\r\nexport const GlyphImage = ($root.GlyphImage = (() => {\r\n  /**\r\n   * Properties of a GlyphImage.\r\n   * @exports IGlyphImage\r\n   * @interface IGlyphImage\r\n   * @property {string|null} [letter] GlyphImage letter\r\n   * @property {IMetric|null} [adjustMetric] GlyphImage adjustMetric\r\n   * @property {Uint8Array|null} [buffer] GlyphImage buffer\r\n   * @property {string|null} [fileName] GlyphImage fileName\r\n   * @property {string|null} [fileType] GlyphImage fileType\r\n   * @property {boolean|null} [selected] GlyphImage selected\r\n   * @property {Object.<string,number>|null} [kerning] GlyphImage kerning\r\n   */\r\n\r\n  /**\r\n   * Constructs a new GlyphImage.\r\n   * @exports GlyphImage\r\n   * @classdesc Represents a GlyphImage.\r\n   * @implements IGlyphImage\r\n   * @constructor\r\n   * @param {IGlyphImage=} [properties] Properties to set\r\n   */\r\n  function GlyphImage(properties) {\r\n    this.kerning = {}\r\n    if (properties)\r\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\r\n  }\r\n\r\n  /**\r\n   * GlyphImage letter.\r\n   * @member {string} letter\r\n   * @memberof GlyphImage\r\n   * @instance\r\n   */\r\n  GlyphImage.prototype.letter = ''\r\n\r\n  /**\r\n   * GlyphImage adjustMetric.\r\n   * @member {IMetric|null|undefined} adjustMetric\r\n   * @memberof GlyphImage\r\n   * @instance\r\n   */\r\n  GlyphImage.prototype.adjustMetric = null\r\n\r\n  /**\r\n   * GlyphImage buffer.\r\n   * @member {Uint8Array} buffer\r\n   * @memberof GlyphImage\r\n   * @instance\r\n   */\r\n  GlyphImage.prototype.buffer = $util.newBuffer([])\r\n\r\n  /**\r\n   * GlyphImage fileName.\r\n   * @member {string} fileName\r\n   * @memberof GlyphImage\r\n   * @instance\r\n   */\r\n  GlyphImage.prototype.fileName = ''\r\n\r\n  /**\r\n   * GlyphImage fileType.\r\n   * @member {string} fileType\r\n   * @memberof GlyphImage\r\n   * @instance\r\n   */\r\n  GlyphImage.prototype.fileType = ''\r\n\r\n  /**\r\n   * GlyphImage selected.\r\n   * @member {boolean} selected\r\n   * @memberof GlyphImage\r\n   * @instance\r\n   */\r\n  GlyphImage.prototype.selected = false\r\n\r\n  /**\r\n   * GlyphImage kerning.\r\n   * @member {Object.<string,number>} kerning\r\n   * @memberof GlyphImage\r\n   * @instance\r\n   */\r\n  GlyphImage.prototype.kerning = $util.emptyObject\r\n\r\n  /**\r\n   * Creates a new GlyphImage instance using the specified properties.\r\n   * @function create\r\n   * @memberof GlyphImage\r\n   * @static\r\n   * @param {IGlyphImage=} [properties] Properties to set\r\n   * @returns {GlyphImage} GlyphImage instance\r\n   */\r\n  GlyphImage.create = function create(properties) {\r\n    return new GlyphImage(properties)\r\n  }\r\n\r\n  /**\r\n   * Encodes the specified GlyphImage message. Does not implicitly {@link GlyphImage.verify|verify} messages.\r\n   * @function encode\r\n   * @memberof GlyphImage\r\n   * @static\r\n   * @param {IGlyphImage} message GlyphImage message or plain object to encode\r\n   * @param {$protobuf.Writer} [writer] Writer to encode to\r\n   * @returns {$protobuf.Writer} Writer\r\n   */\r\n  GlyphImage.encode = function encode(message, writer) {\r\n    if (!writer) writer = $Writer.create()\r\n    if (message.letter != null && Object.hasOwnProperty.call(message, 'letter'))\r\n      writer.uint32(/* id 1, wireType 2 =*/ 10).string(message.letter)\r\n    if (\r\n      message.adjustMetric != null &&\r\n      Object.hasOwnProperty.call(message, 'adjustMetric')\r\n    )\r\n      $root.Metric.encode(\r\n        message.adjustMetric,\r\n        writer.uint32(/* id 2, wireType 2 =*/ 18).fork(),\r\n      ).ldelim()\r\n    if (message.buffer != null && Object.hasOwnProperty.call(message, 'buffer'))\r\n      writer.uint32(/* id 3, wireType 2 =*/ 26).bytes(message.buffer)\r\n    if (\r\n      message.fileName != null &&\r\n      Object.hasOwnProperty.call(message, 'fileName')\r\n    )\r\n      writer.uint32(/* id 4, wireType 2 =*/ 34).string(message.fileName)\r\n    if (\r\n      message.fileType != null &&\r\n      Object.hasOwnProperty.call(message, 'fileType')\r\n    )\r\n      writer.uint32(/* id 5, wireType 2 =*/ 42).string(message.fileType)\r\n    if (\r\n      message.selected != null &&\r\n      Object.hasOwnProperty.call(message, 'selected')\r\n    )\r\n      writer.uint32(/* id 6, wireType 0 =*/ 48).bool(message.selected)\r\n    if (\r\n      message.kerning != null &&\r\n      Object.hasOwnProperty.call(message, 'kerning')\r\n    )\r\n      for (let keys = Object.keys(message.kerning), i = 0; i < keys.length; ++i)\r\n        writer\r\n          .uint32(/* id 7, wireType 2 =*/ 58)\r\n          .fork()\r\n          .uint32(/* id 1, wireType 2 =*/ 10)\r\n          .string(keys[i])\r\n          .uint32(/* id 2, wireType 0 =*/ 16)\r\n          .int32(message.kerning[keys[i]])\r\n          .ldelim()\r\n    return writer\r\n  }\r\n\r\n  /**\r\n   * Encodes the specified GlyphImage message, length delimited. Does not implicitly {@link GlyphImage.verify|verify} messages.\r\n   * @function encodeDelimited\r\n   * @memberof GlyphImage\r\n   * @static\r\n   * @param {IGlyphImage} message GlyphImage message or plain object to encode\r\n   * @param {$protobuf.Writer} [writer] Writer to encode to\r\n   * @returns {$protobuf.Writer} Writer\r\n   */\r\n  GlyphImage.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.encode(message, writer).ldelim()\r\n  }\r\n\r\n  /**\r\n   * Decodes a GlyphImage message from the specified reader or buffer.\r\n   * @function decode\r\n   * @memberof GlyphImage\r\n   * @static\r\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n   * @param {number} [length] Message length if known beforehand\r\n   * @returns {GlyphImage} GlyphImage\r\n   * @throws {Error} If the payload is not a reader or valid buffer\r\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n   */\r\n  GlyphImage.decode = function decode(reader, length) {\r\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\r\n    let end = length === undefined ? reader.len : reader.pos + length,\r\n      message = new $root.GlyphImage(),\r\n      key,\r\n      value\r\n    while (reader.pos < end) {\r\n      let tag = reader.uint32()\r\n      switch (tag >>> 3) {\r\n        case 1:\r\n          message.letter = reader.string()\r\n          break\r\n        case 2:\r\n          message.adjustMetric = $root.Metric.decode(reader, reader.uint32())\r\n          break\r\n        case 3:\r\n          message.buffer = reader.bytes()\r\n          break\r\n        case 4:\r\n          message.fileName = reader.string()\r\n          break\r\n        case 5:\r\n          message.fileType = reader.string()\r\n          break\r\n        case 6:\r\n          message.selected = reader.bool()\r\n          break\r\n        case 7:\r\n          if (message.kerning === $util.emptyObject) message.kerning = {}\r\n          let end2 = reader.uint32() + reader.pos\r\n          key = ''\r\n          value = 0\r\n          while (reader.pos < end2) {\r\n            let tag2 = reader.uint32()\r\n            switch (tag2 >>> 3) {\r\n              case 1:\r\n                key = reader.string()\r\n                break\r\n              case 2:\r\n                value = reader.int32()\r\n                break\r\n              default:\r\n                reader.skipType(tag2 & 7)\r\n                break\r\n            }\r\n          }\r\n          message.kerning[key] = value\r\n          break\r\n        default:\r\n          reader.skipType(tag & 7)\r\n          break\r\n      }\r\n    }\r\n    return message\r\n  }\r\n\r\n  /**\r\n   * Decodes a GlyphImage message from the specified reader or buffer, length delimited.\r\n   * @function decodeDelimited\r\n   * @memberof GlyphImage\r\n   * @static\r\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n   * @returns {GlyphImage} GlyphImage\r\n   * @throws {Error} If the payload is not a reader or valid buffer\r\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n   */\r\n  GlyphImage.decodeDelimited = function decodeDelimited(reader) {\r\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\r\n    return this.decode(reader, reader.uint32())\r\n  }\r\n\r\n  /**\r\n   * Verifies a GlyphImage message.\r\n   * @function verify\r\n   * @memberof GlyphImage\r\n   * @static\r\n   * @param {Object.<string,*>} message Plain object to verify\r\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n   */\r\n  GlyphImage.verify = function verify(message) {\r\n    if (typeof message !== 'object' || message === null)\r\n      return 'object expected'\r\n    if (message.letter != null && message.hasOwnProperty('letter'))\r\n      if (!$util.isString(message.letter)) return 'letter: string expected'\r\n    if (\r\n      message.adjustMetric != null &&\r\n      message.hasOwnProperty('adjustMetric')\r\n    ) {\r\n      let error = $root.Metric.verify(message.adjustMetric)\r\n      if (error) return 'adjustMetric.' + error\r\n    }\r\n    if (message.buffer != null && message.hasOwnProperty('buffer'))\r\n      if (\r\n        !(\r\n          (message.buffer && typeof message.buffer.length === 'number') ||\r\n          $util.isString(message.buffer)\r\n        )\r\n      )\r\n        return 'buffer: buffer expected'\r\n    if (message.fileName != null && message.hasOwnProperty('fileName'))\r\n      if (!$util.isString(message.fileName)) return 'fileName: string expected'\r\n    if (message.fileType != null && message.hasOwnProperty('fileType'))\r\n      if (!$util.isString(message.fileType)) return 'fileType: string expected'\r\n    if (message.selected != null && message.hasOwnProperty('selected'))\r\n      if (typeof message.selected !== 'boolean')\r\n        return 'selected: boolean expected'\r\n    if (message.kerning != null && message.hasOwnProperty('kerning')) {\r\n      if (!$util.isObject(message.kerning)) return 'kerning: object expected'\r\n      let key = Object.keys(message.kerning)\r\n      for (let i = 0; i < key.length; ++i)\r\n        if (!$util.isInteger(message.kerning[key[i]]))\r\n          return 'kerning: integer{k:string} expected'\r\n    }\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * Creates a GlyphImage message from a plain object. Also converts values to their respective internal types.\r\n   * @function fromObject\r\n   * @memberof GlyphImage\r\n   * @static\r\n   * @param {Object.<string,*>} object Plain object\r\n   * @returns {GlyphImage} GlyphImage\r\n   */\r\n  GlyphImage.fromObject = function fromObject(object) {\r\n    if (object instanceof $root.GlyphImage) return object\r\n    let message = new $root.GlyphImage()\r\n    if (object.letter != null) message.letter = String(object.letter)\r\n    if (object.adjustMetric != null) {\r\n      if (typeof object.adjustMetric !== 'object')\r\n        throw TypeError('.GlyphImage.adjustMetric: object expected')\r\n      message.adjustMetric = $root.Metric.fromObject(object.adjustMetric)\r\n    }\r\n    if (object.buffer != null)\r\n      if (typeof object.buffer === 'string')\r\n        $util.base64.decode(\r\n          object.buffer,\r\n          (message.buffer = $util.newBuffer(\r\n            $util.base64.length(object.buffer),\r\n          )),\r\n          0,\r\n        )\r\n      else if (object.buffer.length) message.buffer = object.buffer\r\n    if (object.fileName != null) message.fileName = String(object.fileName)\r\n    if (object.fileType != null) message.fileType = String(object.fileType)\r\n    if (object.selected != null) message.selected = Boolean(object.selected)\r\n    if (object.kerning) {\r\n      if (typeof object.kerning !== 'object')\r\n        throw TypeError('.GlyphImage.kerning: object expected')\r\n      message.kerning = {}\r\n      for (let keys = Object.keys(object.kerning), i = 0; i < keys.length; ++i)\r\n        message.kerning[keys[i]] = object.kerning[keys[i]] | 0\r\n    }\r\n    return message\r\n  }\r\n\r\n  /**\r\n   * Creates a plain object from a GlyphImage message. Also converts values to other types if specified.\r\n   * @function toObject\r\n   * @memberof GlyphImage\r\n   * @static\r\n   * @param {GlyphImage} message GlyphImage\r\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n   * @returns {Object.<string,*>} Plain object\r\n   */\r\n  GlyphImage.toObject = function toObject(message, options) {\r\n    if (!options) options = {}\r\n    let object = {}\r\n    if (options.objects || options.defaults) object.kerning = {}\r\n    if (options.defaults) {\r\n      object.letter = ''\r\n      object.adjustMetric = null\r\n      if (options.bytes === String) object.buffer = ''\r\n      else {\r\n        object.buffer = []\r\n        if (options.bytes !== Array)\r\n          object.buffer = $util.newBuffer(object.buffer)\r\n      }\r\n      object.fileName = ''\r\n      object.fileType = ''\r\n      object.selected = false\r\n    }\r\n    if (message.letter != null && message.hasOwnProperty('letter'))\r\n      object.letter = message.letter\r\n    if (message.adjustMetric != null && message.hasOwnProperty('adjustMetric'))\r\n      object.adjustMetric = $root.Metric.toObject(message.adjustMetric, options)\r\n    if (message.buffer != null && message.hasOwnProperty('buffer'))\r\n      object.buffer =\r\n        options.bytes === String\r\n          ? $util.base64.encode(message.buffer, 0, message.buffer.length)\r\n          : options.bytes === Array\r\n          ? Array.prototype.slice.call(message.buffer)\r\n          : message.buffer\r\n    if (message.fileName != null && message.hasOwnProperty('fileName'))\r\n      object.fileName = message.fileName\r\n    if (message.fileType != null && message.hasOwnProperty('fileType'))\r\n      object.fileType = message.fileType\r\n    if (message.selected != null && message.hasOwnProperty('selected'))\r\n      object.selected = message.selected\r\n    let keys2\r\n    if (message.kerning && (keys2 = Object.keys(message.kerning)).length) {\r\n      object.kerning = {}\r\n      for (let j = 0; j < keys2.length; ++j)\r\n        object.kerning[keys2[j]] = message.kerning[keys2[j]]\r\n    }\r\n    return object\r\n  }\r\n\r\n  /**\r\n   * Converts this GlyphImage to JSON.\r\n   * @function toJSON\r\n   * @memberof GlyphImage\r\n   * @instance\r\n   * @returns {Object.<string,*>} JSON object\r\n   */\r\n  GlyphImage.prototype.toJSON = function toJSON() {\r\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\r\n  }\r\n\r\n  return GlyphImage\r\n})())\r\n\r\nexport const Layout = ($root.Layout = (() => {\r\n  /**\r\n   * Properties of a Layout.\r\n   * @exports ILayout\r\n   * @interface ILayout\r\n   * @property {number|null} [padding] Layout padding\r\n   * @property {number|null} [spacing] Layout spacing\r\n   * @property {number|null} [width] Layout width\r\n   * @property {number|null} [height] Layout height\r\n   * @property {boolean|null} [auto] Layout auto\r\n   * @property {boolean|null} [fixedSize] Layout fixedSize\r\n   */\r\n\r\n  /**\r\n   * Constructs a new Layout.\r\n   * @exports Layout\r\n   * @classdesc Represents a Layout.\r\n   * @implements ILayout\r\n   * @constructor\r\n   * @param {ILayout=} [properties] Properties to set\r\n   */\r\n  function Layout(properties) {\r\n    if (properties)\r\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\r\n  }\r\n\r\n  /**\r\n   * Layout padding.\r\n   * @member {number} padding\r\n   * @memberof Layout\r\n   * @instance\r\n   */\r\n  Layout.prototype.padding = 0\r\n\r\n  /**\r\n   * Layout spacing.\r\n   * @member {number} spacing\r\n   * @memberof Layout\r\n   * @instance\r\n   */\r\n  Layout.prototype.spacing = 0\r\n\r\n  /**\r\n   * Layout width.\r\n   * @member {number} width\r\n   * @memberof Layout\r\n   * @instance\r\n   */\r\n  Layout.prototype.width = 0\r\n\r\n  /**\r\n   * Layout height.\r\n   * @member {number} height\r\n   * @memberof Layout\r\n   * @instance\r\n   */\r\n  Layout.prototype.height = 0\r\n\r\n  /**\r\n   * Layout auto.\r\n   * @member {boolean} auto\r\n   * @memberof Layout\r\n   * @instance\r\n   */\r\n  Layout.prototype.auto = false\r\n\r\n  /**\r\n   * Layout fixedSize.\r\n   * @member {boolean} fixedSize\r\n   * @memberof Layout\r\n   * @instance\r\n   */\r\n  Layout.prototype.fixedSize = false\r\n\r\n  /**\r\n   * Creates a new Layout instance using the specified properties.\r\n   * @function create\r\n   * @memberof Layout\r\n   * @static\r\n   * @param {ILayout=} [properties] Properties to set\r\n   * @returns {Layout} Layout instance\r\n   */\r\n  Layout.create = function create(properties) {\r\n    return new Layout(properties)\r\n  }\r\n\r\n  /**\r\n   * Encodes the specified Layout message. Does not implicitly {@link Layout.verify|verify} messages.\r\n   * @function encode\r\n   * @memberof Layout\r\n   * @static\r\n   * @param {ILayout} message Layout message or plain object to encode\r\n   * @param {$protobuf.Writer} [writer] Writer to encode to\r\n   * @returns {$protobuf.Writer} Writer\r\n   */\r\n  Layout.encode = function encode(message, writer) {\r\n    if (!writer) writer = $Writer.create()\r\n    if (\r\n      message.padding != null &&\r\n      Object.hasOwnProperty.call(message, 'padding')\r\n    )\r\n      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.padding)\r\n    if (\r\n      message.spacing != null &&\r\n      Object.hasOwnProperty.call(message, 'spacing')\r\n    )\r\n      writer.uint32(/* id 2, wireType 0 =*/ 16).int32(message.spacing)\r\n    if (message.width != null && Object.hasOwnProperty.call(message, 'width'))\r\n      writer.uint32(/* id 3, wireType 0 =*/ 24).int32(message.width)\r\n    if (message.height != null && Object.hasOwnProperty.call(message, 'height'))\r\n      writer.uint32(/* id 4, wireType 0 =*/ 32).int32(message.height)\r\n    if (message.auto != null && Object.hasOwnProperty.call(message, 'auto'))\r\n      writer.uint32(/* id 5, wireType 0 =*/ 40).bool(message.auto)\r\n    if (\r\n      message.fixedSize != null &&\r\n      Object.hasOwnProperty.call(message, 'fixedSize')\r\n    )\r\n      writer.uint32(/* id 6, wireType 0 =*/ 48).bool(message.fixedSize)\r\n    return writer\r\n  }\r\n\r\n  /**\r\n   * Encodes the specified Layout message, length delimited. Does not implicitly {@link Layout.verify|verify} messages.\r\n   * @function encodeDelimited\r\n   * @memberof Layout\r\n   * @static\r\n   * @param {ILayout} message Layout message or plain object to encode\r\n   * @param {$protobuf.Writer} [writer] Writer to encode to\r\n   * @returns {$protobuf.Writer} Writer\r\n   */\r\n  Layout.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.encode(message, writer).ldelim()\r\n  }\r\n\r\n  /**\r\n   * Decodes a Layout message from the specified reader or buffer.\r\n   * @function decode\r\n   * @memberof Layout\r\n   * @static\r\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n   * @param {number} [length] Message length if known beforehand\r\n   * @returns {Layout} Layout\r\n   * @throws {Error} If the payload is not a reader or valid buffer\r\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n   */\r\n  Layout.decode = function decode(reader, length) {\r\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\r\n    let end = length === undefined ? reader.len : reader.pos + length,\r\n      message = new $root.Layout()\r\n    while (reader.pos < end) {\r\n      let tag = reader.uint32()\r\n      switch (tag >>> 3) {\r\n        case 1:\r\n          message.padding = reader.int32()\r\n          break\r\n        case 2:\r\n          message.spacing = reader.int32()\r\n          break\r\n        case 3:\r\n          message.width = reader.int32()\r\n          break\r\n        case 4:\r\n          message.height = reader.int32()\r\n          break\r\n        case 5:\r\n          message.auto = reader.bool()\r\n          break\r\n        case 6:\r\n          message.fixedSize = reader.bool()\r\n          break\r\n        default:\r\n          reader.skipType(tag & 7)\r\n          break\r\n      }\r\n    }\r\n    return message\r\n  }\r\n\r\n  /**\r\n   * Decodes a Layout message from the specified reader or buffer, length delimited.\r\n   * @function decodeDelimited\r\n   * @memberof Layout\r\n   * @static\r\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n   * @returns {Layout} Layout\r\n   * @throws {Error} If the payload is not a reader or valid buffer\r\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n   */\r\n  Layout.decodeDelimited = function decodeDelimited(reader) {\r\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\r\n    return this.decode(reader, reader.uint32())\r\n  }\r\n\r\n  /**\r\n   * Verifies a Layout message.\r\n   * @function verify\r\n   * @memberof Layout\r\n   * @static\r\n   * @param {Object.<string,*>} message Plain object to verify\r\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n   */\r\n  Layout.verify = function verify(message) {\r\n    if (typeof message !== 'object' || message === null)\r\n      return 'object expected'\r\n    if (message.padding != null && message.hasOwnProperty('padding'))\r\n      if (!$util.isInteger(message.padding)) return 'padding: integer expected'\r\n    if (message.spacing != null && message.hasOwnProperty('spacing'))\r\n      if (!$util.isInteger(message.spacing)) return 'spacing: integer expected'\r\n    if (message.width != null && message.hasOwnProperty('width'))\r\n      if (!$util.isInteger(message.width)) return 'width: integer expected'\r\n    if (message.height != null && message.hasOwnProperty('height'))\r\n      if (!$util.isInteger(message.height)) return 'height: integer expected'\r\n    if (message.auto != null && message.hasOwnProperty('auto'))\r\n      if (typeof message.auto !== 'boolean') return 'auto: boolean expected'\r\n    if (message.fixedSize != null && message.hasOwnProperty('fixedSize'))\r\n      if (typeof message.fixedSize !== 'boolean')\r\n        return 'fixedSize: boolean expected'\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * Creates a Layout message from a plain object. Also converts values to their respective internal types.\r\n   * @function fromObject\r\n   * @memberof Layout\r\n   * @static\r\n   * @param {Object.<string,*>} object Plain object\r\n   * @returns {Layout} Layout\r\n   */\r\n  Layout.fromObject = function fromObject(object) {\r\n    if (object instanceof $root.Layout) return object\r\n    let message = new $root.Layout()\r\n    if (object.padding != null) message.padding = object.padding | 0\r\n    if (object.spacing != null) message.spacing = object.spacing | 0\r\n    if (object.width != null) message.width = object.width | 0\r\n    if (object.height != null) message.height = object.height | 0\r\n    if (object.auto != null) message.auto = Boolean(object.auto)\r\n    if (object.fixedSize != null) message.fixedSize = Boolean(object.fixedSize)\r\n    return message\r\n  }\r\n\r\n  /**\r\n   * Creates a plain object from a Layout message. Also converts values to other types if specified.\r\n   * @function toObject\r\n   * @memberof Layout\r\n   * @static\r\n   * @param {Layout} message Layout\r\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n   * @returns {Object.<string,*>} Plain object\r\n   */\r\n  Layout.toObject = function toObject(message, options) {\r\n    if (!options) options = {}\r\n    let object = {}\r\n    if (options.defaults) {\r\n      object.padding = 0\r\n      object.spacing = 0\r\n      object.width = 0\r\n      object.height = 0\r\n      object.auto = false\r\n      object.fixedSize = false\r\n    }\r\n    if (message.padding != null && message.hasOwnProperty('padding'))\r\n      object.padding = message.padding\r\n    if (message.spacing != null && message.hasOwnProperty('spacing'))\r\n      object.spacing = message.spacing\r\n    if (message.width != null && message.hasOwnProperty('width'))\r\n      object.width = message.width\r\n    if (message.height != null && message.hasOwnProperty('height'))\r\n      object.height = message.height\r\n    if (message.auto != null && message.hasOwnProperty('auto'))\r\n      object.auto = message.auto\r\n    if (message.fixedSize != null && message.hasOwnProperty('fixedSize'))\r\n      object.fixedSize = message.fixedSize\r\n    return object\r\n  }\r\n\r\n  /**\r\n   * Converts this Layout to JSON.\r\n   * @function toJSON\r\n   * @memberof Layout\r\n   * @instance\r\n   * @returns {Object.<string,*>} JSON object\r\n   */\r\n  Layout.prototype.toJSON = function toJSON() {\r\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\r\n  }\r\n\r\n  return Layout\r\n})())\r\n\r\nexport const Shadow = ($root.Shadow = (() => {\r\n  /**\r\n   * Properties of a Shadow.\r\n   * @exports IShadow\r\n   * @interface IShadow\r\n   * @property {string|null} [color] Shadow color\r\n   * @property {number|null} [blur] Shadow blur\r\n   * @property {number|null} [offsetX] Shadow offsetX\r\n   * @property {number|null} [offsetY] Shadow offsetY\r\n   */\r\n\r\n  /**\r\n   * Constructs a new Shadow.\r\n   * @exports Shadow\r\n   * @classdesc Represents a Shadow.\r\n   * @implements IShadow\r\n   * @constructor\r\n   * @param {IShadow=} [properties] Properties to set\r\n   */\r\n  function Shadow(properties) {\r\n    if (properties)\r\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\r\n  }\r\n\r\n  /**\r\n   * Shadow color.\r\n   * @member {string} color\r\n   * @memberof Shadow\r\n   * @instance\r\n   */\r\n  Shadow.prototype.color = ''\r\n\r\n  /**\r\n   * Shadow blur.\r\n   * @member {number} blur\r\n   * @memberof Shadow\r\n   * @instance\r\n   */\r\n  Shadow.prototype.blur = 0\r\n\r\n  /**\r\n   * Shadow offsetX.\r\n   * @member {number} offsetX\r\n   * @memberof Shadow\r\n   * @instance\r\n   */\r\n  Shadow.prototype.offsetX = 0\r\n\r\n  /**\r\n   * Shadow offsetY.\r\n   * @member {number} offsetY\r\n   * @memberof Shadow\r\n   * @instance\r\n   */\r\n  Shadow.prototype.offsetY = 0\r\n\r\n  /**\r\n   * Creates a new Shadow instance using the specified properties.\r\n   * @function create\r\n   * @memberof Shadow\r\n   * @static\r\n   * @param {IShadow=} [properties] Properties to set\r\n   * @returns {Shadow} Shadow instance\r\n   */\r\n  Shadow.create = function create(properties) {\r\n    return new Shadow(properties)\r\n  }\r\n\r\n  /**\r\n   * Encodes the specified Shadow message. Does not implicitly {@link Shadow.verify|verify} messages.\r\n   * @function encode\r\n   * @memberof Shadow\r\n   * @static\r\n   * @param {IShadow} message Shadow message or plain object to encode\r\n   * @param {$protobuf.Writer} [writer] Writer to encode to\r\n   * @returns {$protobuf.Writer} Writer\r\n   */\r\n  Shadow.encode = function encode(message, writer) {\r\n    if (!writer) writer = $Writer.create()\r\n    if (message.color != null && Object.hasOwnProperty.call(message, 'color'))\r\n      writer.uint32(/* id 1, wireType 2 =*/ 10).string(message.color)\r\n    if (message.blur != null && Object.hasOwnProperty.call(message, 'blur'))\r\n      writer.uint32(/* id 2, wireType 0 =*/ 16).int32(message.blur)\r\n    if (\r\n      message.offsetX != null &&\r\n      Object.hasOwnProperty.call(message, 'offsetX')\r\n    )\r\n      writer.uint32(/* id 3, wireType 0 =*/ 24).sint32(message.offsetX)\r\n    if (\r\n      message.offsetY != null &&\r\n      Object.hasOwnProperty.call(message, 'offsetY')\r\n    )\r\n      writer.uint32(/* id 4, wireType 0 =*/ 32).sint32(message.offsetY)\r\n    return writer\r\n  }\r\n\r\n  /**\r\n   * Encodes the specified Shadow message, length delimited. Does not implicitly {@link Shadow.verify|verify} messages.\r\n   * @function encodeDelimited\r\n   * @memberof Shadow\r\n   * @static\r\n   * @param {IShadow} message Shadow message or plain object to encode\r\n   * @param {$protobuf.Writer} [writer] Writer to encode to\r\n   * @returns {$protobuf.Writer} Writer\r\n   */\r\n  Shadow.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.encode(message, writer).ldelim()\r\n  }\r\n\r\n  /**\r\n   * Decodes a Shadow message from the specified reader or buffer.\r\n   * @function decode\r\n   * @memberof Shadow\r\n   * @static\r\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n   * @param {number} [length] Message length if known beforehand\r\n   * @returns {Shadow} Shadow\r\n   * @throws {Error} If the payload is not a reader or valid buffer\r\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n   */\r\n  Shadow.decode = function decode(reader, length) {\r\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\r\n    let end = length === undefined ? reader.len : reader.pos + length,\r\n      message = new $root.Shadow()\r\n    while (reader.pos < end) {\r\n      let tag = reader.uint32()\r\n      switch (tag >>> 3) {\r\n        case 1:\r\n          message.color = reader.string()\r\n          break\r\n        case 2:\r\n          message.blur = reader.int32()\r\n          break\r\n        case 3:\r\n          message.offsetX = reader.sint32()\r\n          break\r\n        case 4:\r\n          message.offsetY = reader.sint32()\r\n          break\r\n        default:\r\n          reader.skipType(tag & 7)\r\n          break\r\n      }\r\n    }\r\n    return message\r\n  }\r\n\r\n  /**\r\n   * Decodes a Shadow message from the specified reader or buffer, length delimited.\r\n   * @function decodeDelimited\r\n   * @memberof Shadow\r\n   * @static\r\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n   * @returns {Shadow} Shadow\r\n   * @throws {Error} If the payload is not a reader or valid buffer\r\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n   */\r\n  Shadow.decodeDelimited = function decodeDelimited(reader) {\r\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\r\n    return this.decode(reader, reader.uint32())\r\n  }\r\n\r\n  /**\r\n   * Verifies a Shadow message.\r\n   * @function verify\r\n   * @memberof Shadow\r\n   * @static\r\n   * @param {Object.<string,*>} message Plain object to verify\r\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n   */\r\n  Shadow.verify = function verify(message) {\r\n    if (typeof message !== 'object' || message === null)\r\n      return 'object expected'\r\n    if (message.color != null && message.hasOwnProperty('color'))\r\n      if (!$util.isString(message.color)) return 'color: string expected'\r\n    if (message.blur != null && message.hasOwnProperty('blur'))\r\n      if (!$util.isInteger(message.blur)) return 'blur: integer expected'\r\n    if (message.offsetX != null && message.hasOwnProperty('offsetX'))\r\n      if (!$util.isInteger(message.offsetX)) return 'offsetX: integer expected'\r\n    if (message.offsetY != null && message.hasOwnProperty('offsetY'))\r\n      if (!$util.isInteger(message.offsetY)) return 'offsetY: integer expected'\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * Creates a Shadow message from a plain object. Also converts values to their respective internal types.\r\n   * @function fromObject\r\n   * @memberof Shadow\r\n   * @static\r\n   * @param {Object.<string,*>} object Plain object\r\n   * @returns {Shadow} Shadow\r\n   */\r\n  Shadow.fromObject = function fromObject(object) {\r\n    if (object instanceof $root.Shadow) return object\r\n    let message = new $root.Shadow()\r\n    if (object.color != null) message.color = String(object.color)\r\n    if (object.blur != null) message.blur = object.blur | 0\r\n    if (object.offsetX != null) message.offsetX = object.offsetX | 0\r\n    if (object.offsetY != null) message.offsetY = object.offsetY | 0\r\n    return message\r\n  }\r\n\r\n  /**\r\n   * Creates a plain object from a Shadow message. Also converts values to other types if specified.\r\n   * @function toObject\r\n   * @memberof Shadow\r\n   * @static\r\n   * @param {Shadow} message Shadow\r\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n   * @returns {Object.<string,*>} Plain object\r\n   */\r\n  Shadow.toObject = function toObject(message, options) {\r\n    if (!options) options = {}\r\n    let object = {}\r\n    if (options.defaults) {\r\n      object.color = ''\r\n      object.blur = 0\r\n      object.offsetX = 0\r\n      object.offsetY = 0\r\n    }\r\n    if (message.color != null && message.hasOwnProperty('color'))\r\n      object.color = message.color\r\n    if (message.blur != null && message.hasOwnProperty('blur'))\r\n      object.blur = message.blur\r\n    if (message.offsetX != null && message.hasOwnProperty('offsetX'))\r\n      object.offsetX = message.offsetX\r\n    if (message.offsetY != null && message.hasOwnProperty('offsetY'))\r\n      object.offsetY = message.offsetY\r\n    return object\r\n  }\r\n\r\n  /**\r\n   * Converts this Shadow to JSON.\r\n   * @function toJSON\r\n   * @memberof Shadow\r\n   * @instance\r\n   * @returns {Object.<string,*>} JSON object\r\n   */\r\n  Shadow.prototype.toJSON = function toJSON() {\r\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\r\n  }\r\n\r\n  return Shadow\r\n})())\r\n\r\nexport const Style = ($root.Style = (() => {\r\n  /**\r\n   * Properties of a Style.\r\n   * @exports IStyle\r\n   * @interface IStyle\r\n   * @property {IFont|null} [font] Style font\r\n   * @property {IFill|null} [fill] Style fill\r\n   * @property {boolean|null} [useStroke] Style useStroke\r\n   * @property {IFill|null} [stroke] Style stroke\r\n   * @property {boolean|null} [useShadow] Style useShadow\r\n   * @property {IShadow|null} [shadow] Style shadow\r\n   * @property {string|null} [bgColor] Style bgColor\r\n   */\r\n\r\n  /**\r\n   * Constructs a new Style.\r\n   * @exports Style\r\n   * @classdesc Represents a Style.\r\n   * @implements IStyle\r\n   * @constructor\r\n   * @param {IStyle=} [properties] Properties to set\r\n   */\r\n  function Style(properties) {\r\n    if (properties)\r\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\r\n  }\r\n\r\n  /**\r\n   * Style font.\r\n   * @member {IFont|null|undefined} font\r\n   * @memberof Style\r\n   * @instance\r\n   */\r\n  Style.prototype.font = null\r\n\r\n  /**\r\n   * Style fill.\r\n   * @member {IFill|null|undefined} fill\r\n   * @memberof Style\r\n   * @instance\r\n   */\r\n  Style.prototype.fill = null\r\n\r\n  /**\r\n   * Style useStroke.\r\n   * @member {boolean} useStroke\r\n   * @memberof Style\r\n   * @instance\r\n   */\r\n  Style.prototype.useStroke = false\r\n\r\n  /**\r\n   * Style stroke.\r\n   * @member {IFill|null|undefined} stroke\r\n   * @memberof Style\r\n   * @instance\r\n   */\r\n  Style.prototype.stroke = null\r\n\r\n  /**\r\n   * Style useShadow.\r\n   * @member {boolean} useShadow\r\n   * @memberof Style\r\n   * @instance\r\n   */\r\n  Style.prototype.useShadow = false\r\n\r\n  /**\r\n   * Style shadow.\r\n   * @member {IShadow|null|undefined} shadow\r\n   * @memberof Style\r\n   * @instance\r\n   */\r\n  Style.prototype.shadow = null\r\n\r\n  /**\r\n   * Style bgColor.\r\n   * @member {string} bgColor\r\n   * @memberof Style\r\n   * @instance\r\n   */\r\n  Style.prototype.bgColor = ''\r\n\r\n  /**\r\n   * Creates a new Style instance using the specified properties.\r\n   * @function create\r\n   * @memberof Style\r\n   * @static\r\n   * @param {IStyle=} [properties] Properties to set\r\n   * @returns {Style} Style instance\r\n   */\r\n  Style.create = function create(properties) {\r\n    return new Style(properties)\r\n  }\r\n\r\n  /**\r\n   * Encodes the specified Style message. Does not implicitly {@link Style.verify|verify} messages.\r\n   * @function encode\r\n   * @memberof Style\r\n   * @static\r\n   * @param {IStyle} message Style message or plain object to encode\r\n   * @param {$protobuf.Writer} [writer] Writer to encode to\r\n   * @returns {$protobuf.Writer} Writer\r\n   */\r\n  Style.encode = function encode(message, writer) {\r\n    if (!writer) writer = $Writer.create()\r\n    if (message.font != null && Object.hasOwnProperty.call(message, 'font'))\r\n      $root.Font.encode(\r\n        message.font,\r\n        writer.uint32(/* id 1, wireType 2 =*/ 10).fork(),\r\n      ).ldelim()\r\n    if (message.fill != null && Object.hasOwnProperty.call(message, 'fill'))\r\n      $root.Fill.encode(\r\n        message.fill,\r\n        writer.uint32(/* id 2, wireType 2 =*/ 18).fork(),\r\n      ).ldelim()\r\n    if (\r\n      message.useStroke != null &&\r\n      Object.hasOwnProperty.call(message, 'useStroke')\r\n    )\r\n      writer.uint32(/* id 3, wireType 0 =*/ 24).bool(message.useStroke)\r\n    if (message.stroke != null && Object.hasOwnProperty.call(message, 'stroke'))\r\n      $root.Fill.encode(\r\n        message.stroke,\r\n        writer.uint32(/* id 4, wireType 2 =*/ 34).fork(),\r\n      ).ldelim()\r\n    if (\r\n      message.useShadow != null &&\r\n      Object.hasOwnProperty.call(message, 'useShadow')\r\n    )\r\n      writer.uint32(/* id 5, wireType 0 =*/ 40).bool(message.useShadow)\r\n    if (message.shadow != null && Object.hasOwnProperty.call(message, 'shadow'))\r\n      $root.Shadow.encode(\r\n        message.shadow,\r\n        writer.uint32(/* id 6, wireType 2 =*/ 50).fork(),\r\n      ).ldelim()\r\n    if (\r\n      message.bgColor != null &&\r\n      Object.hasOwnProperty.call(message, 'bgColor')\r\n    )\r\n      writer.uint32(/* id 7, wireType 2 =*/ 58).string(message.bgColor)\r\n    return writer\r\n  }\r\n\r\n  /**\r\n   * Encodes the specified Style message, length delimited. Does not implicitly {@link Style.verify|verify} messages.\r\n   * @function encodeDelimited\r\n   * @memberof Style\r\n   * @static\r\n   * @param {IStyle} message Style message or plain object to encode\r\n   * @param {$protobuf.Writer} [writer] Writer to encode to\r\n   * @returns {$protobuf.Writer} Writer\r\n   */\r\n  Style.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.encode(message, writer).ldelim()\r\n  }\r\n\r\n  /**\r\n   * Decodes a Style message from the specified reader or buffer.\r\n   * @function decode\r\n   * @memberof Style\r\n   * @static\r\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n   * @param {number} [length] Message length if known beforehand\r\n   * @returns {Style} Style\r\n   * @throws {Error} If the payload is not a reader or valid buffer\r\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n   */\r\n  Style.decode = function decode(reader, length) {\r\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\r\n    let end = length === undefined ? reader.len : reader.pos + length,\r\n      message = new $root.Style()\r\n    while (reader.pos < end) {\r\n      let tag = reader.uint32()\r\n      switch (tag >>> 3) {\r\n        case 1:\r\n          message.font = $root.Font.decode(reader, reader.uint32())\r\n          break\r\n        case 2:\r\n          message.fill = $root.Fill.decode(reader, reader.uint32())\r\n          break\r\n        case 3:\r\n          message.useStroke = reader.bool()\r\n          break\r\n        case 4:\r\n          message.stroke = $root.Fill.decode(reader, reader.uint32())\r\n          break\r\n        case 5:\r\n          message.useShadow = reader.bool()\r\n          break\r\n        case 6:\r\n          message.shadow = $root.Shadow.decode(reader, reader.uint32())\r\n          break\r\n        case 7:\r\n          message.bgColor = reader.string()\r\n          break\r\n        default:\r\n          reader.skipType(tag & 7)\r\n          break\r\n      }\r\n    }\r\n    return message\r\n  }\r\n\r\n  /**\r\n   * Decodes a Style message from the specified reader or buffer, length delimited.\r\n   * @function decodeDelimited\r\n   * @memberof Style\r\n   * @static\r\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n   * @returns {Style} Style\r\n   * @throws {Error} If the payload is not a reader or valid buffer\r\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n   */\r\n  Style.decodeDelimited = function decodeDelimited(reader) {\r\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\r\n    return this.decode(reader, reader.uint32())\r\n  }\r\n\r\n  /**\r\n   * Verifies a Style message.\r\n   * @function verify\r\n   * @memberof Style\r\n   * @static\r\n   * @param {Object.<string,*>} message Plain object to verify\r\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n   */\r\n  Style.verify = function verify(message) {\r\n    if (typeof message !== 'object' || message === null)\r\n      return 'object expected'\r\n    if (message.font != null && message.hasOwnProperty('font')) {\r\n      let error = $root.Font.verify(message.font)\r\n      if (error) return 'font.' + error\r\n    }\r\n    if (message.fill != null && message.hasOwnProperty('fill')) {\r\n      let error = $root.Fill.verify(message.fill)\r\n      if (error) return 'fill.' + error\r\n    }\r\n    if (message.useStroke != null && message.hasOwnProperty('useStroke'))\r\n      if (typeof message.useStroke !== 'boolean')\r\n        return 'useStroke: boolean expected'\r\n    if (message.stroke != null && message.hasOwnProperty('stroke')) {\r\n      let error = $root.Fill.verify(message.stroke)\r\n      if (error) return 'stroke.' + error\r\n    }\r\n    if (message.useShadow != null && message.hasOwnProperty('useShadow'))\r\n      if (typeof message.useShadow !== 'boolean')\r\n        return 'useShadow: boolean expected'\r\n    if (message.shadow != null && message.hasOwnProperty('shadow')) {\r\n      let error = $root.Shadow.verify(message.shadow)\r\n      if (error) return 'shadow.' + error\r\n    }\r\n    if (message.bgColor != null && message.hasOwnProperty('bgColor'))\r\n      if (!$util.isString(message.bgColor)) return 'bgColor: string expected'\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * Creates a Style message from a plain object. Also converts values to their respective internal types.\r\n   * @function fromObject\r\n   * @memberof Style\r\n   * @static\r\n   * @param {Object.<string,*>} object Plain object\r\n   * @returns {Style} Style\r\n   */\r\n  Style.fromObject = function fromObject(object) {\r\n    if (object instanceof $root.Style) return object\r\n    let message = new $root.Style()\r\n    if (object.font != null) {\r\n      if (typeof object.font !== 'object')\r\n        throw TypeError('.Style.font: object expected')\r\n      message.font = $root.Font.fromObject(object.font)\r\n    }\r\n    if (object.fill != null) {\r\n      if (typeof object.fill !== 'object')\r\n        throw TypeError('.Style.fill: object expected')\r\n      message.fill = $root.Fill.fromObject(object.fill)\r\n    }\r\n    if (object.useStroke != null) message.useStroke = Boolean(object.useStroke)\r\n    if (object.stroke != null) {\r\n      if (typeof object.stroke !== 'object')\r\n        throw TypeError('.Style.stroke: object expected')\r\n      message.stroke = $root.Fill.fromObject(object.stroke)\r\n    }\r\n    if (object.useShadow != null) message.useShadow = Boolean(object.useShadow)\r\n    if (object.shadow != null) {\r\n      if (typeof object.shadow !== 'object')\r\n        throw TypeError('.Style.shadow: object expected')\r\n      message.shadow = $root.Shadow.fromObject(object.shadow)\r\n    }\r\n    if (object.bgColor != null) message.bgColor = String(object.bgColor)\r\n    return message\r\n  }\r\n\r\n  /**\r\n   * Creates a plain object from a Style message. Also converts values to other types if specified.\r\n   * @function toObject\r\n   * @memberof Style\r\n   * @static\r\n   * @param {Style} message Style\r\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n   * @returns {Object.<string,*>} Plain object\r\n   */\r\n  Style.toObject = function toObject(message, options) {\r\n    if (!options) options = {}\r\n    let object = {}\r\n    if (options.defaults) {\r\n      object.font = null\r\n      object.fill = null\r\n      object.useStroke = false\r\n      object.stroke = null\r\n      object.useShadow = false\r\n      object.shadow = null\r\n      object.bgColor = ''\r\n    }\r\n    if (message.font != null && message.hasOwnProperty('font'))\r\n      object.font = $root.Font.toObject(message.font, options)\r\n    if (message.fill != null && message.hasOwnProperty('fill'))\r\n      object.fill = $root.Fill.toObject(message.fill, options)\r\n    if (message.useStroke != null && message.hasOwnProperty('useStroke'))\r\n      object.useStroke = message.useStroke\r\n    if (message.stroke != null && message.hasOwnProperty('stroke'))\r\n      object.stroke = $root.Fill.toObject(message.stroke, options)\r\n    if (message.useShadow != null && message.hasOwnProperty('useShadow'))\r\n      object.useShadow = message.useShadow\r\n    if (message.shadow != null && message.hasOwnProperty('shadow'))\r\n      object.shadow = $root.Shadow.toObject(message.shadow, options)\r\n    if (message.bgColor != null && message.hasOwnProperty('bgColor'))\r\n      object.bgColor = message.bgColor\r\n    return object\r\n  }\r\n\r\n  /**\r\n   * Converts this Style to JSON.\r\n   * @function toJSON\r\n   * @memberof Style\r\n   * @instance\r\n   * @returns {Object.<string,*>} JSON object\r\n   */\r\n  Style.prototype.toJSON = function toJSON() {\r\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\r\n  }\r\n\r\n  return Style\r\n})())\r\n\r\nexport const Ui = ($root.Ui = (() => {\r\n  /**\r\n   * Properties of an Ui.\r\n   * @exports IUi\r\n   * @interface IUi\r\n   * @property {string|null} [previewText] Ui previewText\r\n   */\r\n\r\n  /**\r\n   * Constructs a new Ui.\r\n   * @exports Ui\r\n   * @classdesc Represents an Ui.\r\n   * @implements IUi\r\n   * @constructor\r\n   * @param {IUi=} [properties] Properties to set\r\n   */\r\n  function Ui(properties) {\r\n    if (properties)\r\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\r\n  }\r\n\r\n  /**\r\n   * Ui previewText.\r\n   * @member {string} previewText\r\n   * @memberof Ui\r\n   * @instance\r\n   */\r\n  Ui.prototype.previewText = ''\r\n\r\n  /**\r\n   * Creates a new Ui instance using the specified properties.\r\n   * @function create\r\n   * @memberof Ui\r\n   * @static\r\n   * @param {IUi=} [properties] Properties to set\r\n   * @returns {Ui} Ui instance\r\n   */\r\n  Ui.create = function create(properties) {\r\n    return new Ui(properties)\r\n  }\r\n\r\n  /**\r\n   * Encodes the specified Ui message. Does not implicitly {@link Ui.verify|verify} messages.\r\n   * @function encode\r\n   * @memberof Ui\r\n   * @static\r\n   * @param {IUi} message Ui message or plain object to encode\r\n   * @param {$protobuf.Writer} [writer] Writer to encode to\r\n   * @returns {$protobuf.Writer} Writer\r\n   */\r\n  Ui.encode = function encode(message, writer) {\r\n    if (!writer) writer = $Writer.create()\r\n    if (\r\n      message.previewText != null &&\r\n      Object.hasOwnProperty.call(message, 'previewText')\r\n    )\r\n      writer.uint32(/* id 1, wireType 2 =*/ 10).string(message.previewText)\r\n    return writer\r\n  }\r\n\r\n  /**\r\n   * Encodes the specified Ui message, length delimited. Does not implicitly {@link Ui.verify|verify} messages.\r\n   * @function encodeDelimited\r\n   * @memberof Ui\r\n   * @static\r\n   * @param {IUi} message Ui message or plain object to encode\r\n   * @param {$protobuf.Writer} [writer] Writer to encode to\r\n   * @returns {$protobuf.Writer} Writer\r\n   */\r\n  Ui.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.encode(message, writer).ldelim()\r\n  }\r\n\r\n  /**\r\n   * Decodes an Ui message from the specified reader or buffer.\r\n   * @function decode\r\n   * @memberof Ui\r\n   * @static\r\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n   * @param {number} [length] Message length if known beforehand\r\n   * @returns {Ui} Ui\r\n   * @throws {Error} If the payload is not a reader or valid buffer\r\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n   */\r\n  Ui.decode = function decode(reader, length) {\r\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\r\n    let end = length === undefined ? reader.len : reader.pos + length,\r\n      message = new $root.Ui()\r\n    while (reader.pos < end) {\r\n      let tag = reader.uint32()\r\n      switch (tag >>> 3) {\r\n        case 1:\r\n          message.previewText = reader.string()\r\n          break\r\n        default:\r\n          reader.skipType(tag & 7)\r\n          break\r\n      }\r\n    }\r\n    return message\r\n  }\r\n\r\n  /**\r\n   * Decodes an Ui message from the specified reader or buffer, length delimited.\r\n   * @function decodeDelimited\r\n   * @memberof Ui\r\n   * @static\r\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n   * @returns {Ui} Ui\r\n   * @throws {Error} If the payload is not a reader or valid buffer\r\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n   */\r\n  Ui.decodeDelimited = function decodeDelimited(reader) {\r\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\r\n    return this.decode(reader, reader.uint32())\r\n  }\r\n\r\n  /**\r\n   * Verifies an Ui message.\r\n   * @function verify\r\n   * @memberof Ui\r\n   * @static\r\n   * @param {Object.<string,*>} message Plain object to verify\r\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n   */\r\n  Ui.verify = function verify(message) {\r\n    if (typeof message !== 'object' || message === null)\r\n      return 'object expected'\r\n    if (message.previewText != null && message.hasOwnProperty('previewText'))\r\n      if (!$util.isString(message.previewText))\r\n        return 'previewText: string expected'\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * Creates an Ui message from a plain object. Also converts values to their respective internal types.\r\n   * @function fromObject\r\n   * @memberof Ui\r\n   * @static\r\n   * @param {Object.<string,*>} object Plain object\r\n   * @returns {Ui} Ui\r\n   */\r\n  Ui.fromObject = function fromObject(object) {\r\n    if (object instanceof $root.Ui) return object\r\n    let message = new $root.Ui()\r\n    if (object.previewText != null)\r\n      message.previewText = String(object.previewText)\r\n    return message\r\n  }\r\n\r\n  /**\r\n   * Creates a plain object from an Ui message. Also converts values to other types if specified.\r\n   * @function toObject\r\n   * @memberof Ui\r\n   * @static\r\n   * @param {Ui} message Ui\r\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n   * @returns {Object.<string,*>} Plain object\r\n   */\r\n  Ui.toObject = function toObject(message, options) {\r\n    if (!options) options = {}\r\n    let object = {}\r\n    if (options.defaults) object.previewText = ''\r\n    if (message.previewText != null && message.hasOwnProperty('previewText'))\r\n      object.previewText = message.previewText\r\n    return object\r\n  }\r\n\r\n  /**\r\n   * Converts this Ui to JSON.\r\n   * @function toJSON\r\n   * @memberof Ui\r\n   * @instance\r\n   * @returns {Object.<string,*>} JSON object\r\n   */\r\n  Ui.prototype.toJSON = function toJSON() {\r\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\r\n  }\r\n\r\n  return Ui\r\n})())\r\n\r\nexport const Project = ($root.Project = (() => {\r\n  /**\r\n   * Properties of a Project.\r\n   * @exports IProject\r\n   * @interface IProject\r\n   * @property {number|Long|null} [id] Project id\r\n   * @property {string|null} [name] Project name\r\n   * @property {string|null} [text] Project text\r\n   * @property {Object.<string,IGlyphFont>|null} [glyphs] Project glyphs\r\n   * @property {Array.<IGlyphImage>|null} [glyphImages] Project glyphImages\r\n   * @property {IStyle|null} [style] Project style\r\n   * @property {ILayout|null} [layout] Project layout\r\n   * @property {IMetric|null} [globalAdjustMetric] Project globalAdjustMetric\r\n   * @property {IUi|null} [ui] Project ui\r\n   */\r\n\r\n  /**\r\n   * Constructs a new Project.\r\n   * @exports Project\r\n   * @classdesc Represents a Project.\r\n   * @implements IProject\r\n   * @constructor\r\n   * @param {IProject=} [properties] Properties to set\r\n   */\r\n  function Project(properties) {\r\n    this.glyphs = {}\r\n    this.glyphImages = []\r\n    if (properties)\r\n      for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]]\r\n  }\r\n\r\n  /**\r\n   * Project id.\r\n   * @member {number|Long} id\r\n   * @memberof Project\r\n   * @instance\r\n   */\r\n  Project.prototype.id = $util.Long ? $util.Long.fromBits(0, 0, false) : 0\r\n\r\n  /**\r\n   * Project name.\r\n   * @member {string} name\r\n   * @memberof Project\r\n   * @instance\r\n   */\r\n  Project.prototype.name = ''\r\n\r\n  /**\r\n   * Project text.\r\n   * @member {string} text\r\n   * @memberof Project\r\n   * @instance\r\n   */\r\n  Project.prototype.text = ''\r\n\r\n  /**\r\n   * Project glyphs.\r\n   * @member {Object.<string,IGlyphFont>} glyphs\r\n   * @memberof Project\r\n   * @instance\r\n   */\r\n  Project.prototype.glyphs = $util.emptyObject\r\n\r\n  /**\r\n   * Project glyphImages.\r\n   * @member {Array.<IGlyphImage>} glyphImages\r\n   * @memberof Project\r\n   * @instance\r\n   */\r\n  Project.prototype.glyphImages = $util.emptyArray\r\n\r\n  /**\r\n   * Project style.\r\n   * @member {IStyle|null|undefined} style\r\n   * @memberof Project\r\n   * @instance\r\n   */\r\n  Project.prototype.style = null\r\n\r\n  /**\r\n   * Project layout.\r\n   * @member {ILayout|null|undefined} layout\r\n   * @memberof Project\r\n   * @instance\r\n   */\r\n  Project.prototype.layout = null\r\n\r\n  /**\r\n   * Project globalAdjustMetric.\r\n   * @member {IMetric|null|undefined} globalAdjustMetric\r\n   * @memberof Project\r\n   * @instance\r\n   */\r\n  Project.prototype.globalAdjustMetric = null\r\n\r\n  /**\r\n   * Project ui.\r\n   * @member {IUi|null|undefined} ui\r\n   * @memberof Project\r\n   * @instance\r\n   */\r\n  Project.prototype.ui = null\r\n\r\n  /**\r\n   * Creates a new Project instance using the specified properties.\r\n   * @function create\r\n   * @memberof Project\r\n   * @static\r\n   * @param {IProject=} [properties] Properties to set\r\n   * @returns {Project} Project instance\r\n   */\r\n  Project.create = function create(properties) {\r\n    return new Project(properties)\r\n  }\r\n\r\n  /**\r\n   * Encodes the specified Project message. Does not implicitly {@link Project.verify|verify} messages.\r\n   * @function encode\r\n   * @memberof Project\r\n   * @static\r\n   * @param {IProject} message Project message or plain object to encode\r\n   * @param {$protobuf.Writer} [writer] Writer to encode to\r\n   * @returns {$protobuf.Writer} Writer\r\n   */\r\n  Project.encode = function encode(message, writer) {\r\n    if (!writer) writer = $Writer.create()\r\n    if (message.id != null && Object.hasOwnProperty.call(message, 'id'))\r\n      writer.uint32(/* id 1, wireType 0 =*/ 8).int64(message.id)\r\n    if (message.name != null && Object.hasOwnProperty.call(message, 'name'))\r\n      writer.uint32(/* id 2, wireType 2 =*/ 18).string(message.name)\r\n    if (message.text != null && Object.hasOwnProperty.call(message, 'text'))\r\n      writer.uint32(/* id 3, wireType 2 =*/ 26).string(message.text)\r\n    if (message.glyphs != null && Object.hasOwnProperty.call(message, 'glyphs'))\r\n      for (\r\n        let keys = Object.keys(message.glyphs), i = 0;\r\n        i < keys.length;\r\n        ++i\r\n      ) {\r\n        writer\r\n          .uint32(/* id 4, wireType 2 =*/ 34)\r\n          .fork()\r\n          .uint32(/* id 1, wireType 2 =*/ 10)\r\n          .string(keys[i])\r\n        $root.GlyphFont.encode(\r\n          message.glyphs[keys[i]],\r\n          writer.uint32(/* id 2, wireType 2 =*/ 18).fork(),\r\n        )\r\n          .ldelim()\r\n          .ldelim()\r\n      }\r\n    if (message.glyphImages != null && message.glyphImages.length)\r\n      for (let i = 0; i < message.glyphImages.length; ++i)\r\n        $root.GlyphImage.encode(\r\n          message.glyphImages[i],\r\n          writer.uint32(/* id 5, wireType 2 =*/ 42).fork(),\r\n        ).ldelim()\r\n    if (message.style != null && Object.hasOwnProperty.call(message, 'style'))\r\n      $root.Style.encode(\r\n        message.style,\r\n        writer.uint32(/* id 6, wireType 2 =*/ 50).fork(),\r\n      ).ldelim()\r\n    if (message.layout != null && Object.hasOwnProperty.call(message, 'layout'))\r\n      $root.Layout.encode(\r\n        message.layout,\r\n        writer.uint32(/* id 7, wireType 2 =*/ 58).fork(),\r\n      ).ldelim()\r\n    if (\r\n      message.globalAdjustMetric != null &&\r\n      Object.hasOwnProperty.call(message, 'globalAdjustMetric')\r\n    )\r\n      $root.Metric.encode(\r\n        message.globalAdjustMetric,\r\n        writer.uint32(/* id 8, wireType 2 =*/ 66).fork(),\r\n      ).ldelim()\r\n    if (message.ui != null && Object.hasOwnProperty.call(message, 'ui'))\r\n      $root.Ui.encode(\r\n        message.ui,\r\n        writer.uint32(/* id 9, wireType 2 =*/ 74).fork(),\r\n      ).ldelim()\r\n    return writer\r\n  }\r\n\r\n  /**\r\n   * Encodes the specified Project message, length delimited. Does not implicitly {@link Project.verify|verify} messages.\r\n   * @function encodeDelimited\r\n   * @memberof Project\r\n   * @static\r\n   * @param {IProject} message Project message or plain object to encode\r\n   * @param {$protobuf.Writer} [writer] Writer to encode to\r\n   * @returns {$protobuf.Writer} Writer\r\n   */\r\n  Project.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.encode(message, writer).ldelim()\r\n  }\r\n\r\n  /**\r\n   * Decodes a Project message from the specified reader or buffer.\r\n   * @function decode\r\n   * @memberof Project\r\n   * @static\r\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n   * @param {number} [length] Message length if known beforehand\r\n   * @returns {Project} Project\r\n   * @throws {Error} If the payload is not a reader or valid buffer\r\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n   */\r\n  Project.decode = function decode(reader, length) {\r\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader)\r\n    let end = length === undefined ? reader.len : reader.pos + length,\r\n      message = new $root.Project(),\r\n      key,\r\n      value\r\n    while (reader.pos < end) {\r\n      let tag = reader.uint32()\r\n      switch (tag >>> 3) {\r\n        case 1:\r\n          message.id = reader.int64()\r\n          break\r\n        case 2:\r\n          message.name = reader.string()\r\n          break\r\n        case 3:\r\n          message.text = reader.string()\r\n          break\r\n        case 4:\r\n          if (message.glyphs === $util.emptyObject) message.glyphs = {}\r\n          let end2 = reader.uint32() + reader.pos\r\n          key = ''\r\n          value = null\r\n          while (reader.pos < end2) {\r\n            let tag2 = reader.uint32()\r\n            switch (tag2 >>> 3) {\r\n              case 1:\r\n                key = reader.string()\r\n                break\r\n              case 2:\r\n                value = $root.GlyphFont.decode(reader, reader.uint32())\r\n                break\r\n              default:\r\n                reader.skipType(tag2 & 7)\r\n                break\r\n            }\r\n          }\r\n          message.glyphs[key] = value\r\n          break\r\n        case 5:\r\n          if (!(message.glyphImages && message.glyphImages.length))\r\n            message.glyphImages = []\r\n          message.glyphImages.push(\r\n            $root.GlyphImage.decode(reader, reader.uint32()),\r\n          )\r\n          break\r\n        case 6:\r\n          message.style = $root.Style.decode(reader, reader.uint32())\r\n          break\r\n        case 7:\r\n          message.layout = $root.Layout.decode(reader, reader.uint32())\r\n          break\r\n        case 8:\r\n          message.globalAdjustMetric = $root.Metric.decode(\r\n            reader,\r\n            reader.uint32(),\r\n          )\r\n          break\r\n        case 9:\r\n          message.ui = $root.Ui.decode(reader, reader.uint32())\r\n          break\r\n        default:\r\n          reader.skipType(tag & 7)\r\n          break\r\n      }\r\n    }\r\n    return message\r\n  }\r\n\r\n  /**\r\n   * Decodes a Project message from the specified reader or buffer, length delimited.\r\n   * @function decodeDelimited\r\n   * @memberof Project\r\n   * @static\r\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n   * @returns {Project} Project\r\n   * @throws {Error} If the payload is not a reader or valid buffer\r\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n   */\r\n  Project.decodeDelimited = function decodeDelimited(reader) {\r\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader)\r\n    return this.decode(reader, reader.uint32())\r\n  }\r\n\r\n  /**\r\n   * Verifies a Project message.\r\n   * @function verify\r\n   * @memberof Project\r\n   * @static\r\n   * @param {Object.<string,*>} message Plain object to verify\r\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n   */\r\n  Project.verify = function verify(message) {\r\n    if (typeof message !== 'object' || message === null)\r\n      return 'object expected'\r\n    if (message.id != null && message.hasOwnProperty('id'))\r\n      if (\r\n        !$util.isInteger(message.id) &&\r\n        !(\r\n          message.id &&\r\n          $util.isInteger(message.id.low) &&\r\n          $util.isInteger(message.id.high)\r\n        )\r\n      )\r\n        return 'id: integer|Long expected'\r\n    if (message.name != null && message.hasOwnProperty('name'))\r\n      if (!$util.isString(message.name)) return 'name: string expected'\r\n    if (message.text != null && message.hasOwnProperty('text'))\r\n      if (!$util.isString(message.text)) return 'text: string expected'\r\n    if (message.glyphs != null && message.hasOwnProperty('glyphs')) {\r\n      if (!$util.isObject(message.glyphs)) return 'glyphs: object expected'\r\n      let key = Object.keys(message.glyphs)\r\n      for (let i = 0; i < key.length; ++i) {\r\n        let error = $root.GlyphFont.verify(message.glyphs[key[i]])\r\n        if (error) return 'glyphs.' + error\r\n      }\r\n    }\r\n    if (message.glyphImages != null && message.hasOwnProperty('glyphImages')) {\r\n      if (!Array.isArray(message.glyphImages))\r\n        return 'glyphImages: array expected'\r\n      for (let i = 0; i < message.glyphImages.length; ++i) {\r\n        let error = $root.GlyphImage.verify(message.glyphImages[i])\r\n        if (error) return 'glyphImages.' + error\r\n      }\r\n    }\r\n    if (message.style != null && message.hasOwnProperty('style')) {\r\n      let error = $root.Style.verify(message.style)\r\n      if (error) return 'style.' + error\r\n    }\r\n    if (message.layout != null && message.hasOwnProperty('layout')) {\r\n      let error = $root.Layout.verify(message.layout)\r\n      if (error) return 'layout.' + error\r\n    }\r\n    if (\r\n      message.globalAdjustMetric != null &&\r\n      message.hasOwnProperty('globalAdjustMetric')\r\n    ) {\r\n      let error = $root.Metric.verify(message.globalAdjustMetric)\r\n      if (error) return 'globalAdjustMetric.' + error\r\n    }\r\n    if (message.ui != null && message.hasOwnProperty('ui')) {\r\n      let error = $root.Ui.verify(message.ui)\r\n      if (error) return 'ui.' + error\r\n    }\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * Creates a Project message from a plain object. Also converts values to their respective internal types.\r\n   * @function fromObject\r\n   * @memberof Project\r\n   * @static\r\n   * @param {Object.<string,*>} object Plain object\r\n   * @returns {Project} Project\r\n   */\r\n  Project.fromObject = function fromObject(object) {\r\n    if (object instanceof $root.Project) return object\r\n    let message = new $root.Project()\r\n    if (object.id != null)\r\n      if ($util.Long)\r\n        (message.id = $util.Long.fromValue(object.id)).unsigned = false\r\n      else if (typeof object.id === 'string')\r\n        message.id = parseInt(object.id, 10)\r\n      else if (typeof object.id === 'number') message.id = object.id\r\n      else if (typeof object.id === 'object')\r\n        message.id = new $util.LongBits(\r\n          object.id.low >>> 0,\r\n          object.id.high >>> 0,\r\n        ).toNumber()\r\n    if (object.name != null) message.name = String(object.name)\r\n    if (object.text != null) message.text = String(object.text)\r\n    if (object.glyphs) {\r\n      if (typeof object.glyphs !== 'object')\r\n        throw TypeError('.Project.glyphs: object expected')\r\n      message.glyphs = {}\r\n      for (let keys = Object.keys(object.glyphs), i = 0; i < keys.length; ++i) {\r\n        if (typeof object.glyphs[keys[i]] !== 'object')\r\n          throw TypeError('.Project.glyphs: object expected')\r\n        message.glyphs[keys[i]] = $root.GlyphFont.fromObject(\r\n          object.glyphs[keys[i]],\r\n        )\r\n      }\r\n    }\r\n    if (object.glyphImages) {\r\n      if (!Array.isArray(object.glyphImages))\r\n        throw TypeError('.Project.glyphImages: array expected')\r\n      message.glyphImages = []\r\n      for (let i = 0; i < object.glyphImages.length; ++i) {\r\n        if (typeof object.glyphImages[i] !== 'object')\r\n          throw TypeError('.Project.glyphImages: object expected')\r\n        message.glyphImages[i] = $root.GlyphImage.fromObject(\r\n          object.glyphImages[i],\r\n        )\r\n      }\r\n    }\r\n    if (object.style != null) {\r\n      if (typeof object.style !== 'object')\r\n        throw TypeError('.Project.style: object expected')\r\n      message.style = $root.Style.fromObject(object.style)\r\n    }\r\n    if (object.layout != null) {\r\n      if (typeof object.layout !== 'object')\r\n        throw TypeError('.Project.layout: object expected')\r\n      message.layout = $root.Layout.fromObject(object.layout)\r\n    }\r\n    if (object.globalAdjustMetric != null) {\r\n      if (typeof object.globalAdjustMetric !== 'object')\r\n        throw TypeError('.Project.globalAdjustMetric: object expected')\r\n      message.globalAdjustMetric = $root.Metric.fromObject(\r\n        object.globalAdjustMetric,\r\n      )\r\n    }\r\n    if (object.ui != null) {\r\n      if (typeof object.ui !== 'object')\r\n        throw TypeError('.Project.ui: object expected')\r\n      message.ui = $root.Ui.fromObject(object.ui)\r\n    }\r\n    return message\r\n  }\r\n\r\n  /**\r\n   * Creates a plain object from a Project message. Also converts values to other types if specified.\r\n   * @function toObject\r\n   * @memberof Project\r\n   * @static\r\n   * @param {Project} message Project\r\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n   * @returns {Object.<string,*>} Plain object\r\n   */\r\n  Project.toObject = function toObject(message, options) {\r\n    if (!options) options = {}\r\n    let object = {}\r\n    if (options.arrays || options.defaults) object.glyphImages = []\r\n    if (options.objects || options.defaults) object.glyphs = {}\r\n    if (options.defaults) {\r\n      if ($util.Long) {\r\n        let long = new $util.Long(0, 0, false)\r\n        object.id =\r\n          options.longs === String\r\n            ? long.toString()\r\n            : options.longs === Number\r\n            ? long.toNumber()\r\n            : long\r\n      } else object.id = options.longs === String ? '0' : 0\r\n      object.name = ''\r\n      object.text = ''\r\n      object.style = null\r\n      object.layout = null\r\n      object.globalAdjustMetric = null\r\n      object.ui = null\r\n    }\r\n    if (message.id != null && message.hasOwnProperty('id'))\r\n      if (typeof message.id === 'number')\r\n        object.id = options.longs === String ? String(message.id) : message.id\r\n      else\r\n        object.id =\r\n          options.longs === String\r\n            ? $util.Long.prototype.toString.call(message.id)\r\n            : options.longs === Number\r\n            ? new $util.LongBits(\r\n                message.id.low >>> 0,\r\n                message.id.high >>> 0,\r\n              ).toNumber()\r\n            : message.id\r\n    if (message.name != null && message.hasOwnProperty('name'))\r\n      object.name = message.name\r\n    if (message.text != null && message.hasOwnProperty('text'))\r\n      object.text = message.text\r\n    let keys2\r\n    if (message.glyphs && (keys2 = Object.keys(message.glyphs)).length) {\r\n      object.glyphs = {}\r\n      for (let j = 0; j < keys2.length; ++j)\r\n        object.glyphs[keys2[j]] = $root.GlyphFont.toObject(\r\n          message.glyphs[keys2[j]],\r\n          options,\r\n        )\r\n    }\r\n    if (message.glyphImages && message.glyphImages.length) {\r\n      object.glyphImages = []\r\n      for (let j = 0; j < message.glyphImages.length; ++j)\r\n        object.glyphImages[j] = $root.GlyphImage.toObject(\r\n          message.glyphImages[j],\r\n          options,\r\n        )\r\n    }\r\n    if (message.style != null && message.hasOwnProperty('style'))\r\n      object.style = $root.Style.toObject(message.style, options)\r\n    if (message.layout != null && message.hasOwnProperty('layout'))\r\n      object.layout = $root.Layout.toObject(message.layout, options)\r\n    if (\r\n      message.globalAdjustMetric != null &&\r\n      message.hasOwnProperty('globalAdjustMetric')\r\n    )\r\n      object.globalAdjustMetric = $root.Metric.toObject(\r\n        message.globalAdjustMetric,\r\n        options,\r\n      )\r\n    if (message.ui != null && message.hasOwnProperty('ui'))\r\n      object.ui = $root.Ui.toObject(message.ui, options)\r\n    return object\r\n  }\r\n\r\n  /**\r\n   * Converts this Project to JSON.\r\n   * @function toJSON\r\n   * @memberof Project\r\n   * @instance\r\n   * @returns {Object.<string,*>} JSON object\r\n   */\r\n  Project.prototype.toJSON = function toJSON() {\r\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions)\r\n  }\r\n\r\n  return Project\r\n})())\r\n\r\nexport { $root as default }\r\n","export const PREFIX_STR = 'SnowBambooBMF'\r\nconst prefix = (): Uint8Array =>\r\n  new Uint8Array([...PREFIX_STR.split('').map((s) => s.charCodeAt(0)), 1, 0, 1])\r\n\r\nexport default prefix\r\n","function getVersionNumber(version: string | string[] | number[]): number {\r\n  if (typeof version === 'string') {\r\n    version = version.split('.')\r\n  }\r\n\r\n  if (!Array.isArray(version)) return 0\r\n\r\n  version = [...version] as number[]\r\n\r\n  return version\r\n    .reverse()\r\n    .reduce<number>(\r\n      (previousValue: number, currentValue: number, currentIndex: number) => {\r\n        return (\r\n          previousValue + Number(currentValue) * Math.pow(1000, currentIndex)\r\n        )\r\n      },\r\n      0,\r\n    )\r\n}\r\n\r\nexport default getVersionNumber\r\n","import { IProject } from 'src/proto'\r\n\r\ntype TransProject = (project: IProject) => IProject\r\ninterface VersionMap {\r\n  [key: number]: TransProject\r\n}\r\n\r\nfunction f10000t10001(project: IProject) {\r\n  project.layout = { ...project.layout }\r\n  project.layout.width = 1024\r\n  project.layout.height = 1024\r\n  project.layout.auto = true\r\n  project.layout.fixedSize = false\r\n  return project\r\n}\r\n\r\nconst obj: VersionMap = {\r\n  10000: f10000t10001,\r\n}\r\n\r\nconst verions: (keyof VersionMap)[] = Object.keys(obj)\r\n  .map((verion) => Number(verion))\r\n  .sort()\r\n\r\nfunction updateOldProject(project: IProject, version: number): IProject {\r\n  verions.forEach((v) => {\r\n    if (version >= v && obj[v]) obj[v](project)\r\n  })\r\n  return project\r\n}\r\n\r\nexport default updateOldProject\r\n","import { Project, Font } from 'src/store'\r\nimport proto, { IProject } from 'src/proto'\r\nimport getVersionNumber from 'src/utils/getVersionNumber'\r\nimport updateOldProject from './updateOldProject'\r\nimport prefix from './prefix'\r\n\r\nfunction toOriginBuffer(protoProject: IProject): Project {\r\n  const project = { ...protoProject }\r\n  const map = new Map()\r\n\r\n  // font\r\n  if (project?.style?.font?.font) {\r\n    project.style.font = {\r\n      ...(project.style.font as Font),\r\n      font: project.style.font.font.slice().buffer as Uint8Array,\r\n    }\r\n  }\r\n\r\n  // images\r\n  if (project?.glyphImages) {\r\n    project.glyphImages.forEach((glyphImage) => {\r\n      if (glyphImage.buffer) {\r\n        glyphImage.buffer = glyphImage.buffer.slice().buffer as Uint8Array\r\n      }\r\n      if (glyphImage.kerning) {\r\n        const imgKerning = new Map()\r\n        Object.keys(glyphImage.kerning).forEach((key) => {\r\n          if (glyphImage && glyphImage.kerning && glyphImage.kerning[key])\r\n            imgKerning.set(key, glyphImage.kerning[key] || 0)\r\n        })\r\n      }\r\n    })\r\n\r\n    // project.glyphImages = new Set(project.glyphImages)\r\n  }\r\n\r\n  if (project?.glyphs) {\r\n    Object.keys(project.glyphs).forEach((k) => {\r\n      if (project && project.glyphs && project.glyphs[k]) {\r\n        const gl = project.glyphs[k]\r\n        const glyphKerning = new Map()\r\n        if (gl && gl.kerning) {\r\n          Object.keys(gl.kerning).forEach((key) => {\r\n            if (gl.kerning) glyphKerning.set(key, gl.kerning[key] || 0)\r\n          })\r\n        }\r\n        map.set(k, { ...gl, kerning: glyphKerning })\r\n      }\r\n    })\r\n  }\r\n\r\n  // fill\r\n  if (project?.style?.fill?.patternTexture?.buffer) {\r\n    project.style.fill.patternTexture.buffer = project.style.fill.patternTexture.buffer.slice()\r\n      .buffer as Uint8Array\r\n  }\r\n\r\n  // stroke\r\n  if (project?.style?.stroke?.patternTexture?.buffer) {\r\n    project.style.stroke.patternTexture.buffer = project.style.stroke.patternTexture.buffer.slice()\r\n      .buffer as Uint8Array\r\n  }\r\n\r\n  return ({\r\n    ...project,\r\n    glyphs: map,\r\n    glyphImages: project.glyphImages || [],\r\n  } as unknown) as Project\r\n}\r\n\r\nexport default function decodeProject(buffer: ArrayBuffer): Project {\r\n  if (buffer.byteLength < 17) throw new Error('error')\r\n  const perfixBuffer = prefix()\r\n  const perfixName = perfixBuffer.slice(0, perfixBuffer.byteLength - 3)\r\n  const latestVersionBuffer = perfixBuffer.slice(perfixBuffer.byteLength - 3)\r\n  const u8 = new Uint8Array(buffer)\r\n  const filePrefix = u8.slice(0, perfixBuffer.byteLength)\r\n  const versionBuffer = filePrefix.slice(filePrefix.byteLength - 3)\r\n  let isSbf = true\r\n  perfixName.forEach((e, i) => {\r\n    if (filePrefix[i] !== e) isSbf = false\r\n  })\r\n  if (!isSbf) throw new Error('unknow file')\r\n  const currentVersion = getVersionNumber(Array.from(latestVersionBuffer))\r\n  const fileVersion = getVersionNumber(Array.from(versionBuffer))\r\n\r\n  const project = proto.Project.decode(u8.slice(filePrefix.byteLength))\r\n\r\n  if (fileVersion < currentVersion)\r\n    return toOriginBuffer(updateOldProject(project, fileVersion))\r\n\r\n  return toOriginBuffer(project)\r\n}\r\n","import React, { useState, useEffect, FunctionComponent } from 'react'\nimport hotkeys from 'hotkeys-js'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport { useProject } from 'src/store/hooks'\nimport GridInput from 'src/app/components/GridInput/GridInput'\n\ninterface ExportButtonProps {\n  className?: string\n  onSave?: (config: { ext: string; type: string }) => void\n}\n\nconst ExportButton: FunctionComponent<ExportButtonProps> = (\n  props: ExportButtonProps,\n) => {\n  const { className, onSave } = props\n  const project = useProject()\n  const { name } = project\n  const [open, setOpen] = useState(false)\n  const [val, setVal] = useState(0)\n  const [list] = useState([\n    { id: 0, ext: 'fnt', type: 'xml' },\n    { id: 1, ext: 'xml', type: 'xml' },\n    { id: 2, ext: 'fnt', type: 'text' },\n    { id: 3, ext: 'text', type: 'text' },\n  ])\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>,\n  ) => {\n    setVal(e.target.value as number)\n  }\n  const handleSave = () => {\n    if (onSave)\n      onSave({\n        ext: list[val].ext,\n        type: list[val].type,\n      })\n    handleClose()\n  }\n\n  useEffect(() => {\n    hotkeys.unbind('ctrl+shift+s,command+shift+s')\n    hotkeys('ctrl+shift+s,command+shift+s', handleClickOpen)\n    return () => {\n      hotkeys.unbind('ctrl+shift+s,command+shift+s')\n    }\n  }, [])\n\n  return (\n    <>\n      <Button\n        className={className}\n        title='Export BitmapFont (⌘⇧ + S)'\n        onClick={handleClickOpen}\n      >\n        Export\n      </Button>\n      <Dialog onClose={handleClose} open={open} fullWidth maxWidth='xs'>\n        <DialogTitle>Export Config</DialogTitle>\n        <DialogContent dividers>\n          <GridInput before='Export Type:' childrenWidth={8}>\n            <Select displayEmpty value={val} onChange={handleChange}>\n              {list.map((item) => (\n                <MenuItem value={item.id} key={item.id}>\n                  {`${name}.${item.ext} (BMFont ${item.type.toUpperCase()})`}\n                </MenuItem>\n              ))}\n            </Select>\n          </GridInput>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleSave} color='default'>\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default ExportButton\n","import React, {\n  FunctionComponent,\n  useState,\n  useEffect,\n  useCallback,\n  useRef,\n} from 'react'\nimport { toJS } from 'mobx'\nimport hotkeys from 'hotkeys-js'\nimport { observer } from 'mobx-react'\nimport Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport Snackbar from '@material-ui/core/Snackbar'\n\nimport { useWorkspace } from 'src/store/hooks'\n\nimport readFile from 'src/utils/readFile'\n\nimport outputFile from 'src/file/outputFile'\nimport saveProject from 'src/file/saveProject'\nimport decodeProject from 'src/file/decodeProject'\n\nimport ExportButton from './ExportButton'\n\nconst useStyles = makeStyles(({ zIndex, spacing }) =>\n  createStyles({\n    root: {\n      position: 'relative',\n      zIndex: zIndex.appBar,\n    },\n    appName: {\n      fontSize: '1.25rem',\n      fontWeight: 'bolder',\n      marginRight: spacing(4),\n    },\n    appNameSup: {\n      fontWeight: 'lighter',\n      fontSize: '0.5em',\n      marginLeft: '0.5rem',\n    },\n    btn: {\n      textTransform: 'none',\n    },\n  }),\n)\n\nconst TitleBar: FunctionComponent<unknown> = () => {\n  const classes = useStyles()\n  const [toast, setToast] = useState<{\n    open: boolean\n    component: React.ReactNode | null\n  }>({ open: false, component: null })\n  const worckSpace = useWorkspace()\n  const labelRef = useRef<HTMLLabelElement>(null)\n  const { addProject } = worckSpace\n  const project = worckSpace.currentProject\n  const handleLoad = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    if (e.target?.files && e.target.files[0]) {\n      readFile(e.target.files[0]).then((buffer) => {\n        try {\n          if (buffer instanceof ArrayBuffer) addProject(decodeProject(buffer))\n        } catch (err) {\n          setToast({\n            open: true,\n            component: (\n              <Box display='flex' alignItems='center'>\n                <ErrorIcon />\n                {`${err.toString()}`}\n              </Box>\n            ),\n          })\n        }\n      })\n    }\n  }\n\n  const handleNewProject = useCallback(\n    (e: { preventDefault(): void }) => {\n      e.preventDefault()\n      addProject()\n      return false\n    },\n    [addProject],\n  )\n\n  const handleSaveProject = useCallback(\n    (e: { preventDefault(): void }) => {\n      e.preventDefault()\n      saveProject(toJS(project))\n      return false\n    },\n    [project],\n  )\n\n  const handleSaveBitmapFont = useCallback(\n    (config) => {\n      outputFile(project, config)\n    },\n    [project],\n  )\n\n  const handleOpenProject = useCallback((e: { preventDefault(): void }) => {\n    e.preventDefault()\n    if (labelRef.current) labelRef.current.click()\n    return false\n  }, [])\n\n  const handleToastClose = () => {\n    setToast((t) => {\n      return {\n        ...t,\n        open: false,\n      }\n    })\n  }\n\n  useEffect(() => {\n    hotkeys.unbind('alt+n,control+n')\n    hotkeys.unbind('ctrl+s')\n    hotkeys.unbind('ctrl+o,command+o')\n    hotkeys('alt+n,control+n', handleNewProject)\n    hotkeys('ctrl+s', handleSaveProject)\n    hotkeys('ctrl+o,command+o', handleOpenProject)\n    return () => {\n      hotkeys.unbind('alt+n,control+n')\n      hotkeys.unbind('ctrl+s')\n      hotkeys.unbind('ctrl+o,command+o')\n    }\n  }, [handleNewProject, handleOpenProject, handleSaveProject])\n\n  return (\n    <Box\n      className={classes.root}\n      bgcolor='background.titleBar'\n      paddingX={4}\n      display='flex'\n      alignItems='center'\n    >\n      {/* lowing modifiers: ⇧, shift, option, ⌥, alt, ctrl, control, command, and ⌘. */}\n      <Typography variant='h1' className={classes.appName}>\n        SnowB BMF\n        <sup className={classes.appNameSup}>BETA</sup>\n      </Typography>\n      <Box flex='auto' paddingX={4}>\n        <Button\n          className={classes.btn}\n          title='New Project (ALT + N)'\n          onClick={handleNewProject}\n        >\n          New\n        </Button>\n        <Button\n          className={classes.btn}\n          title='Open Project (⌘ + O)'\n          component='label'\n          ref={labelRef}\n        >\n          Open\n          <input type='file' onChange={handleLoad} accept='.sbf' hidden />\n        </Button>\n        <Button\n          className={classes.btn}\n          title='Save Project (⌘ + S)'\n          onClick={handleSaveProject}\n        >\n          Save\n        </Button>\n        <ExportButton className={classes.btn} onSave={handleSaveBitmapFont} />\n      </Box>\n      <IconButton\n        size='small'\n        component='a'\n        href='https://github.com/SilenceLeo/snowb-bmf'\n        target='_blank'\n        title='GitHub'\n      >\n        <GitHubIcon />\n      </IconButton>\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={toast.open}\n        onClose={handleToastClose}\n        message={toast.component}\n      />\n    </Box>\n  )\n}\nexport default observer(TitleBar)\n","import { saveAs } from 'file-saver'\nimport { Project } from 'src/store'\nimport proto, { IProject } from 'src/proto'\n\nimport prefix from './prefix'\n\nexport default function saveProject(project: Project): void {\n  // font\n  if (project.style.font.font) {\n    project.style.font.font = new Uint8Array(project.style.font.font)\n  }\n\n  // images\n  project.glyphImages.forEach((glyphImage) => {\n    if (glyphImage.buffer) glyphImage.buffer = new Uint8Array(glyphImage.buffer)\n  })\n\n  // fill\n  if (project.style.fill.patternTexture.buffer) {\n    project.style.fill.patternTexture.buffer = new Uint8Array(\n      project.style.fill.patternTexture.buffer,\n    )\n  }\n\n  // stroke\n  if (project.style.stroke.patternTexture.buffer) {\n    project.style.stroke.patternTexture.buffer = new Uint8Array(\n      project.style.stroke.patternTexture.buffer,\n    )\n  }\n\n  const protoProject = proto.Project.create((project as unknown) as IProject)\n  const projectBuffer = proto.Project.encode(protoProject).finish()\n  const perfixBuffer = prefix()\n\n  const buffer = new Uint8Array(\n    perfixBuffer.byteLength + projectBuffer.byteLength,\n  )\n  buffer.set(perfixBuffer, 0)\n  buffer.set(projectBuffer, perfixBuffer.byteLength)\n\n  saveAs(new Blob([buffer]), `${project.name}.sbf`)\n}\n","import JSZip from 'jszip'\r\nimport { saveAs } from 'file-saver'\r\nimport { Project } from 'src/store'\r\nimport getXmlString from './getXmlString'\r\nimport getLuaString from './getLuaString'\r\nimport getTextString from './getTextString'\r\nimport toOutputInfo from './toOutputInfo'\r\n\r\nexport default function outputFile(\r\n  project: Project,\r\n  config = {\r\n    type: 'xml',\r\n    ext: 'fnt',\r\n  },\r\n): void {\r\n  const zip = new JSZip()\r\n  const { packCanvas, name } = project\r\n  const bmfont = toOutputInfo(project)\r\n  let text = ''\r\n\r\n  switch (config.type) {\r\n    case 'text':\r\n      text = getTextString(bmfont)\r\n      break\r\n    case 'lua':\r\n      text = getLuaString(bmfont)\r\n      break\r\n    default:\r\n      text = getXmlString(bmfont)\r\n      break\r\n  }\r\n\r\n  zip.file(`${name}.${config.ext}`, text)\r\n  if (packCanvas) {\r\n    packCanvas.toBlob((blob) => {\r\n      if (blob) zip.file(`${name}.png`, blob)\r\n      zip\r\n        .generateAsync({ type: 'blob' })\r\n        .then((content) => saveAs(content, `${name}.zip`))\r\n    })\r\n  }\r\n}\r\n","import React, { FunctionComponent } from 'react'\nimport { SketchPicker, ColorResult } from 'react-color'\nimport { useTheme, makeStyles, createStyles } from '@material-ui/core/styles'\nimport Popper, { PopperPlacementType } from '@material-ui/core/Popper'\n\nexport interface ChildrenProps {\n  open: boolean\n  color: string\n  placement: PopperPlacementType\n  anchorEl: HTMLDivElement | null\n  onChange(color: string): void\n}\n\nconst usePickerStyle = () => {\n  const theme = useTheme()\n  const { palette } = theme\n\n  if (palette.type === 'light') return {}\n\n  return {\n    default: {\n      picker: {\n        background: palette.background.titleBar,\n        shadow: theme.shadows[24],\n      },\n      alpha: {\n        background: '#fff',\n      },\n      color: {\n        background: '#fff',\n      },\n    },\n  }\n}\n\nconst useStyles = makeStyles(({ palette }) =>\n  createStyles({\n    picker: {\n      '& *': {\n        color: `${palette.text.primary} !important`,\n        borderColor: `${palette.divider} !important`,\n      },\n      '& input': {\n        background: 'none',\n        color: `${palette.text.primary} !important`,\n        boxShadow: `none !important`,\n        border: `1px solid ${palette.divider} !important`,\n      },\n    },\n  }),\n)\n\nconst WrappedSketchPicker: FunctionComponent<Partial<ChildrenProps>> = (\n  props: Partial<ChildrenProps>,\n) => {\n  const { open, anchorEl, color, onChange, placement } = props\n  const classes = useStyles()\n  const pickerStyle = usePickerStyle()\n  return (\n    <Popper\n      open={!!open}\n      anchorEl={anchorEl}\n      placement={placement || 'bottom'}\n      style={{ zIndex: 999999 }}\n    >\n      <SketchPicker\n        color={color}\n        styles={pickerStyle}\n        className={classes.picker}\n        onChange={({ rgb }: ColorResult) => {\n          if (onChange)\n            onChange(\n              `rgba(${rgb.r},${rgb.g},${rgb.b},${\n                typeof rgb.a === 'undefined' ? 1 : rgb.a\n              })`,\n            )\n        }}\n      />\n    </Popper>\n  )\n}\n\nexport default WrappedSketchPicker\n","import React, { FunctionComponent, useRef, useState } from 'react'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener'\n\nimport WrappedSketchPicker from '../WrappedSketchPicker'\n\nexport interface ColorInputProps {\n  color?: string\n  onChange?: (color: string) => void\n}\n\nconst useStyles = makeStyles(({ palette, bgPixel }: Theme) =>\n  createStyles({\n    root: {\n      overflow: 'hidden',\n    },\n    swatch: {\n      ...bgPixel,\n      display: 'inline-block',\n      cursor: 'pointer',\n    },\n    color: {\n      width: '46px',\n      height: '24px',\n      border: `5px solid ${palette.primary.main}`,\n      backgroundColor: (props: ColorInputProps) => props.color || '',\n    },\n  }),\n)\n\nconst ColorInput: FunctionComponent<ColorInputProps> = (\n  props: ColorInputProps,\n) => {\n  const { color, onChange } = props\n  const classes = useStyles(props)\n  const anchorEl = useRef(null)\n  const [open, setOpen] = useState(false)\n\n  return (\n    <ClickAwayListener\n      mouseEvent='onMouseDown'\n      onClickAway={() => setOpen(false)}\n    >\n      <div aria-hidden className={classes.swatch} ref={anchorEl}>\n        <div\n          aria-hidden\n          className={classes.color}\n          onClick={() => setOpen(!open)}\n        />\n        <WrappedSketchPicker\n          open={open}\n          anchorEl={anchorEl.current}\n          color={color || '#000000'}\n          onChange={onChange}\n        />\n      </div>\n    </ClickAwayListener>\n  )\n}\n\nexport default ColorInput\n","import React, { FunctionComponent } from 'react'\n\nimport GridInput from 'src/app/components/GridInput'\nimport ColorInput from 'src/app/components/ColorInput'\n\ninterface FormColorProps {\n  color: string\n  onChange(color: string): void\n}\n\nconst FormColor: FunctionComponent<FormColorProps> = (\n  props: FormColorProps,\n) => {\n  const { color, onChange } = props\n\n  return (\n    <GridInput before='Color:' childrenWidth={3}>\n      <ColorInput color={color} onChange={onChange} />\n    </GridInput>\n  )\n}\n\nexport default FormColor\n","import React, {\n  FunctionComponent,\n  DetailedHTMLProps,\n  HTMLAttributes,\n} from 'react'\nimport clsx from 'clsx'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\n\ninterface ColorStopPorps\n  extends DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement> {\n  left?: string | number\n  top?: string | number\n  color: string\n  isActive: boolean\n}\n\nconst useStyles = makeStyles(({ bgPixel, palette }: Theme) =>\n  createStyles({\n    root: {\n      ...bgPixel,\n      width: '12px',\n      height: '12px',\n      border: `solid ${palette.primary.main}`,\n      borderWidth: '0 1px 1px',\n      position: 'absolute',\n      cursor: 'pointer',\n      marginLeft: '-6px',\n      left: (props) => props.left || 0,\n      zIndex: (props) => (props.isActive ? 2 : 1),\n      '&:before,&:after': {\n        position: 'absolute',\n        content: '\"\"',\n        width: 0,\n        height: 0,\n        borderStyle: 'solid',\n        left: '0',\n      },\n      '&:before': {\n        top: '-6px',\n        left: '-1px',\n        borderWidth: '0 6px 6px 6px',\n        borderColor: `transparent transparent ${palette.primary.dark} transparent`,\n      },\n      '&:after': {\n        top: '-5px',\n        borderWidth: '0 5px 5px 5px',\n        borderColor: (props) => {\n          const activeColor =\n            palette.type === 'dark'\n              ? palette.common.white\n              : palette.common.black\n\n          return `transparent transparent ${\n            props.isActive ? activeColor : palette.grey[600]\n          } transparent`\n        },\n      },\n    },\n    color: {\n      width: '100%',\n      height: '100%',\n      pointerEvents: 'none',\n      backgroundColor: ({ color }: ColorStopPorps) => color || 'transparent',\n    },\n  }),\n)\n\nconst ColorStop: FunctionComponent<ColorStopPorps> = (\n  props: ColorStopPorps,\n) => {\n  const { left, top, color, isActive, className, ...divProps } = props\n  const classes = useStyles({ left, top, color, isActive })\n\n  return (\n    <div className={clsx(classes.root, className)} {...divProps}>\n      <div className={classes.color} />\n    </div>\n  )\n}\n\nexport default ColorStop\n","import React, {\n  FunctionComponent,\n  useCallback,\n  useRef,\n  MutableRefObject,\n  useState,\n  useEffect,\n} from 'react'\nimport clsx from 'clsx'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport ColorStop from './ColorStop'\n\nexport interface AddPaletteItem {\n  offset: number\n  color: string\n}\n\nexport interface PaletteItem extends AddPaletteItem {\n  id: number\n  offset: number\n  color: string\n}\n\ninterface ColorStopsHolderProps {\n  className?: string\n  palette: PaletteItem[]\n  activeId?: number\n  onAdd(offset: number): void\n  onUpdate(paletteItem: Partial<AddPaletteItem>, isDelete?: boolean): void\n  onSelect(id?: number): void\n}\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      width: '100%',\n      height: '17px',\n      position: 'relative',\n      cursor: 'crosshair',\n    },\n  }),\n)\n\nconst ColorStopsHolder: FunctionComponent<ColorStopsHolderProps> = (\n  props: ColorStopsHolderProps,\n) => {\n  const { className, palette, activeId, onAdd, onUpdate, onSelect } = props\n  const classes = useStyles(props)\n  const [width, setWidth] = useState(0)\n  const [startPoint, setStartPoint] = useState({ x: 0, y: 0, offset: 0 })\n  const [isDragging, setIsDragging] = useState(false)\n  const rootRef: MutableRefObject<HTMLDivElement | null> = useRef(null)\n\n  useEffect(() => {\n    if (rootRef.current) {\n      setWidth(rootRef.current.clientWidth)\n    }\n  }, [rootRef])\n\n  const handleAddPalette = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n  ) => {\n    const target = rootRef.current\n    if (!target || e.buttons !== 1) return\n    const { left } = target.getBoundingClientRect()\n    const offset = (e.clientX - left) / width\n    onAdd(offset)\n    setIsDragging(true)\n    setStartPoint({ x: e.clientX, y: e.clientY, offset })\n  }\n\n  const handleMouseDown = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    paletteItem: PaletteItem,\n  ) => {\n    if (e.buttons !== 1) return\n    e.preventDefault()\n    e.stopPropagation()\n    setStartPoint({ x: e.clientX, y: e.clientY, offset: paletteItem.offset })\n    setIsDragging(true)\n    onSelect(paletteItem.id)\n  }\n\n  const handleMouseMove = useCallback(\n    (e: MouseEvent) => {\n      if (!isDragging || !activeId) return\n      if (e.buttons !== 1) {\n        setIsDragging(false)\n        return\n      }\n      const idx = palette.findIndex(\n        (paletteItem) => paletteItem.id === activeId,\n      )\n\n      if (idx < 0) return\n      const newPalette = [...palette]\n\n      if (Math.abs(e.clientY - startPoint.y) > 50) {\n        onUpdate(newPalette[idx], true)\n        return\n      }\n\n      const paletteItem = newPalette[idx]\n      const offset = Math.min(\n        Math.max((e.clientX - startPoint.x) / width + startPoint.offset, 0),\n        1,\n      )\n      newPalette[idx] = { ...paletteItem, offset }\n      onUpdate({ offset })\n    },\n    [\n      activeId,\n      isDragging,\n      onUpdate,\n      palette,\n      startPoint.offset,\n      startPoint.x,\n      startPoint.y,\n      width,\n    ],\n  )\n\n  const handleMouseUp = useCallback((e: MouseEvent) => {\n    e.stopPropagation()\n    e.preventDefault()\n    setIsDragging(false)\n  }, [])\n\n  useEffect(() => {\n    if (isDragging) {\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    } else {\n      window.removeEventListener('mousemove', handleMouseMove)\n      window.removeEventListener('mouseup', handleMouseUp)\n    }\n\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove)\n      window.removeEventListener('mouseup', handleMouseUp)\n    }\n  }, [handleMouseMove, handleMouseUp, isDragging])\n\n  return (\n    <div\n      aria-hidden\n      ref={rootRef}\n      className={clsx(classes.root, className)}\n      onMouseDown={handleAddPalette}\n    >\n      {palette.map((paletteItem) => (\n        <ColorStop\n          key={paletteItem.id}\n          left={width * paletteItem.offset}\n          color={paletteItem.color}\n          isActive={paletteItem.id === activeId}\n          onMouseDown={(e) => handleMouseDown(e, paletteItem)}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default ColorStopsHolder\n","import React, { FunctionComponent, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nexport interface PaletteItem {\n  id: number | string\n  offset: number\n  color: string\n}\n\ninterface PaletteProps {\n  width?: number | string\n  height?: number | string\n  palette: PaletteItem[]\n}\n\nconst useStyles = makeStyles(({ bgPixel }) => ({\n  root: {\n    ...bgPixel,\n    width: (props: PaletteProps) => props.width || '100%',\n    height: (props: PaletteProps) => props.height || '100%',\n    border: '1px solid #ccc',\n  },\n  svg: {\n    width: '100%',\n    height: '100%',\n    verticalAlign: 'top',\n  },\n}))\n\nconst Palette: FunctionComponent<PaletteProps> = (\n  props: PaletteProps,\n): JSX.Element => {\n  const classes = useStyles(props)\n  const { palette } = props\n  const [id] = useState(`palette_${Math.random().toString().substr(2, 9)}`)\n  const sortedPalette = [...palette].sort(\n    ({ offset: offset1 }, { offset: offset2 }) => offset1 - offset2,\n  )\n\n  return (\n    <div className={classes.root}>\n      <svg className={classes.svg}>\n        <defs>\n          <linearGradient id={id} x1='0' y1='0.5' x2='1' y2='0.5'>\n            {sortedPalette.map((item) => (\n              <stop\n                key={item.id}\n                offset={item.offset}\n                style={{ stopColor: item.color }}\n              />\n            ))}\n          </linearGradient>\n        </defs>\n        <rect x='0' y='0' width='100%' height='100%' fill={`url(#${id})`} />\n      </svg>\n    </div>\n  )\n}\n\nexport default Palette\n","import React, { FunctionComponent, useRef, useState, useEffect } from 'react'\nimport Color from 'color'\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener'\n\nimport ColorStopsHolder, {\n  AddPaletteItem,\n  PaletteItem,\n} from './ColorStopsHolder'\nimport Palette from '../Palette'\n\nexport interface GradientBuilderProps {\n  children?: JSX.Element\n  palette: PaletteItem[]\n  onAdd: (addPaletteItem: AddPaletteItem) => void\n  onUpdate: (palette: PaletteItem[]) => void\n}\n\nexport interface ChildrenProps {\n  open: boolean\n  anchorEl: HTMLDivElement | null\n  color: string\n  onChange(color: string): void\n}\n\nconst GradientBuilder: FunctionComponent<GradientBuilderProps> = (\n  props: GradientBuilderProps,\n) => {\n  const { children, palette, onUpdate, onAdd } = props\n  const rootEl: React.MutableRefObject<HTMLDivElement | null> = useRef(null)\n  const [oldPalette, setOldPalette] = useState([...palette])\n  const [activeId, setActiveId] = useState<number>(0)\n  const [activeColor, setActiveColor] = useState<string>('')\n  const [isAdd, setIsAdd] = useState(false)\n\n  useEffect(() => {\n    if (isAdd) {\n      const newIds = palette.map(({ id }) => id)\n      const oldIds = oldPalette.map(({ id }) => id)\n      const diff = Array.from(new Set([...newIds, ...oldIds])).filter(\n        (id) => !oldIds.includes(id),\n      )\n      if (diff.length > 0) {\n        setActiveId(diff[0])\n      }\n      setIsAdd(() => false)\n    }\n  }, [palette, isAdd, oldPalette])\n\n  useEffect(() => {\n    setOldPalette([...palette])\n  }, [palette])\n\n  useEffect(() => {\n    if (activeId) {\n      const paletteItem = palette.find((item) => item.id === activeId)\n      if (paletteItem) {\n        setActiveColor(paletteItem.color)\n      }\n    }\n  }, [activeId, palette])\n\n  const handleAdd = (offset: number) => {\n    const list = [...palette]\n    const current = { offset, color: '#000' }\n    let left: PaletteItem | undefined\n    let right: PaletteItem | undefined\n    setActiveId(0)\n\n    list.forEach((item) => {\n      if (\n        item.offset < current.offset &&\n        (!left || left.offset < item.offset)\n      ) {\n        left = item\n      } else if (!right || right.offset > item.offset) {\n        right = item\n      }\n    })\n\n    if (left && right) {\n      const offsetSpace =\n        (current.offset - left.offset) / (right.offset - left.offset)\n      const leftColor = Color(left.color)\n      const rightColor = Color(right.color)\n\n      const r =\n        (rightColor.red() - leftColor.red()) * offsetSpace + leftColor.red()\n      const g =\n        (rightColor.green() - leftColor.green()) * offsetSpace +\n        leftColor.green()\n      const b =\n        (rightColor.blue() - leftColor.blue()) * offsetSpace + leftColor.blue()\n      const a =\n        (rightColor.alpha() - leftColor.alpha()) * offsetSpace +\n        leftColor.alpha()\n      current.color = `rgba(${Math.round(r)},${Math.round(g)},${Math.round(\n        b,\n      )},${Math.round(a)})`\n    } else if (left || right) {\n      current.color = ((left || right) as PaletteItem).color\n    }\n\n    onAdd(current)\n    setIsAdd(true)\n  }\n\n  const handleUpdate = (item: Partial<AddPaletteItem>, isDelete = false) => {\n    if (!activeId) return\n\n    const newPalette = [...palette]\n    const idx = newPalette.findIndex(\n      (paletteItem) => paletteItem.id === activeId,\n    )\n    if (isDelete) {\n      onUpdate([...newPalette.slice(0, idx), ...newPalette.slice(idx + 1)])\n      setActiveId(0)\n    } else {\n      const updateItem = { ...newPalette[idx], ...item }\n      onUpdate([\n        ...newPalette.slice(0, idx),\n        updateItem,\n        ...newPalette.slice(idx + 1),\n      ])\n    }\n  }\n\n  return (\n    <ClickAwayListener\n      mouseEvent='onMouseDown'\n      onClickAway={() => setActiveId(0)}\n    >\n      <div ref={rootEl}>\n        <Palette palette={palette} height='35px' />\n        <ColorStopsHolder\n          palette={palette}\n          activeId={activeId}\n          onAdd={handleAdd}\n          onUpdate={handleUpdate}\n          onSelect={(id) => setActiveId(id || 0)}\n        />\n        {children\n          ? React.cloneElement(children, {\n              open: !!activeId || isAdd,\n              anchorEl: rootEl.current,\n              color: activeColor,\n              onChange: (color: string) =>\n                handleUpdate({\n                  color,\n                }),\n            })\n          : null}\n      </div>\n    </ClickAwayListener>\n  )\n}\nexport default GradientBuilder\n","import React, {\n  useState,\n  useRef,\n  useEffect,\n  FunctionComponent,\n  useCallback,\n} from 'react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nexport interface AnglePickerProps {\n  width?: number\n  angle: number\n  onChange(angle: number): void\n}\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      width: (props: AnglePickerProps) =>\n        props.width ? `${props.width}px` : '36px',\n      height: (props) => (props.width ? `${props.width}px` : '36px'),\n      position: 'relative',\n      cursor: 'crosshair',\n      overflow: 'hidden',\n      borderRadius: '100%',\n      background: '#FFF',\n    },\n    point: {\n      width: '6px',\n      height: '6px',\n      borderRadius: '100%',\n      position: 'relative',\n      left: '50%',\n      top: '50%',\n      marginTop: '-2px',\n      background: '#000',\n      pointerEvents: 'none',\n      transformOrigin: `0 50%`,\n      transform: (props) =>\n        `rotate(${props.angle || 0}deg) translate(${\n          (props.width || 36) / 2 - 8\n        }px, 0)`,\n    },\n  }),\n)\n\nconst AnglePicker: FunctionComponent<AnglePickerProps> = (\n  props: AnglePickerProps,\n) => {\n  const { onChange } = props\n  const rootRef = useRef<HTMLDivElement>(null)\n  const [isDragging, setIsDragging] = useState(false)\n  const classes = useStyles(props)\n\n  const handleMouseMove = useCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent> | MouseEvent) => {\n      if (!rootRef.current) return\n\n      const { clientX, clientY } = e\n      const bounds = rootRef.current.getBoundingClientRect()\n      const radians = Math.atan2(\n        clientY - (bounds.y + bounds.height / 2),\n        clientX - (bounds.x + bounds.width / 2),\n      )\n      onChange(Math.round(radians * (180 / Math.PI)))\n    },\n    [onChange],\n  )\n\n  const handleMouseUp = useCallback((e: MouseEvent) => {\n    e.stopPropagation()\n    e.preventDefault()\n    setIsDragging(false)\n  }, [])\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!rootRef.current) return\n    setIsDragging(true)\n    handleMouseMove(e)\n  }\n\n  useEffect(() => {\n    if (isDragging) {\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    } else {\n      window.removeEventListener('mousemove', handleMouseMove)\n      window.removeEventListener('mouseup', handleMouseUp)\n    }\n\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove)\n      window.removeEventListener('mouseup', handleMouseUp)\n    }\n  }, [handleMouseMove, handleMouseUp, isDragging])\n\n  return (\n    <div\n      aria-hidden\n      className={classes.root}\n      ref={rootRef}\n      onMouseDown={handleMouseDown}\n    >\n      <div className={classes.point} />\n    </div>\n  )\n}\n\nexport default AnglePicker\n","import React, { FunctionComponent } from 'react'\nimport Input from '@material-ui/core/Input'\n\nimport GridInput from 'src/app/components/GridInput'\nimport AnglePicker, { AnglePickerProps } from 'src/app/components/AnglePicker'\n\nconst FormAngle: FunctionComponent<AnglePickerProps> = (\n  props: AnglePickerProps,\n) => {\n  const { angle, onChange } = props\n\n  return (\n    <GridInput\n      before='Angle:'\n      after={<AnglePicker width={24} angle={angle} onChange={onChange} />}\n    >\n      <Input\n        value={angle}\n        fullWidth\n        type='number'\n        onChange={(e) => onChange(Number(e.target.value))}\n      />\n    </GridInput>\n  )\n}\n\nexport default FormAngle\n","import React, { FunctionComponent } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport Box from '@material-ui/core/Box'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\n\r\nimport GradientPicker from 'src/app/components/GradientPicker'\r\nimport WrappedSketchPicker from 'src/app/components/WrappedSketchPicker'\r\nimport { Gradient, GradientType } from 'src/store'\r\nimport GridInput from 'src/app/components/GridInput'\r\n\r\nimport FormAngle from '../FormAngle'\r\n\r\ninterface FormGradientProps {\r\n  gradient: Gradient\r\n}\r\n\r\nconst FormGradient: FunctionComponent<FormGradientProps> = (\r\n  props: FormGradientProps,\r\n) => {\r\n  const {\r\n    gradient: {\r\n      type,\r\n      angle,\r\n      palette,\r\n      addColor,\r\n      updatePalette,\r\n      setAngle,\r\n      setType,\r\n    },\r\n  } = props\r\n\r\n  return (\r\n    <>\r\n      <Box paddingX={2} marginY={4}>\r\n        <FormAngle angle={angle} onChange={setAngle} />\r\n      </Box>\r\n\r\n      <Box paddingX={2} marginY={4}>\r\n        <GridInput before='Type:' component='div' childrenWidth={8}>\r\n          <RadioGroup\r\n            row\r\n            name='type'\r\n            value={type}\r\n            onChange={(e) => setType(Number(e.target.value))}\r\n            style={{ flexWrap: 'nowrap' }}\r\n          >\r\n            <FormControlLabel\r\n              value={GradientType.LINEAR}\r\n              control={<Radio size='small' color='default' />}\r\n              label='Linear'\r\n            />\r\n            <FormControlLabel\r\n              value={GradientType.RADIAL}\r\n              control={<Radio size='small' color='default' />}\r\n              label='Radial'\r\n            />\r\n          </RadioGroup>\r\n        </GridInput>\r\n      </Box>\r\n      <Box paddingX={2} marginY={4}>\r\n        <GradientPicker\r\n          palette={palette}\r\n          onAdd={(e) => addColor(e.offset, e.color)}\r\n          onUpdate={updatePalette}\r\n        >\r\n          <WrappedSketchPicker />\r\n        </GradientPicker>\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default observer(FormGradient)\r\n","import React, { FunctionComponent } from 'react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\n\nimport readFile from 'src/utils/readFile'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      width: theme.spacing(12),\n      height: theme.spacing(12),\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      position: 'relative',\n      border: `1px solid ${theme.palette.primary.main}`,\n      cursor: 'pointer',\n      ...theme.bgPixel,\n    },\n    image: {\n      maxWidth: '100%',\n      maxHeight: '100%',\n      pointerEvents: 'none',\n    },\n  }),\n)\n\ninterface FileSelectorProps {\n  src: string\n  onChange(image: ArrayBuffer): void\n}\n\nconst FileSelector: FunctionComponent<FileSelectorProps> = (\n  props: FileSelectorProps,\n) => {\n  const { src, onChange } = props\n  const classes = useStyles()\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    if (!e.target.files) return\n    if (e.target.files.length > 0) {\n      readFile(e.target.files[0]).then((buffer) => {\n        if (buffer instanceof ArrayBuffer) onChange(buffer)\n      })\n    }\n  }\n\n  return (\n    <Box component='label' className={classes.root}>\n      <input\n        hidden\n        type='file'\n        multiple\n        accept='image/*'\n        onChange={handleChange}\n      />\n      <img className={classes.image} src={src} alt='' />\n    </Box>\n  )\n}\n\nexport default FileSelector\n","import React, { FunctionComponent } from 'react'\r\n\r\nimport GridInput from 'src/app/components/GridInput'\r\nimport Box from '@material-ui/core/Box'\r\nimport Input from '@material-ui/core/Input'\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\n\r\nimport { PatternTexture, Repetition } from 'src/store'\r\n\r\nimport FileSelector from './FileSelector'\r\n\r\ninterface FormImageProps {\r\n  patternTexture: PatternTexture\r\n  scale: number\r\n  src: string\r\n  // onChangeImage(buffer: ArrayBuffer): void\r\n  // onChangeScale(scale: number): void\r\n}\r\n\r\nconst FormImage: FunctionComponent<FormImageProps> = (\r\n  props: FormImageProps,\r\n) => {\r\n  const { patternTexture } = props\r\n  const {\r\n    src,\r\n    scale,\r\n    repetition,\r\n    setRepetition,\r\n    setScale,\r\n    setImage,\r\n  } = patternTexture\r\n\r\n  return (\r\n    <>\r\n      <Box paddingX={2} marginY={4}>\r\n        <GridInput\r\n          component='div'\r\n          before='Scale:'\r\n          after={<FileSelector src={src} onChange={setImage} />}\r\n        >\r\n          <Input\r\n            value={scale}\r\n            fullWidth\r\n            type='number'\r\n            inputProps={{ min: 0.01, step: 0.1 }}\r\n            onChange={(e) => setScale(Number(e.target.value))}\r\n          />\r\n        </GridInput>\r\n      </Box>\r\n      <Box paddingX={2} marginY={4}>\r\n        <GridInput before='Repeat:'>\r\n          <Select\r\n            value={repetition}\r\n            onChange={(e) => setRepetition(e.target.value as Repetition)}\r\n            displayEmpty\r\n            fullWidth\r\n          >\r\n            <MenuItem value='repeat'>Repeat</MenuItem>\r\n            <MenuItem value='repeat-x'>Repeat-x</MenuItem>\r\n            <MenuItem value='repeat-y'>Repeat-y</MenuItem>\r\n            <MenuItem value='no-repeat'>No Repeat</MenuItem>\r\n          </Select>\r\n        </GridInput>\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FormImage\r\n","import React, { FunctionComponent } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport Box from '@material-ui/core/Box'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\n\r\nimport { FontStyleConfig, FillType } from 'src/store'\r\n\r\nimport FormColor from '../FormColor'\r\nimport FormGradient from '../FormGradient'\r\nimport FormImage from '../FormImage'\r\n\r\ninterface FormFillProps {\r\n  config: FontStyleConfig\r\n}\r\n\r\nconst FormFill: FunctionComponent<FormFillProps> = (props: FormFillProps) => {\r\n  const {\r\n    config: { type, color, gradient, patternTexture, setType, setColor },\r\n  } = props\r\n\r\n  return (\r\n    <>\r\n      <Box paddingX={2} marginY={4}>\r\n        <RadioGroup\r\n          row\r\n          name='type'\r\n          value={type}\r\n          onChange={(e) => setType(Number(e.target.value))}\r\n        >\r\n          <FormControlLabel\r\n            value={FillType.SOLID}\r\n            control={<Radio size='small' color='default' />}\r\n            label='Solid'\r\n          />\r\n          <FormControlLabel\r\n            value={FillType.GRADIENT}\r\n            control={<Radio size='small' color='default' />}\r\n            label='Gradient'\r\n          />\r\n          <FormControlLabel\r\n            value={FillType.IMAGE}\r\n            control={<Radio size='small' color='default' />}\r\n            label='Image'\r\n          />\r\n        </RadioGroup>\r\n      </Box>\r\n      {type === 0 ? (\r\n        <Box paddingX={2} marginY={4}>\r\n          <FormColor color={color} onChange={setColor} />\r\n        </Box>\r\n      ) : null}\r\n      {type === 1 ? <FormGradient gradient={gradient} /> : null}\r\n      {type === 2 ? (\r\n        <FormImage\r\n          patternTexture={patternTexture}\r\n          src={patternTexture.src}\r\n          scale={patternTexture.scale}\r\n          // onChangeImage={patternTexture.setImage}\r\n          // onChangeScale={patternTexture.setScale}\r\n        />\r\n      ) : null}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default observer(FormFill)\r\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\n\nimport { useFill } from 'src/store/hooks'\nimport FormFill from '../../../common/FormFill'\n\nconst Fill: FunctionComponent<unknown> = () => {\n  const fill = useFill()\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <Typography>Fill</Typography>\n      </Box>\n      <FormFill config={fill} />\n    </>\n  )\n}\n\nexport default observer(Fill)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Input from '@material-ui/core/Input'\nimport Switch from '@material-ui/core/Switch'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\n\nimport { useStyle } from 'src/store/hooks'\nimport GridInput from 'src/app/components/GridInput'\n\nimport FormFill from 'src/app/layout/common/FormFill'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    disabled: {\n      opacity: 0.3,\n      pointerEvents: 'none',\n    },\n    title: {\n      flex: 1,\n    },\n  }),\n)\n\nconst Stroke: FunctionComponent<unknown> = () => {\n  const classes = useStyles()\n  const { stroke, useStroke, setUseStroke } = useStyle()\n  const { setWidth, lineJoin, setLineJoin, lineCap, setLineCap } = stroke\n\n  return (\n    <>\n      <Box\n        component='label'\n        display='flex'\n        alignItems='center'\n        paddingX={2}\n        marginY={4}\n      >\n        <Typography component='div' className={classes.title}>\n          Stroke\n        </Typography>\n        Off\n        <Switch\n          size='small'\n          checked={useStroke}\n          onChange={(e) => setUseStroke(e.target.checked)}\n        />\n        On\n      </Box>\n      <div className={useStroke ? '' : classes.disabled}>\n        <Box paddingX={2} marginY={4}>\n          <GridInput before='Width:' after='px'>\n            <Input\n              value={stroke?.width || 0}\n              fullWidth\n              type='number'\n              inputProps={{ min: 0 }}\n              onChange={(e) => setWidth(Number(e.target.value))}\n            />\n          </GridInput>\n        </Box>\n\n        <Box paddingX={2} marginY={4}>\n          <GridInput before='Line Cap:' component='div' childrenWidth={8}>\n            <ButtonGroup size='small' color='primary'>\n              <Button\n                onClick={() => setLineCap('butt')}\n                variant={lineCap === 'butt' ? 'contained' : 'outlined'}\n              >\n                Butt\n              </Button>\n              <Button\n                onClick={() => setLineCap('round')}\n                variant={lineCap === 'round' ? 'contained' : 'outlined'}\n              >\n                Round\n              </Button>\n              <Button\n                onClick={() => setLineCap('square')}\n                variant={lineCap === 'square' ? 'contained' : 'outlined'}\n              >\n                Square\n              </Button>\n            </ButtonGroup>\n          </GridInput>\n        </Box>\n\n        <Box paddingX={2} marginY={4}>\n          <GridInput before='Line Join:' component='div' childrenWidth={8}>\n            <ButtonGroup size='small' color='primary'>\n              <Button\n                onClick={() => setLineJoin('miter')}\n                variant={lineJoin === 'miter' ? 'contained' : 'outlined'}\n              >\n                Miter\n              </Button>\n              <Button\n                onClick={() => setLineJoin('round')}\n                variant={lineJoin === 'round' ? 'contained' : 'outlined'}\n              >\n                Round\n              </Button>\n              <Button\n                onClick={() => setLineJoin('bevel')}\n                variant={lineJoin === 'bevel' ? 'contained' : 'outlined'}\n              >\n                Bevel\n              </Button>\n            </ButtonGroup>\n          </GridInput>\n        </Box>\n        <FormFill config={stroke} />\n      </div>\n    </>\n  )\n}\n\nexport default observer(Stroke)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport Input from '@material-ui/core/Input'\nimport Switch from '@material-ui/core/Switch'\n\nimport { useStyle } from 'src/store/hooks'\nimport GridInput from 'src/app/components/GridInput'\nimport FormColor from '../../../common/FormColor'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    disabled: {\n      opacity: 0.3,\n      pointerEvents: 'none',\n    },\n    title: {\n      flex: 1,\n    },\n  }),\n)\n\nconst Shadow: FunctionComponent<unknown> = () => {\n  const { shadow, useShadow, setUseShadow } = useStyle()\n  const { setOffsetX, setOffsetY, setBlur, setColor } = shadow\n  const classes = useStyles()\n\n  return (\n    <>\n      <Box\n        component='label'\n        display='flex'\n        alignItems='center'\n        paddingX={2}\n        marginY={4}\n      >\n        <Typography component='div' className={classes.title}>\n          Shadow\n        </Typography>\n        Off\n        <Switch\n          size='small'\n          checked={useShadow}\n          onChange={(e) => setUseShadow(e.target.checked)}\n        />\n        On\n      </Box>\n      <div className={useShadow ? '' : classes.disabled}>\n        <Box paddingX={2} marginY={4}>\n          <GridInput before='Offset X:' after='px'>\n            <Input\n              value={shadow?.offsetX || 0}\n              fullWidth\n              type='number'\n              disabled={!useShadow}\n              onChange={(e) => setOffsetX(Number(e.target.value))}\n            />\n          </GridInput>\n        </Box>\n        <Box paddingX={2} marginY={4}>\n          <GridInput before='Offset Y:' after='px'>\n            <Input\n              value={shadow?.offsetY || 0}\n              fullWidth\n              type='number'\n              disabled={!useShadow}\n              onChange={(e) => setOffsetY(Number(e.target.value))}\n            />\n          </GridInput>\n        </Box>\n        <Box paddingX={2} marginY={4}>\n          <GridInput before='Blur:' after='px'>\n            <Input\n              value={shadow?.blur || 0}\n              fullWidth\n              type='number'\n              disabled={!useShadow}\n              inputProps={{ style: { textAlign: 'right' }, min: 0 }}\n              onChange={(e) => setBlur(Number(e.target.value))}\n            />\n          </GridInput>\n        </Box>\n        <Box paddingX={2} marginY={4}>\n          <FormColor color={shadow?.color || ''} onChange={setColor} />\n        </Box>\n      </div>\n    </>\n  )\n}\nexport default observer(Shadow)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\n\nimport { useStyle } from 'src/store/hooks'\nimport FormColor from '../../../common/FormColor'\n\nconst BackgroundColor: FunctionComponent<unknown> = () => {\n  const { bgColor, setBgColor } = useStyle()\n\n  return (\n    <>\n      <Box\n        component='label'\n        display='flex'\n        alignItems='center'\n        paddingX={2}\n        marginY={4}\n      >\n        <Typography>Background Color</Typography>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <FormColor color={bgColor || ''} onChange={setBgColor} />\n      </Box>\n    </>\n  )\n}\n\nexport default observer(BackgroundColor)\n","import React, { FunctionComponent } from 'react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Divider from '@material-ui/core/Divider'\nimport Typography from '@material-ui/core/Typography'\n\nimport Fill from './modules/Fill'\nimport Stroke from './modules/Stroke'\nimport Shadow from './modules/Shadow'\nimport BackgroundColor from './modules/BackgroundColor'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      overflow: 'hidden',\n      width: '256px',\n    },\n  }),\n)\n\nconst RightBar: FunctionComponent<unknown> = () => {\n  const classes = useStyles()\n\n  return (\n    <Box\n      bgcolor='background.sidebar'\n      display='flex'\n      flexDirection='column'\n      overflow='hidden'\n      className={classes.root}\n    >\n      <Box bgcolor='background.sidebar' boxShadow={2} padding={2}>\n        <Typography variant='subtitle2'>Style Config</Typography>\n      </Box>\n      <Box flex={1} height={0} overflow='hidden auto'>\n        <Fill />\n        <Divider />\n        <Stroke />\n        <Divider />\n        <Shadow />\n        <Divider />\n        <BackgroundColor />\n      </Box>\n    </Box>\n  )\n}\n\nexport default RightBar\n","import { useEffect, useCallback, RefObject, DependencyList } from 'react'\r\n\r\ninterface DeltaInfo {\r\n  deltaScale: number\r\n  deltaX: number\r\n  deltaY: number\r\n}\r\n\r\ninterface WheelCallback {\r\n  (deltaInfo: DeltaInfo): void\r\n}\r\n\r\nfunction useWheel(\r\n  ref: RefObject<HTMLElement>,\r\n  onWheel: WheelCallback,\r\n  deps: DependencyList = [],\r\n): void {\r\n  const callback = useCallback(onWheel, [onWheel, deps])\r\n  const handleWheel = useCallback(\r\n    (e: WheelEvent) => {\r\n      e.preventDefault()\r\n      e.stopPropagation()\r\n      const { ctrlKey, altKey, deltaX, deltaY } = e\r\n      if (ctrlKey) {\r\n        let d = -0.01\r\n        if (Math.abs(deltaY) > 50) d *= 0.1\r\n        callback({ deltaScale: deltaY * d, deltaX: 0, deltaY: 0 })\r\n      } else {\r\n        let x = -deltaX\r\n        let y = -deltaY\r\n        if (deltaX === 0 && altKey && Math.abs(deltaY) > 50) {\r\n          x = -deltaY\r\n          y = 0\r\n        }\r\n        callback({\r\n          deltaX: x,\r\n          deltaY: y,\r\n          deltaScale: 0,\r\n        })\r\n      }\r\n    },\r\n    [callback],\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (!ref.current) return undefined\r\n\r\n    const dom = ref.current\r\n\r\n    dom.addEventListener('wheel', handleWheel, {\r\n      passive: false,\r\n    })\r\n\r\n    return () => dom.removeEventListener('wheel', handleWheel)\r\n  }, [ref, handleWheel])\r\n}\r\nexport default useWheel\r\n","import {\r\n  useState,\r\n  useEffect,\r\n  useMemo,\r\n  useCallback,\r\n  DependencyList,\r\n} from 'react'\r\n\r\ninterface OffsetInfo {\r\n  offsetX: number\r\n  offsetY: number\r\n}\r\n\r\ninterface WheelCallback {\r\n  (offsetInfo: OffsetInfo): void\r\n}\r\n\r\nconst point = {\r\n  x: 0,\r\n  y: 0,\r\n}\r\n\r\nfunction useSpaceDrag<T extends HTMLElement>(\r\n  onMove: WheelCallback,\r\n  deps: DependencyList = [],\r\n): [0 | 1 | 2, (e: React.MouseEvent<T, MouseEvent>) => void] {\r\n  const [moveState, setMoveState] = useState({\r\n    ks: false,\r\n    ms: false,\r\n  })\r\n\r\n  const dragStatus = useMemo(() => {\r\n    if (moveState.ks && moveState.ms) return 2\r\n    if (moveState.ks) return 1\r\n    return 0\r\n  }, [moveState.ks, moveState.ms])\r\n\r\n  const moveCallback = useCallback(onMove, [onMove, ...deps])\r\n\r\n  const handleKeyEvent = useCallback(\r\n    (e: KeyboardEvent) => {\r\n      const state = e.keyCode === 32 && e.type === 'keydown'\r\n      if (moveState.ks === state) return\r\n      setMoveState((s) => {\r\n        return {\r\n          ...s,\r\n          ks: e.keyCode === 32 && e.type === 'keydown',\r\n        }\r\n      })\r\n    },\r\n    [moveState.ks],\r\n  )\r\n\r\n  const handleMouseDown = (e: React.MouseEvent<T, MouseEvent>) => {\r\n    if (!moveState.ks) return\r\n    const { clientX, clientY } = e\r\n    point.x = clientX\r\n    point.y = clientY\r\n    setMoveState((s) => {\r\n      return {\r\n        ...s,\r\n        ms: true,\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleMove = useCallback(\r\n    (e: MouseEvent) => {\r\n      const { clientX, clientY } = e\r\n      const { x, y } = point\r\n\r\n      if (clientX - x === 0 && clientY - y === 0) return\r\n\r\n      moveCallback({\r\n        offsetX: clientX - x,\r\n        offsetY: clientY - y,\r\n      })\r\n\r\n      point.x = clientX\r\n      point.y = clientY\r\n    },\r\n    [moveCallback],\r\n  )\r\n\r\n  const handleEnd = useCallback(() => {\r\n    setMoveState((s) => {\r\n      return {\r\n        ...s,\r\n        ms: false,\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyEvent)\r\n    window.addEventListener('keyup', handleKeyEvent)\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyEvent)\r\n      window.removeEventListener('keyup', handleKeyEvent)\r\n    }\r\n  }, [handleKeyEvent])\r\n\r\n  useEffect(() => {\r\n    if (moveState.ks && moveState.ms) {\r\n      window.addEventListener('mousemove', handleMove)\r\n      window.addEventListener('mouseup', handleEnd)\r\n    } else {\r\n      window.removeEventListener('mousemove', handleMove)\r\n      window.removeEventListener('mouseup', handleEnd)\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener('mousemove', handleMove)\r\n      window.removeEventListener('mouseup', handleEnd)\r\n    }\r\n  }, [handleEnd, handleMove, moveState.ks, moveState.ms])\r\n\r\n  return [dragStatus, handleMouseDown]\r\n}\r\nexport default useSpaceDrag\r\n","import React, { useRef, useEffect, FunctionComponent } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\r\n\r\nimport { useProject } from 'src/store/hooks'\r\nimport useWheel from 'src/app/hooks/useWheel'\r\nimport useSpaceDrag from 'src/app/hooks/useSpaceDrag'\r\n\r\ninterface StyleProps {\r\n  width: number\r\n  height: number\r\n  scale: number\r\n  offsetX: number\r\n  offsetY: number\r\n  dragState: number\r\n}\r\n\r\nconst useStyles = makeStyles(({ bgPixel }) =>\r\n  createStyles({\r\n    root: {\r\n      position: 'relative',\r\n      width: '100%',\r\n      height: '100%',\r\n      overflow: 'hidden',\r\n      flex: 1,\r\n      cursor: (props: StyleProps) => {\r\n        if (props.dragState === 2) return 'grabbing'\r\n        if (props.dragState === 1) return 'grab'\r\n        return 'default'\r\n      },\r\n    },\r\n    canvas: {\r\n      ...bgPixel,\r\n      transformOrigin: '50% 50%',\r\n      position: 'absolute',\r\n      left: '50%',\r\n      top: '50%',\r\n      width: (props: StyleProps) => `${props.width}px`,\r\n      height: (props: StyleProps) => `${props.height}px`,\r\n      marginLeft: (props: StyleProps) => `${props.width / -2}px`,\r\n      marginTop: (props: StyleProps) => `${props.height / -2}px`,\r\n      transform: (props: StyleProps) =>\r\n        `scale(${props.scale}) translate(${props.offsetX}px,${props.offsetY}px)`,\r\n      imageRendering: 'pixelated',\r\n    },\r\n  }),\r\n)\r\n\r\nconst PackCanvas: FunctionComponent<unknown> = () => {\r\n  const {\r\n    isPacking,\r\n    ui,\r\n    layout: { padding, auto, fixedSize, width: packWidth, height: packHeight },\r\n    glyphList,\r\n    style: { bgColor },\r\n    packCanvas,\r\n    setCanvas,\r\n  } = useProject()\r\n  const { width, height, scale, offsetX, offsetY } = ui\r\n  const canvasRef = useRef<HTMLCanvasElement>(null)\r\n  const domRef = useRef<HTMLDivElement>(null)\r\n  const [dragState, handleMouseDown] = useSpaceDrag(\r\n    (offsetInfo) => {\r\n      const { offsetX: ix, offsetY: iy } = offsetInfo\r\n      const { scale: os, offsetX: ox, offsetY: oy, setTransform } = ui\r\n      setTransform({\r\n        offsetX: ox + ix / os,\r\n        offsetY: oy + iy / os,\r\n      })\r\n    },\r\n    [ui],\r\n  )\r\n\r\n  const classes = useStyles({\r\n    width,\r\n    height,\r\n    scale,\r\n    offsetX,\r\n    offsetY,\r\n    dragState,\r\n  })\r\n\r\n  useWheel(\r\n    domRef,\r\n    (info) => {\r\n      const { offsetX: ox, offsetY: oy, scale: os, setTransform } = ui\r\n      const s = os + info.deltaScale\r\n      const x = ox + info.deltaX / s\r\n      const y = oy + info.deltaY / s\r\n      setTransform({\r\n        offsetX: x,\r\n        offsetY: y,\r\n        scale: s,\r\n      })\r\n    },\r\n    [ui],\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (canvasRef.current && canvasRef.current !== packCanvas)\r\n      setCanvas(canvasRef.current)\r\n  }, [canvasRef, packCanvas, setCanvas])\r\n\r\n  useEffect(() => {\r\n    if (!glyphList || isPacking || !width || !height) return\r\n    const canvas = canvasRef.current\r\n    if (!canvas) return\r\n\r\n    canvas.width = width\r\n    canvas.height = height\r\n\r\n    const ctx = canvas.getContext('2d')\r\n    if (!ctx) return\r\n\r\n    if (bgColor) {\r\n      ctx.fillStyle = bgColor\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height)\r\n    }\r\n\r\n    glyphList.forEach((glyph) => {\r\n      if (\r\n        glyph.source &&\r\n        glyph.source.width !== 0 &&\r\n        glyph.source.height !== 0\r\n      ) {\r\n        ctx.drawImage(\r\n          glyph.source as HTMLCanvasElement,\r\n          glyph.x + (padding || 0),\r\n          glyph.y + (padding || 0),\r\n        )\r\n      }\r\n    })\r\n  }, [\r\n    bgColor,\r\n    glyphList,\r\n    isPacking,\r\n    height,\r\n    width,\r\n    padding,\r\n    auto,\r\n    fixedSize,\r\n    packWidth,\r\n    packHeight,\r\n  ])\r\n\r\n  return (\r\n    <div\r\n      aria-hidden\r\n      ref={domRef}\r\n      className={classes.root}\r\n      onMouseDown={handleMouseDown}\r\n    >\r\n      <canvas ref={canvasRef} className={classes.canvas} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default observer(PackCanvas)\r\n","import React, { FunctionComponent } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nimport { useProject } from 'src/store/hooks'\r\n\r\nconst useStyles = makeStyles(({ palette }) =>\r\n  createStyles({\r\n    root: {\r\n      width: '100%',\r\n      background: palette.background.paper,\r\n      textAlign: 'center',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      fontSize: 12,\r\n      padding: 2,\r\n      animationDuration: '300ms',\r\n      pointerEvents: 'none',\r\n      color: palette.text.secondary,\r\n      position: 'relative',\r\n    },\r\n    loading: {\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: '100%',\r\n      width: '100%',\r\n    },\r\n  }),\r\n)\r\n\r\nconst PackSizeBar: FunctionComponent<unknown> = () => {\r\n  const { isPacking, ui } = useProject()\r\n  const { width, height } = ui\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      Packed texture size: {width} x {height}\r\n      {isPacking ? <LinearProgress className={classes.loading} /> : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default observer(PackSizeBar)\r\n","import React, { FunctionComponent } from 'react'\r\n\r\nimport PackCanvas from './PackCanvas'\r\nimport PackSizeBar from './PackSizeBar'\r\n\r\nconst PackView: FunctionComponent<unknown> = () => {\r\n  return (\r\n    <>\r\n      <PackSizeBar />\r\n      <PackCanvas />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PackView\r\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport clsx from 'clsx'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport { useProjectUi } from 'src/store/hooks'\n\nimport { PreviewObject } from './getPreviewCanvas'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    letter: {\n      position: 'absolute',\n      '&:hover,&$select': {\n        background: 'rgba(0,0,0,0.2)',\n        outline: '1px solid #000',\n      },\n    },\n    select: {\n      '& + $next': {\n        background: 'rgba(0,0,0,0.1)',\n        outline: '1px dashed #666',\n      },\n    },\n    next: {},\n  }),\n)\n\ninterface LetterListProps {\n  data: PreviewObject\n}\n\nconst LetterList: FunctionComponent<LetterListProps> = (\n  props: LetterListProps,\n) => {\n  const {\n    data: { xOffset, yOffset, list },\n  } = props\n  const classes = useStyles()\n  const ui = useProjectUi()\n  const handleSelect = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    letter: string,\n    next: string,\n  ) => {\n    // setSelectLetter\n    e.stopPropagation()\n    ui.setSelectLetter(letter, next)\n  }\n  return (\n    <>\n      {list.map((item, idx) => {\n        const key = `${item.letter}${idx}`\n        return (\n          <div\n            aria-hidden\n            className={clsx(classes.letter, {\n              [classes.select]: item.letter === ui.selectLetter,\n              [classes.next]: item.letter === ui.selectNextLetter,\n            })}\n            style={{\n              width: item.width,\n              height: item.height,\n              left: `${item.x - xOffset}px`,\n              top: `${item.y - yOffset}px`,\n            }}\n            key={key}\n            onClick={(e) => handleSelect(e, item.letter, item.next)}\n          />\n        )\n      })}\n    </>\n  )\n}\n\nexport default observer(LetterList)\n","import React, { useRef, useState, useEffect, FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport { useProject } from 'src/store/hooks'\nimport useWheel from 'src/app/hooks/useWheel'\nimport useSpaceDrag from 'src/app/hooks/useSpaceDrag'\nimport toOutputInfo, { BMFontChar } from 'src/file/toOutputInfo'\n\nimport getPreviewCanvas, { PreviewObject } from './getPreviewCanvas'\nimport LetterList from './LetterList'\n\ninterface StyleProps {\n  width: number\n  height: number\n  scale: number\n  offsetX: number\n  offsetY: number\n  dragState: number\n}\n\nconst useStyles = makeStyles(({ bgPixel }) =>\n  createStyles({\n    root: {\n      position: 'relative',\n      flex: 1,\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden',\n      ...bgPixel,\n      cursor: (props: StyleProps) => {\n        if (props.dragState === 2) return 'grabbing'\n        if (props.dragState === 1) return 'grab'\n        return 'default'\n      },\n    },\n    wrap: {\n      transformOrigin: '50% 50%',\n      position: 'absolute',\n      left: '50%',\n      top: '50%',\n      width: (props: StyleProps) => `${props.width}px`,\n      height: (props: StyleProps) => `${props.height}px`,\n      marginLeft: (props: StyleProps) => `${props.width / -2}px`,\n      marginTop: (props: StyleProps) => `${props.height / -2}px`,\n      transform: (props: StyleProps) =>\n        `scale(${props.scale}) translate(${props.offsetX}px,${props.offsetY}px)`,\n    },\n    canvas: {\n      width: '100%',\n      height: '100%',\n      imageRendering: 'pixelated',\n    },\n  }),\n)\n\nconst PreviewCanvas: FunctionComponent<unknown> = () => {\n  const project = useProject()\n  const [data, setData] = useState<PreviewObject | null>(null)\n  const {\n    ui,\n    style: {\n      font: {\n        size,\n        lineHeight,\n        middle,\n        hanging,\n        top,\n        alphabetic,\n        ideographic,\n        bottom,\n        minBaseLine,\n        maxBaseLine,\n      },\n    },\n    isPacking,\n  } = project\n  const { previewScale, previewOffsetX, previewOffsetY } = ui\n\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const domRef = useRef<HTMLDivElement>(null)\n  const [dragState, handleMouseDown] = useSpaceDrag(\n    (offsetInfo) => {\n      const { offsetX: ix, offsetY: iy } = offsetInfo\n      const {\n        previewScale: os,\n        previewOffsetX: ox,\n        previewOffsetY: oy,\n        setPreviewTransform,\n      } = ui\n      setPreviewTransform({\n        previewOffsetX: ox + ix / os,\n        previewOffsetY: oy + iy / os,\n      })\n    },\n    [ui],\n  )\n  const classes = useStyles({\n    width: data ? data.width : 0,\n    height: data ? data.height : 0,\n    scale: previewScale,\n    offsetX: previewOffsetX,\n    offsetY: previewOffsetY,\n    dragState,\n  })\n\n  useWheel(\n    domRef,\n    (info) => {\n      const {\n        previewOffsetX: ox,\n        previewOffsetY: oy,\n        previewScale: os,\n        setPreviewTransform,\n      } = ui\n      const s = os + info.deltaScale\n      const x = ox + info.deltaX / s\n      const y = oy + info.deltaY / s\n      setPreviewTransform({\n        previewOffsetX: x,\n        previewOffsetY: y,\n        previewScale: s,\n      })\n    },\n    [ui],\n  )\n\n  useEffect(() => {\n    if (!canvasRef.current || isPacking || !data) return\n\n    const canvas = canvasRef.current\n    const ctx = canvas.getContext('2d')\n    if (!ctx) return\n    const lh = size * lineHeight\n\n    canvas.width = data.width\n    canvas.height = data.height\n    data.list.forEach((item) => {\n      if (!item.source || item.source.width === 0 || item.source.height === 0)\n        return\n      ctx.drawImage(item.source, item.x - data.xOffset, item.y - data.yOffset)\n    })\n\n    for (let index = 0; index < data.lines; index += 1) {\n      ;[middle, hanging, top, alphabetic, ideographic, bottom].forEach(\n        (baseLine) => {\n          const basey = Math.round(baseLine - minBaseLine + index * lh)\n          ctx.beginPath()\n          ctx.moveTo(-data.xOffset, basey + 0.5 - data.yOffset)\n          ctx.lineTo(data.width, basey + 0.5 - data.yOffset)\n          if (baseLine === minBaseLine || baseLine === maxBaseLine) {\n            ctx.strokeStyle = 'rgba(0,0,0,1)'\n            ctx.setLineDash([])\n          } else {\n            ctx.strokeStyle = 'rgba(0,0,0,0.5)'\n            ctx.setLineDash([10, 3, 2, 3])\n          }\n          ctx.stroke()\n        },\n      )\n      ctx.beginPath()\n      ctx.moveTo(-data.xOffset + 0.5, index * lh - data.yOffset)\n      ctx.lineTo(\n        -data.xOffset + 0.5,\n        index * lh - data.yOffset + maxBaseLine - minBaseLine,\n      )\n      ctx.strokeStyle = 'rgba(0,0,0,1)'\n      ctx.setLineDash([])\n      ctx.stroke()\n    }\n  }, [\n    alphabetic,\n    bottom,\n    data,\n    hanging,\n    ideographic,\n    isPacking,\n    lineHeight,\n    maxBaseLine,\n    middle,\n    minBaseLine,\n    size,\n    top,\n  ])\n\n  useEffect(() => {\n    if (!canvasRef.current || isPacking) return\n\n    const canvas = canvasRef.current\n    const ctx = canvas.getContext('2d')\n    if (!ctx) return\n\n    const { chars, kernings } = toOutputInfo(project)\n    const kerningMap: Map<number, Map<number, number>> = new Map()\n    kernings.list.forEach(({ first, second, amount }) => {\n      if (!kerningMap.has(first)) kerningMap.set(first, new Map())\n      const k = kerningMap.get(first)\n      k?.set(second, amount)\n    })\n    const charMap: Map<string, BMFontChar> = new Map()\n    chars.list.forEach((char) => {\n      charMap.set(char.letter, char)\n    })\n    const lh = size * lineHeight\n    const obj = getPreviewCanvas(\n      ui.previewText,\n      charMap,\n      kerningMap,\n      lh,\n      maxBaseLine - minBaseLine,\n    )\n    setData(() => obj)\n  }, [\n    isPacking,\n    lineHeight,\n    maxBaseLine,\n    minBaseLine,\n    project,\n    size,\n    ui.previewText,\n  ])\n\n  return (\n    <div\n      aria-hidden\n      ref={domRef}\n      className={classes.root}\n      onMouseDown={handleMouseDown}\n      onClick={() => ui.setSelectLetter('', '')}\n    >\n      <div className={classes.wrap}>\n        <canvas ref={canvasRef} className={classes.canvas} />\n        {data ? <LetterList data={data} /> : null}\n      </div>\n    </div>\n  )\n}\n\nexport default observer(PreviewCanvas)\n","import { BMFontChar } from 'src/file/toOutputInfo'\n\ninterface PreviewItem {\n  x: number\n  y: number\n  width: number\n  height: number\n  source: HTMLImageElement | HTMLCanvasElement | null\n  letter: string\n  next: string\n}\n\nexport interface PreviewObject {\n  xOffset: number\n  yOffset: number\n  width: number\n  height: number\n  list: PreviewItem[]\n  lines: number\n}\n\nexport default function getPreviewCanvas(\n  text: string,\n  chars: Map<string, BMFontChar>,\n  kernings: Map<number, Map<number, number>>,\n  lineHeight: number,\n  fontHeight: number,\n): PreviewObject {\n  // const letters = Array.from(new Set(text.replace(/\\r\\n|\\r|\\n/g, '').split('')))\n  const list: PreviewItem[] = []\n  const lines = text.split(/\\r\\n|\\r|\\n/)\n  let minX = 0\n  let minY = 0\n  let maxX = 0\n  let maxY = 0\n  let y = 0\n  let x = 0\n\n  lines.forEach((str, index) => {\n    y = lineHeight * index\n    x = 0\n    const arr = Array.from(str)\n    arr.forEach((letter, idx) => {\n      const char = chars.get(letter)\n      if (!char) return\n      const next = arr[idx + 1]\n      const lk = kernings.get(letter.charCodeAt(0))\n      let kering = 0\n      if (next && lk && lk.has(next.charCodeAt(0))) {\n        kering = lk.get(next.charCodeAt(0)) || 0\n      }\n      const obj = {\n        x: x + char.xoffset,\n        y: y + char.yoffset,\n        width: char.width || char.xadvance,\n        height: char.height || fontHeight,\n        source: char.source,\n        letter: char.letter,\n        next,\n      }\n      x += char.xadvance + kering\n      minX = Math.min(obj.x, minX)\n      minY = Math.min(obj.y, minY)\n      maxX = Math.max(obj.x + obj.width, maxX)\n      maxY = Math.max(obj.y + char.height, maxY)\n      list.push(obj)\n    })\n  })\n\n  return {\n    lines: lines.length,\n    list,\n    xOffset: minX,\n    yOffset: minY,\n    width: maxX - minX,\n    height: Math.max(maxY - minY, lines.length * lineHeight - minY),\n  }\n}\n","import React, { useState, FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\n\nimport Box from '@material-ui/core/Box'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\n\nimport { useProjectUi } from 'src/store/hooks'\n\nconst Preview: FunctionComponent<unknown> = () => {\n  const { previewText, setPreviewText } = useProjectUi()\n  const [isIME, setIsIME] = useState(false)\n  const [inputText, setInputText] = useState(previewText)\n\n  const handleInput = (event: React.ChangeEvent<HTMLTextAreaElement>): void => {\n    const { value } = event.target\n    if (isIME) {\n      setInputText(value)\n    } else {\n      setInputText(value)\n      if (value !== previewText) setPreviewText(value)\n    }\n  }\n\n  const handleCompositionEnd = (): void => {\n    setIsIME(false)\n    setInputText(inputText)\n    if (inputText !== previewText) setPreviewText(inputText)\n  }\n\n  return (\n    <Box>\n      <Box paddingX={2} marginY={4}>\n        <Typography>Glyphs</Typography>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <TextField\n          margin='none'\n          value={isIME ? inputText : previewText}\n          fullWidth\n          multiline\n          rows={7}\n          variant='outlined'\n          inputProps={{ spellCheck: false }}\n          onChange={handleInput}\n          onCompositionStart={() => setIsIME(true)}\n          onCompositionEnd={handleCompositionEnd}\n        />\n      </Box>\n    </Box>\n  )\n}\n\nexport default observer(Preview)\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\n\nimport { useProject } from 'src/store/hooks'\n\nimport FormAdjustMetric from 'src/app/layout/common/FormAdjustMetric'\n\nconst GlobalMetric: FunctionComponent<unknown> = () => {\n  const project = useProject()\n  const { glyphList, ui } = project\n  const glyph = glyphList.find((gl) => gl.letter === ui.selectLetter)\n  if (!glyph) return null\n  const { adjustMetric, letter } = glyph\n  const {\n    xAdvance,\n    xOffset,\n    yOffset,\n    setXAdvance,\n    setXOffset,\n    setYOffset,\n  } = adjustMetric\n\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <Typography>{`\"${letter}\" Adjustment`}</Typography>\n      </Box>\n      <FormAdjustMetric\n        xAdvance={xAdvance}\n        xOffset={xOffset}\n        yOffset={yOffset}\n        setXAdvance={setXAdvance}\n        setXOffset={setXOffset}\n        setYOffset={setYOffset}\n      />\n    </>\n  )\n}\n\nexport default observer(GlobalMetric)\n","import React, { useState, useEffect, FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport { deepObserve } from 'mobx-utils'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport Input from '@material-ui/core/Input'\nimport GridInput from 'src/app/components/GridInput'\n\nimport { useProject } from 'src/store/hooks'\nimport { GlyphFont, GlyphImage } from 'src/store'\n\nconst GlobalMetric: FunctionComponent<unknown> = () => {\n  const {\n    glyphList,\n    ui,\n    style: {\n      font: { opentype, size },\n    },\n  } = useProject()\n  const [offset, setOffset] = useState(0)\n  const [glyph, setGlyph] = useState<GlyphFont | GlyphImage | undefined>()\n  const [kerning, setKerning] = useState(0)\n\n  useEffect(() => {\n    setGlyph(glyphList.find((gl) => gl.letter === ui.selectLetter))\n  }, [glyphList, ui.selectLetter])\n\n  useEffect(() => {\n    if (glyph && ui.selectNextLetter && opentype) {\n      const fontScale = (1 / opentype.unitsPerEm) * size\n      setOffset(\n        Math.round(\n          opentype.getKerningValue(\n            opentype.charToGlyphIndex(glyph.letter),\n            opentype.charToGlyphIndex(ui.selectNextLetter),\n          ) * fontScale,\n        ),\n      )\n    }\n  }, [glyph, opentype, size, ui.selectNextLetter])\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ) => {\n    if (glyph)\n      glyph.steKerning(ui.selectNextLetter, Number(e.target.value) - offset)\n  }\n\n  useEffect(() => {\n    let disposer\n\n    if (glyph) {\n      setKerning(glyph.kerning.get(ui.selectNextLetter) || 0)\n      disposer = deepObserve(glyph.kerning, () => {\n        setKerning(glyph.kerning.get(ui.selectNextLetter) || 0)\n      })\n    }\n\n    return disposer\n  }, [glyph, ui.selectNextLetter])\n\n  if (!glyph || !ui.selectNextLetter) return null\n\n  return (\n    <>\n      <Box paddingX={2} marginY={4}>\n        <Typography>{`\"${glyph.letter}\" - \"${ui.selectNextLetter}\" Kerning`}</Typography>\n      </Box>\n      <Box paddingX={2} marginY={4}>\n        <GridInput before='Amount:' after='px'>\n          <Input\n            value={kerning + offset}\n            fullWidth\n            type='number'\n            onChange={handleChange}\n          />\n        </GridInput>\n      </Box>\n    </>\n  )\n}\n\nexport default observer(GlobalMetric)\n","import React, { FunctionComponent } from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport PreviewCanvas from './PreviewCanvas'\nimport PreviewText from './PreviewText'\nimport PreviewMertic from './PreviewMertic'\nimport PreviewKerning from './PreviewKerning'\n\nconst Preview: FunctionComponent<unknown> = () => {\n  return (\n    <>\n      <PreviewCanvas />\n      <Grid container alignItems='flex-start'>\n        <Grid item xs={4}>\n          <PreviewText />\n        </Grid>\n        <Grid item xs={4}>\n          <PreviewMertic />\n        </Grid>\n        <Grid item xs={4}>\n          <PreviewKerning />\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nexport default Preview\n","import React, { FunctionComponent } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline'\r\n\r\nimport { useProjectUi } from 'src/store/hooks'\r\n\r\nimport PackView from '../PackView'\r\nimport Preview from '../Preview'\r\n\r\nconst useStyles = makeStyles(({ palette }) =>\r\n  createStyles({\r\n    '@keyframes slideDown': {\r\n      from: { opacity: 0, transform: 'translate(0, -100%)' },\r\n      to: { opacity: 1, transform: 'translate(0, 0)' },\r\n    },\r\n    root: {\r\n      backgroundColor: palette.background.default,\r\n      position: 'relative',\r\n      display: 'flex',\r\n      flex: 1,\r\n      flexDirection: 'column',\r\n    },\r\n    toast: {\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 0,\r\n      width: '100%',\r\n      zIndex: 10,\r\n      background: palette.error.main,\r\n      textAlign: 'center',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      fontSize: 14,\r\n      padding: 2,\r\n      animationName: '$slideDown',\r\n      animationDuration: '300ms',\r\n      pointerEvents: 'none',\r\n    },\r\n    icon: {\r\n      marginRight: 5,\r\n    },\r\n  }),\r\n)\r\n\r\nconst MainView: FunctionComponent<unknown> = () => {\r\n  const { showPreview, packFailed } = useProjectUi()\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {packFailed ? (\r\n        <div className={classes.toast}>\r\n          <ErrorOutlineIcon className={classes.icon} fontSize='inherit' />\r\n          Packaging failed, try to increase the size of the package please.\r\n        </div>\r\n      ) : null}\r\n      {showPreview ? <Preview /> : <PackView />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default observer(MainView)\r\n","import React, { useRef, useState, useEffect, FunctionComponent } from 'react'\n// import { observer } from 'mobx-react'\nimport clsx from 'clsx'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n// import Input from '@material-ui/core/Input'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst useStyles = makeStyles(({ palette }) =>\n  createStyles({\n    root: {\n      minHeight: 'auto',\n      minWidth: '80px',\n      maxWidth: 'none',\n      height: '34px',\n      lineHeight: '16px',\n      padding: '10px',\n      color: 'rgba(255,255,255,0.5)',\n      backgroundColor: 'rgb(45, 45, 45)',\n      borderRight: `1px solid ${palette.background.default}`,\n      textTransform: 'none',\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      cursor: 'pointer',\n      '&:hover': {\n        '& $icon': {\n          opacity: 1,\n        },\n      },\n      '&:last-child': {\n        borderRight: '0 none',\n      },\n    },\n    selected: {\n      background: palette.background.default,\n      color: '#fff',\n      '& $icon': {\n        opacity: 1,\n      },\n    },\n    name: {\n      whiteSpace: 'nowrap',\n      position: 'relative',\n      background: 'inherit',\n    },\n    editor: {\n      color: 'rgba(0,0,0,0)',\n    },\n    input: {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      left: 0,\n      fontSize: 'inherit',\n      padding: 0,\n      border: '0 none',\n      appearance: 'none',\n      color: 'inherit',\n      background: 'inherit',\n    },\n    icon: {\n      width: '16px',\n      height: '16px',\n      marginLeft: '10px',\n      opacity: 0,\n    },\n  }),\n)\n\ninterface ProjectTabProps {\n  name: string\n  value: number\n  selected?: boolean\n  useRemove?: boolean\n  onRemove?: (\n    e: React.MouseEvent<SVGSVGElement, MouseEvent>,\n    value: number,\n  ) => void\n  onChange?: (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    value: number,\n  ) => void\n  onClick?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\n  onRename?: (name: string, value: number) => void\n}\n\nconst ProjectTab: FunctionComponent<ProjectTabProps> = (\n  props: ProjectTabProps,\n) => {\n  const {\n    name,\n    useRemove,\n    selected,\n    value,\n    onChange,\n    onClick,\n    onRemove,\n    onRename,\n  } = props\n  const [editor, setEditor] = useState(false)\n  const [sname, setSName] = useState(name)\n  const editorRef = useRef<HTMLInputElement>(null)\n  const classes = useStyles()\n\n  const handleRemove = (e: React.MouseEvent<SVGSVGElement, MouseEvent>) => {\n    e.stopPropagation()\n    if (onRemove) onRemove(e, value)\n  }\n\n  const handleSelect = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n  ): void => {\n    e.stopPropagation()\n    if (onChange) onChange(e, value)\n    if (onClick) onClick(e)\n  }\n\n  const handleDoubleClick = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n  ): void => {\n    e.stopPropagation()\n    if (editorRef.current) {\n      setEditor(true)\n    }\n  }\n\n  const handleEditorEnd = (e: { preventDefault?(): void }) => {\n    if (e.preventDefault) e.preventDefault()\n    setEditor(false)\n  }\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.keyCode === 13 && editorRef.current) {\n      editorRef.current.blur()\n    }\n  }\n\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSName(e.target.value)\n  }\n\n  useEffect(() => {\n    if (editor && editorRef.current) editorRef.current.focus()\n    if (!editor && onRename) onRename(sname, value)\n  }, [editor, onRename, sname, value])\n\n  useEffect(() => {\n    setSName(name)\n  }, [name])\n\n  return (\n    <div\n      aria-hidden\n      className={clsx(classes.root, {\n        [classes.selected]: selected,\n      })}\n      onClick={handleSelect}\n      onDoubleClick={handleDoubleClick}\n      title='Double click rename'\n    >\n      <span aria-hidden className={classes.name}>\n        {editor ? sname : name}\n        <input\n          className={classes.input}\n          hidden={!editor}\n          ref={editorRef}\n          value={editor ? sname : name}\n          type='text'\n          onKeyDown={handleKeyDown}\n          onBlur={handleEditorEnd}\n          //   onInput={handleInput}\n          onChange={handleInput}\n        />\n      </span>\n      {useRemove ? (\n        <CloseIcon\n          className={classes.icon}\n          onClick={handleRemove}\n          onDoubleClick={handleRemove}\n        />\n      ) : null}\n    </div>\n  )\n}\n\nexport default ProjectTab\n","import React, { FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport Tabs from '@material-ui/core/Tabs'\nimport { useWorkspace } from 'src/store/hooks'\nimport ProjectTab from './ProjectTab'\n\nconst useStyles = makeStyles(({ palette, shadows }) =>\n  createStyles({\n    root: {\n      minHeight: 'auto',\n      width: '100%',\n      boxShadow: shadows[2],\n      background: palette.background.sidebar,\n      position: 'relative',\n      zIndex: 1,\n    },\n  }),\n)\n\nconst ProjectTabs: FunctionComponent<unknown> = () => {\n  const classes = useStyles()\n  const workSpace = useWorkspace()\n  const {\n    addProject,\n    selectProject,\n    removeProject,\n    setProjectName,\n    namedList,\n    activeId,\n  } = workSpace\n\n  const handleChange = (e: unknown, value: number): void => {\n    selectProject(value)\n  }\n\n  const handleRemove = (\n    e: React.MouseEvent<SVGSVGElement, MouseEvent>,\n    value?: number,\n  ): void => {\n    if (typeof value !== 'undefined') removeProject(value)\n  }\n\n  const handleDoubleClick = (): void => {\n    addProject()\n  }\n\n  return (\n    <Tabs\n      classes={classes}\n      value={activeId}\n      onChange={handleChange}\n      indicatorColor='primary'\n      textColor='primary'\n      variant='scrollable'\n      scrollButtons='off'\n      selectionFollowsFocus\n      TabIndicatorProps={{ hidden: true }}\n      onDoubleClick={handleDoubleClick}\n    >\n      {namedList.map((item) => {\n        return (\n          <ProjectTab\n            useRemove={namedList.length > 1}\n            name={item.name}\n            value={item.id}\n            key={item.id}\n            onRename={setProjectName}\n            onRemove={handleRemove}\n          />\n        )\n      })}\n    </Tabs>\n  )\n}\n\nexport default observer(ProjectTabs)\n","import React, { FunctionComponent, useState, useRef } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Paper from '@material-ui/core/Paper'\nimport Button from '@material-ui/core/Button'\nimport Popper from '@material-ui/core/Popper'\nimport Slider from '@material-ui/core/Slider'\nimport Switch from '@material-ui/core/Switch'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport MenuList from '@material-ui/core/MenuList'\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener'\n\nimport { useProjectUi } from 'src/store/hooks'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    slider: {\n      width: '200px',\n    },\n  }),\n)\n\nconst ControlerBar: FunctionComponent<unknown> = () => {\n  const {\n    scale,\n    setTransform,\n    previewScale,\n    setPreviewTransform,\n    showPreview,\n    setShowPreview,\n  } = useProjectUi()\n  const classes = useStyles()\n  const [open, setOpen] = useState(false)\n  const anchorRef = useRef<HTMLButtonElement>(null)\n  const [list] = useState([0.25, 0.5, 0.75, 1, 1.25, 1.5, 5, 10])\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen)\n  }\n\n  const handleClose = (event: React.MouseEvent<EventTarget>) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return\n    }\n\n    setOpen(false)\n  }\n\n  const handleChange = (event: unknown, val: number | number[]) => {\n    if (showPreview) {\n      setPreviewTransform({ previewScale: val as number })\n    } else {\n      setTransform({ scale: val as number })\n    }\n  }\n\n  const handleSelect = (val: number) => {\n    // setTransform({ scale: val })\n    handleChange(null, val)\n    setOpen(false)\n  }\n\n  return (\n    <Box paddingX={2} display='flex' justifyContent='space-between'>\n      <Box component='label' display='flex' alignItems='center'>\n        Preview\n        <Switch\n          size='small'\n          color='primary'\n          checked={showPreview}\n          onChange={(e) => setShowPreview(e.target.checked)}\n        />\n      </Box>\n      <Slider\n        className={classes.slider}\n        value={showPreview ? previewScale : scale}\n        min={0.01}\n        max={10}\n        step={0.01}\n        onChange={handleChange}\n      />\n      <Button ref={anchorRef} onClick={handleToggle}>\n        {`${Math.round((showPreview ? previewScale : scale) * 1000) / 10}%`}\n      </Button>\n      <Popper open={open} anchorEl={anchorRef.current} placement='top-end'>\n        <Paper>\n          <ClickAwayListener onClickAway={handleClose}>\n            <MenuList>\n              {list.map((n) => (\n                <MenuItem key={n} onClick={() => handleSelect(n)}>\n                  {`${n * 100}%`}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </ClickAwayListener>\n        </Paper>\n      </Popper>\n    </Box>\n  )\n}\n\nexport default observer(ControlerBar)\n","import React, { useState, FunctionComponent } from 'react'\nimport { observer } from 'mobx-react'\n\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport InputBase from '@material-ui/core/InputBase'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nimport { GlyphImage } from 'src/store'\nimport { useProject } from 'src/store/hooks'\n\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      width: theme.spacing(24),\n      height: theme.spacing(24),\n      margin: theme.spacing(2),\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      position: 'relative',\n    },\n    image: {\n      maxWidth: '100%',\n      maxHeight: '100%',\n      pointerEvents: 'none',\n    },\n    actions: {\n      width: '100%',\n      height: '100%',\n      position: 'absolute',\n      left: 0,\n      top: 0,\n    },\n    inputLabel: {\n      width: '100%',\n      height: '100%',\n      '& input': {\n        textAlign: 'center',\n      },\n    },\n  }),\n)\n\ninterface ImageGlyphProps {\n  glyph: GlyphImage\n  selected?: boolean\n}\n\nconst ImageGlyph: FunctionComponent<ImageGlyphProps> = (\n  props: ImageGlyphProps,\n) => {\n  const classes = useStyles()\n  const { removeImage } = useProject()\n  const [isIME, setIsIME] = useState(false)\n  const { glyph } = props\n  const [inputValue, setInputValue] = useState(glyph.letter)\n  const { changeSelect, selected, setGlyph } = glyph\n\n  const handleChangeGlyph = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const { value } = e.target\n    if (!isIME) {\n      setGlyph(value)\n    } else {\n      setInputValue(value.slice(0, 1))\n      setGlyph(value.slice(0, 1))\n    }\n  }\n\n  const handleCompositionEnd = (): void => {\n    setIsIME(false)\n    setInputValue((iv) => iv.slice(0, 1))\n    setGlyph(inputValue.slice(0, 1))\n  }\n\n  return (\n    <Paper variant='outlined' className={classes.root}>\n      <img className={classes.image} src={glyph.src} alt={glyph.fileName} />\n      <Grid container direction='column' className={classes.actions}>\n        <Grid item container justify='space-between' alignItems='center'>\n          <Checkbox\n            checked={selected}\n            size='small'\n            color='default'\n            onChange={(e) => changeSelect(e.target.checked)}\n          />\n          <IconButton\n            color='primary'\n            size='small'\n            onClick={() => removeImage(glyph)}\n          >\n            <DeleteIcon fontSize='small' />\n          </IconButton>\n        </Grid>\n        <Grid\n          item\n          xs\n          component='label'\n          className={classes.inputLabel}\n          container\n          alignItems='flex-end'\n        >\n          <InputBase\n            fullWidth\n            value={isIME ? inputValue : glyph.letter}\n            onFocus={(e) => e.target.select()}\n            onInput={handleChangeGlyph}\n            onCompositionEnd={handleCompositionEnd}\n            onCompositionStart={() => setIsIME(true)}\n          />\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n}\n\nexport default observer(ImageGlyph)\n","import React, { FunctionComponent } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport { makeStyles, createStyles } from '@material-ui/core'\r\nimport Box from '@material-ui/core/Box'\r\n\r\nimport { useProject } from 'src/store/hooks'\r\n\r\nimport ImageGlyph from './ImageGlyph'\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    root: {\r\n      width: '100%',\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n  }),\r\n)\r\n\r\nconst ImageGlyphList: FunctionComponent<unknown> = () => {\r\n  const { glyphImages } = useProject()\r\n  const classes = useStyles()\r\n  return (\r\n    <Box className={classes.root}>\r\n      {glyphImages.map((glyph) => {\r\n        return <ImageGlyph glyph={glyph} key={glyph.src} />\r\n      })}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default observer(ImageGlyphList)\r\n","import React, { FunctionComponent, useState, useEffect } from 'react'\nimport { observer } from 'mobx-react'\nimport clsx from 'clsx'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport Box from '@material-ui/core/Box'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport Accordion from '@material-ui/core/Accordion'\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\nimport Typography from '@material-ui/core/Typography'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport FullscreenIcon from '@material-ui/icons/Fullscreen'\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit'\nimport IconButton from '@material-ui/core/IconButton'\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary'\n\nimport { FileInfo } from 'src/store'\nimport { useProject } from 'src/store/hooks'\n\nimport readFile from 'src/utils/readFile'\n\nimport ImageGlyphList from './ImageGlyphList'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      display: 'flex',\n      position: 'relative',\n    },\n    fixed: {\n      position: 'fixed',\n      left: 0,\n      top: 0,\n      zIndex: 999999,\n      width: '100%',\n      height: '100%',\n      '& $panel': {\n        maxHeight: 'none',\n      },\n    },\n    panel: {\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      maxHeight: '305px',\n    },\n    continer: {\n      flex: 1,\n      overflow: 'hidden',\n      overflowY: 'auto',\n    },\n    listWrap: {\n      minHeight: '224px',\n      height: '100%',\n      width: '100%',\n      overflow: 'hidden',\n      overflowY: 'auto',\n    },\n  }),\n)\n\nconst LayerBox: FunctionComponent<unknown> = () => {\n  const classes = useStyles()\n  const { addImages } = useProject()\n  const [isFullscreen, setFullscreen] = useState(false)\n  const [open, setOpen] = useState(false)\n  // const [isDroping, setIsDroping] = useState(false)\n\n  const handleLoadFile = (files: FileList) => {\n    const list = Array.from(files).filter((file) => /^image\\//.test(file.type))\n    if (!list.length) return\n    Promise.all(\n      list.map((file) =>\n        readFile(file).then((buffer) => {\n          if (!buffer || typeof buffer === 'string') return null\n\n          const matched = file.name.match(/(\\S)\\.[a-zA-Z0-9]+$/i)\n          return {\n            letter: matched ? matched[1] : '',\n            fileName: file.name,\n            fileType: file.type,\n            buffer,\n          }\n        }),\n      ),\n    ).then((fileList) => {\n      addImages(fileList.filter((f) => f) as FileInfo[])\n    })\n  }\n\n  const handleDrop = (e: React.DragEvent<HTMLElement>): void => {\n    e.preventDefault()\n    handleLoadFile(e.dataTransfer.files)\n  }\n\n  const hanfleToggleFullScreen = (\n    e?: React.MouseEvent<HTMLDivElement, MouseEvent>,\n  ) => {\n    if (e) e.stopPropagation()\n    setFullscreen((f) => !f)\n  }\n\n  const handleToggleOpen = () => {\n    setOpen((o) => isFullscreen || !o)\n  }\n  const handleFilesChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    if (!e.target.files) return\n    const { files } = e.target\n    handleLoadFile(files)\n  }\n\n  const handleKeyDown = (e: KeyboardEvent) => {\n    const target = e.target as HTMLElement\n    if (e.keyCode === 27) {\n      if (!target || target.tagName !== 'INPUT') setFullscreen(false)\n      else if (target) target.blur()\n    }\n  }\n\n  useEffect(() => {\n    if (isFullscreen) window.addEventListener('keydown', handleKeyDown)\n    else window.removeEventListener('keydown', handleKeyDown)\n    return () => window.removeEventListener('keydown', handleKeyDown)\n  }, [isFullscreen])\n\n  return (\n    <Box\n      onDragEnter={(e) => e.preventDefault()}\n      onDragOver={(e) => e.preventDefault()}\n      // onDragLeave={handleDrop}\n      onDrop={handleDrop}\n      className={clsx(classes.root, {\n        [classes.fixed]: isFullscreen,\n      })}\n    >\n      <Accordion\n        className={classes.panel}\n        expanded={isFullscreen || open}\n        onChange={handleToggleOpen}\n        TransitionProps={{\n          style:\n            isFullscreen || open\n              ? { flex: 1, overflow: 'hidden', overflowY: 'auto' }\n              : {},\n        }}\n      >\n        <AccordionSummary\n          expandIcon={isFullscreen ? undefined : <ExpandMoreIcon />}\n        >\n          <Grid container alignItems='center'>\n            <Grid item>\n              <Typography>Image Glyph List</Typography>\n            </Grid>\n            <Grid item xs container justify='center'>\n              <Button\n                component='label'\n                color='primary'\n                size='small'\n                variant='contained'\n                startIcon={<PhotoLibraryIcon />}\n              >\n                Select Images\n                <input\n                  hidden\n                  type='file'\n                  multiple\n                  accept='image/*'\n                  onChange={handleFilesChange}\n                />\n              </Button>\n            </Grid>\n            <Grid item>\n              <IconButton component='div' onClick={hanfleToggleFullScreen}>\n                {isFullscreen ? <FullscreenExitIcon /> : <FullscreenIcon />}\n              </IconButton>\n            </Grid>\n          </Grid>\n        </AccordionSummary>\n        <AccordionDetails className={classes.continer}>\n          <Box className={classes.listWrap}>\n            <ImageGlyphList />\n          </Box>\n        </AccordionDetails>\n      </Accordion>\n    </Box>\n  )\n}\nexport default observer(LayerBox)\n","import React, { FunctionComponent } from 'react'\nimport Box from '@material-ui/core/Box'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport MainView from './modules/MainView'\nimport ProjectTabs from './modules/ProjectTabs'\nimport ControlerBar from './modules/ControlerBar'\nimport ImageGlyphList from './modules/ImageGlyphList'\n\nconst useStyles = makeStyles(({ palette, shadows }) =>\n  createStyles({\n    root: {\n      position: 'relative',\n      flex: 1,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      width: 0,\n    },\n    tabsRoot: {\n      minHeight: 'auto',\n      width: '100%',\n      boxShadow: shadows[2],\n      background: palette.background.sidebar,\n      position: 'relative',\n      zIndex: 1,\n    },\n    tabRoot: {\n      minHeight: 'auto',\n      minWidth: 'auto',\n      maxWidth: 'none',\n      height: '34px',\n      color: 'rgba(255,255,255,0.5)',\n      borderRight: `1px solid ${palette.background.default}`,\n      textTransform: 'none',\n    },\n    tabSelected: {\n      background: palette.background.default,\n    },\n    tabWrapper: {\n      color: '#FFF',\n    },\n  }),\n)\n\nconst WorkSpace: FunctionComponent<unknown> = () => {\n  const classes = useStyles()\n\n  return (\n    <Box className={classes.root}>\n      <ProjectTabs />\n      <MainView />\n      <ControlerBar />\n      <ImageGlyphList />\n    </Box>\n  )\n}\n\nexport default WorkSpace\n","import React from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    close: {\r\n      padding: theme.spacing(0.5),\r\n    },\r\n  }),\r\n)\r\n\r\nexport interface SnackbarMessage {\r\n  message: string\r\n  key: number\r\n}\r\n\r\nexport interface State {\r\n  open: boolean\r\n  snackPack: SnackbarMessage[]\r\n  messageInfo?: SnackbarMessage\r\n}\r\n\r\nexport default function ConsecutiveSnackbars() {\r\n  const classes = useStyles()\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  const handleClose = (\r\n    event: React.SyntheticEvent | MouseEvent,\r\n    reason?: string,\r\n  ) => {\r\n    if (reason === 'clickaway') {\r\n      return\r\n    }\r\n    setOpen(false)\r\n  }\r\n\r\n  const updateVersion = React.useCallback((event) => {\r\n    const { detail } = event\r\n    setOpen(!!detail)\r\n  }, [])\r\n\r\n  const handleReload = () => {\r\n    window.location.reload()\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    window.addEventListener('updateVerion', updateVersion, false)\r\n    return () =>\r\n      window.removeEventListener('updateVerion', updateVersion, false)\r\n  }, [updateVersion])\r\n\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'left',\r\n      }}\r\n      open={open}\r\n      onClose={handleClose}\r\n      message='New version is available.'\r\n      action={\r\n        <React.Fragment>\r\n          <Button color='secondary' size='small' onClick={handleReload}>\r\n            Reload\r\n          </Button>\r\n          <IconButton\r\n            aria-label='close'\r\n            color='inherit'\r\n            className={classes.close}\r\n            onClick={handleClose}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </React.Fragment>\r\n      }\r\n    />\r\n  )\r\n}\r\n","import React, { FunctionComponent } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport Box from '@material-ui/core/Box'\r\nimport Backdrop from '@material-ui/core/Backdrop'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\r\n\r\nimport useStores from 'src/store/hooks'\r\n\r\nimport LeftBar from '../LeftBar'\r\nimport TitleBar from '../TitleBar'\r\nimport RightBar from '../RightBar'\r\nimport WorkSpace from '../WorkSpace'\r\nimport UpdateToast from './UpdateToast'\r\n\r\nconst useStyles = makeStyles(({ zIndex }) =>\r\n  createStyles({\r\n    root: {\r\n      width: '100%',\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    content: {\r\n      display: 'flex',\r\n      flex: 1,\r\n      position: 'relative',\r\n      height: '0',\r\n      overflow: 'hidden',\r\n    },\r\n    loadingBackdrop: {\r\n      zIndex: zIndex.drawer + 1,\r\n      color: '#fff',\r\n    },\r\n  }),\r\n)\r\n\r\nconst Wrap: FunctionComponent<unknown> = () => {\r\n  const classes = useStyles()\r\n  const { ui } = useStores()\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <TitleBar />\r\n      <UpdateToast />\r\n      <Box className={classes.content}>\r\n        <LeftBar />\r\n        <WorkSpace />\r\n        <RightBar />\r\n      </Box>\r\n      <Backdrop className={classes.loadingBackdrop} open={!!ui.globalLoader}>\r\n        <CircularProgress color='inherit' />\r\n      </Backdrop>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default observer(Wrap)\r\n","import React from 'react'\r\nimport { ThemeProvider } from '@material-ui/core/styles'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport { Provider } from 'mobx-react'\r\n\r\nimport createStore from 'src/store'\r\nimport theme from './theme'\r\n\r\nimport Wrap from './layout/Wrap'\r\n\r\nfunction App(): JSX.Element {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Provider {...createStore()}>\r\n        <Wrap />\r\n      </Provider>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n)\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA',\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.',\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister()\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message)\r\n      })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './app/App'\r\n\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register({\r\n  onUpdate(registration) {\r\n    const worker = registration.waiting\r\n    if (!worker) return\r\n\r\n    const channel = new MessageChannel()\r\n\r\n    channel.port1.onmessage = () => {\r\n      window.dispatchEvent(new CustomEvent('updateVerion', { detail: worker }))\r\n    }\r\n\r\n    worker.postMessage({ type: 'SKIP_WAITING' }, [channel.port2])\r\n  },\r\n})\r\n"],"sourceRoot":""}